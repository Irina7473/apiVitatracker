Time:16.05.2023 10:20:52 Hello APP
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: J:\2BAD\VitatrackerB4\Vitatracker_Backend\MedicineReminderAPI
Time:16.05.2023 10:31:15 Hello APP
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: J:\2BAD\VitatrackerB4\Vitatracker_Backend\MedicineReminderAPI
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (256ms) [Parameters=[@__auth_Email_0='?' (Size = 64)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE `u`.`Email` = @__auth_Email_0
LIMIT 1
Executed DbCommand (202ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (206ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `n`.`Id`, `n`.`IsEnabled`, `n`.`IsFloat`, `n`.`MedicalControl`, `n`.`NextCourseStart`, `n`.`UserId`
FROM `NotificationSettings` AS `n`
WHERE `n`.`Id` = @__Id_0
LIMIT 1
Time:16.05.2023 11:19:31 Hello APP
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: J:\2BAD\VitatrackerB4\Vitatracker_Backend\MedicineReminderAPI
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (248ms) [Parameters=[@__auth_Email_0='?' (Size = 64)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE `u`.`Email` = @__auth_Email_0
LIMIT 1
Executed DbCommand (201ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (207ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `n`.`Id`, `n`.`IsEnabled`, `n`.`IsFloat`, `n`.`MedicalControl`, `n`.`NextCourseStart`, `n`.`UserId`
FROM `NotificationSettings` AS `n`
WHERE `n`.`UserId` = @__Id_0
LIMIT 1
Executed DbCommand (203ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (209ms) [Parameters=[@p7='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (DbType = DateTime), @p2='?' (Size = 64), @p3='?' (Size = 120), @p4='?' (DbType = Boolean), @p5='?' (Size = 4000), @p6='?' (DbType = DateTime)], CommandType='Text', CommandTimeout='30']
SET AUTOCOMMIT = 1;
UPDATE `Users` SET `Avatar` = @p0, `Created` = @p1, `Email` = @p2, `Name` = @p3, `NotUsed` = @p4, `Password` = @p5, `Updated` = @p6
WHERE `Id` = @p7;
SELECT ROW_COUNT();
Executed DbCommand (203ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (203ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `n`.`Id`, `n`.`IsEnabled`, `n`.`IsFloat`, `n`.`MedicalControl`, `n`.`NextCourseStart`, `n`.`UserId`
FROM `NotificationSettings` AS `n`
WHERE `n`.`UserId` = @__Id_0
LIMIT 1
Time:16.05.2023 22:15:22 Hello APP
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: G:\2BAD\VitatrackerB4\Vitatracker_Backend\MedicineReminderAPI
Time:16.05.2023 22:34:38 Hello APP
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: G:\2BAD\VitatrackerB4\Vitatracker_Backend\MedicineReminderAPI
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (343ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (283ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `n`.`Id`, `n`.`IsEnabled`, `n`.`IsFloat`, `n`.`MedicalControl`, `n`.`NextCourseStart`, `n`.`UserId`
FROM `NotificationSettings` AS `n`
WHERE `n`.`UserId` = @__Id_0
LIMIT 1
Executed DbCommand (211ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (212ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (216ms) [Parameters=[@p7='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (DbType = DateTime), @p2='?' (Size = 64), @p3='?' (Size = 120), @p4='?' (DbType = Boolean), @p5='?' (Size = 4000), @p6='?' (DbType = DateTime)], CommandType='Text', CommandTimeout='30']
SET AUTOCOMMIT = 1;
UPDATE `Users` SET `Avatar` = @p0, `Created` = @p1, `Email` = @p2, `Name` = @p3, `NotUsed` = @p4, `Password` = @p5, `Updated` = @p6
WHERE `Id` = @p7;
SELECT ROW_COUNT();
Executed DbCommand (212ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (210ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `n`.`Id`, `n`.`IsEnabled`, `n`.`IsFloat`, `n`.`MedicalControl`, `n`.`NextCourseStart`, `n`.`UserId`
FROM `NotificationSettings` AS `n`
WHERE `n`.`UserId` = @__Id_0
LIMIT 1
Time:16.05.2023 22:40:13 Hello APP
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: G:\2BAD\VitatrackerB4\Vitatracker_Backend\MedicineReminderAPI
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (304ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (235ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `n`.`Id`, `n`.`IsEnabled`, `n`.`IsFloat`, `n`.`MedicalControl`, `n`.`NextCourseStart`, `n`.`UserId`
FROM `NotificationSettings` AS `n`
WHERE `n`.`UserId` = @__Id_0
LIMIT 1
Executed DbCommand (219ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (219ms) [Parameters=[@p5='?' (DbType = Int32), @p0='?' (DbType = Boolean), @p1='?' (DbType = Boolean), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?' (DbType = Int32), @p13='?' (DbType = Int32), @p6='?' (Size = 4000), @p7='?' (DbType = DateTime), @p8='?' (Size = 64), @p9='?' (Size = 120), @p10='?' (DbType = Boolean), @p11='?' (Size = 4000), @p12='?' (DbType = DateTime)], CommandType='Text', CommandTimeout='30']
UPDATE `NotificationSettings` SET `IsEnabled` = @p0, `IsFloat` = @p1, `MedicalControl` = @p2, `NextCourseStart` = @p3, `UserId` = @p4
WHERE `Id` = @p5;
SELECT ROW_COUNT();

UPDATE `Users` SET `Avatar` = @p6, `Created` = @p7, `Email` = @p8, `Name` = @p9, `NotUsed` = @p10, `Password` = @p11, `Updated` = @p12
WHERE `Id` = @p13;
SELECT ROW_COUNT();
Executed DbCommand (214ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (214ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `n`.`Id`, `n`.`IsEnabled`, `n`.`IsFloat`, `n`.`MedicalControl`, `n`.`NextCourseStart`, `n`.`UserId`
FROM `NotificationSettings` AS `n`
WHERE `n`.`UserId` = @__Id_0
LIMIT 1
Time:16.05.2023 22:52:35 Hello APP
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: G:\2BAD\VitatrackerB4\Vitatracker_Backend\MedicineReminderAPI
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (309ms) [Parameters=[@__auth_Email_0='?' (Size = 64)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE `u`.`Email` = @__auth_Email_0
LIMIT 1
Time:16.05.2023 23:05:45 Hello APP
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: G:\2BAD\VitatrackerB4\Vitatracker_Backend\MedicineReminderAPI
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (299ms) [Parameters=[@__auth_Email_0='?' (Size = 64)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE `u`.`Email` = @__auth_Email_0
LIMIT 1
Time:16.05.2023 23:08:57 Hello APP
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: G:\2BAD\VitatrackerB4\Vitatracker_Backend\MedicineReminderAPI
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (277ms) [Parameters=[@__auth_Email_0='?' (Size = 64)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE `u`.`Email` = @__auth_Email_0
LIMIT 1
Executed DbCommand (212ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (226ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `n`.`Id`, `n`.`IsEnabled`, `n`.`IsFloat`, `n`.`MedicalControl`, `n`.`NextCourseStart`, `n`.`UserId`
FROM `NotificationSettings` AS `n`
WHERE `n`.`UserId` = @__Id_0
LIMIT 1
Executed DbCommand (211ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (212ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `n`.`Id`, `n`.`IsEnabled`, `n`.`IsFloat`, `n`.`MedicalControl`, `n`.`NextCourseStart`, `n`.`UserId`
FROM `NotificationSettings` AS `n`
WHERE `n`.`UserId` = @__Id_0
LIMIT 1
Executed DbCommand (211ms) [Parameters=[@__user_Email_0='?' (Size = 64)], CommandType='Text', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM `Users` AS `u`
    WHERE `u`.`Email` = @__user_Email_0)
Executed DbCommand (211ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 64), @p2='?' (Size = 120), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
INSERT INTO `Users` (`Avatar`, `Email`, `Name`, `Password`)
VALUES (@p0, @p1, @p2, @p3);
SELECT `Id`, `Created`, `NotUsed`, `Updated`
FROM `Users`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();
Executed DbCommand (212ms) [Parameters=[@p4='?' (DbType = Boolean), @p5='?' (DbType = Boolean), @p6='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
INSERT INTO `NotificationSettings` (`IsEnabled`, `NextCourseStart`, `UserId`)
VALUES (@p4, @p5, @p6);
SELECT `Id`, `IsFloat`, `MedicalControl`
FROM `NotificationSettings`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();
Executed DbCommand (213ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (211ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `n`.`Id`, `n`.`IsEnabled`, `n`.`IsFloat`, `n`.`MedicalControl`, `n`.`NextCourseStart`, `n`.`UserId`
FROM `NotificationSettings` AS `n`
WHERE `n`.`UserId` = @__Id_0
LIMIT 1
Time:16.05.2023 23:20:04 Hello APP
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: G:\2BAD\VitatrackerB4\Vitatracker_Backend\MedicineReminderAPI
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (287ms) [Parameters=[@__user_Email_0='?' (Size = 64)], CommandType='Text', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM `Users` AS `u`
    WHERE `u`.`Email` = @__user_Email_0)
Executed DbCommand (221ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 64), @p2='?' (Size = 120), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
INSERT INTO `Users` (`Avatar`, `Email`, `Name`, `Password`)
VALUES (@p0, @p1, @p2, @p3);
SELECT `Id`, `Created`, `NotUsed`, `Updated`
FROM `Users`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();
Executed DbCommand (223ms) [Parameters=[@p4='?' (DbType = Boolean), @p5='?' (DbType = Boolean), @p6='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
INSERT INTO `NotificationSettings` (`IsEnabled`, `NextCourseStart`, `UserId`)
VALUES (@p4, @p5, @p6);
SELECT `Id`, `IsFloat`, `MedicalControl`
FROM `NotificationSettings`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();
Time:16.05.2023 23:23:52 Hello APP
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: G:\2BAD\VitatrackerB4\Vitatracker_Backend\MedicineReminderAPI
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (306ms) [Parameters=[@__auth_Email_0='?' (Size = 64)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE `u`.`Email` = @__auth_Email_0
LIMIT 1
Time:17.05.2023 14:00:06 Hello APP
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: J:\2BAD\VitatrackerB4\Vitatracker_Backend\MedicineReminderAPI
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (255ms) [Parameters=[@__auth_Email_0='?' (Size = 64)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE `u`.`Email` = @__auth_Email_0
LIMIT 1
Executed DbCommand (203ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (211ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `n`.`Id`, `n`.`IsEnabled`, `n`.`IsFloat`, `n`.`MedicalControl`, `n`.`NextCourseStart`, `n`.`UserId`
FROM `NotificationSettings` AS `n`
WHERE `n`.`UserId` = @__Id_0
LIMIT 1
Executed DbCommand (202ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Failed executing DbCommand (214ms) [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (DbType = Boolean), @p2='?' (DbType = Int32), @p10='?' (DbType = Int32), @p3='?' (Size = 4000), @p4='?' (DbType = DateTime), @p5='?' (Size = 64), @p6='?' (Size = 120), @p7='?' (DbType = Boolean), @p8='?' (Size = 4000), @p9='?' (DbType = DateTime)], CommandType='Text', CommandTimeout='30']
INSERT INTO `NotificationSettings` (`IsEnabled`, `NextCourseStart`, `UserId`)
VALUES (@p0, @p1, @p2);
SELECT `Id`, `IsFloat`, `MedicalControl`
FROM `NotificationSettings`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();

UPDATE `Users` SET `Avatar` = @p3, `Created` = @p4, `Email` = @p5, `Name` = @p6, `NotUsed` = @p7, `Password` = @p8, `Updated` = @p9
WHERE `Id` = @p10;
SELECT ROW_COUNT();
An exception occurred in the database while saving changes for context type 'MedicineReminderAPI.Models.AppApiContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> MySqlConnector.MySqlException (0x80004005): Duplicate entry '79' for key 'notificationsettings.IX_NotificationSettings_UserId'
   at MySqlConnector.Core.ServerSession.ReceiveReplyAsyncAwaited(ValueTask`1 task) in /_/src/MySqlConnector/Core/ServerSession.cs:line 962
   at MySqlConnector.Core.ResultSet.ReadResultSetHeaderAsync(IOBehavior ioBehavior) in /_/src/MySqlConnector/Core/ResultSet.cs:line 43
   at MySqlConnector.MySqlDataReader.ActivateResultSet(CancellationToken cancellationToken) in /_/src/MySqlConnector/MySqlDataReader.cs:line 130
   at MySqlConnector.MySqlDataReader.CreateAsync(CommandListPosition commandListPosition, ICommandPayloadCreator payloadCreator, IDictionary`2 cachedProcedures, IMySqlCommand command, CommandBehavior behavior, Activity activity, IOBehavior ioBehavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/MySqlDataReader.cs:line 468
   at MySqlConnector.Core.CommandExecutor.ExecuteReaderAsync(IReadOnlyList`1 commands, ICommandPayloadCreator payloadCreator, CommandBehavior behavior, Activity activity, IOBehavior ioBehavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/Core/CommandExecutor.cs:line 56
   at MySqlConnector.MySqlCommand.ExecuteReaderAsync(CommandBehavior behavior, IOBehavior ioBehavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/MySqlCommand.cs:line 344
   at MySqlConnector.MySqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/MySqlCommand.cs:line 337
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Pomelo.EntityFrameworkCore.MySql.Storage.Internal.MySqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
An unhandled exception has occurred while executing the request.
Executed DbCommand (203ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (204ms) [Parameters=[@p5='?' (DbType = Int32), @p0='?' (DbType = Boolean), @p1='?' (DbType = Boolean), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?' (DbType = Int32), @p13='?' (DbType = Int32), @p6='?' (Size = 4000), @p7='?' (DbType = DateTime), @p8='?' (Size = 64), @p9='?' (Size = 120), @p10='?' (DbType = Boolean), @p11='?' (Size = 4000), @p12='?' (DbType = DateTime)], CommandType='Text', CommandTimeout='30']
UPDATE `NotificationSettings` SET `IsEnabled` = @p0, `IsFloat` = @p1, `MedicalControl` = @p2, `NextCourseStart` = @p3, `UserId` = @p4
WHERE `Id` = @p5;
SELECT ROW_COUNT();

UPDATE `Users` SET `Avatar` = @p6, `Created` = @p7, `Email` = @p8, `Name` = @p9, `NotUsed` = @p10, `Password` = @p11, `Updated` = @p12
WHERE `Id` = @p13;
SELECT ROW_COUNT();
Executed DbCommand (200ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (203ms) [Parameters=[@p5='?' (DbType = Int32), @p0='?' (DbType = Boolean), @p1='?' (DbType = Boolean), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?' (DbType = Int32), @p13='?' (DbType = Int32), @p6='?' (Size = 4000), @p7='?' (DbType = DateTime), @p8='?' (Size = 64), @p9='?' (Size = 120), @p10='?' (DbType = Boolean), @p11='?' (Size = 4000), @p12='?' (DbType = DateTime)], CommandType='Text', CommandTimeout='30']
UPDATE `NotificationSettings` SET `IsEnabled` = @p0, `IsFloat` = @p1, `MedicalControl` = @p2, `NextCourseStart` = @p3, `UserId` = @p4
WHERE `Id` = @p5;
SELECT ROW_COUNT();

UPDATE `Users` SET `Avatar` = @p6, `Created` = @p7, `Email` = @p8, `Name` = @p9, `NotUsed` = @p10, `Password` = @p11, `Updated` = @p12
WHERE `Id` = @p13;
SELECT ROW_COUNT();
Executed DbCommand (203ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (204ms) [Parameters=[@p5='?' (DbType = Int32), @p0='?' (DbType = Boolean), @p1='?' (DbType = Boolean), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?' (DbType = Int32), @p13='?' (DbType = Int32), @p6='?' (Size = 4000), @p7='?' (DbType = DateTime), @p8='?' (Size = 64), @p9='?' (Size = 120), @p10='?' (DbType = Boolean), @p11='?' (Size = 4000), @p12='?' (DbType = DateTime)], CommandType='Text', CommandTimeout='30']
UPDATE `NotificationSettings` SET `IsEnabled` = @p0, `IsFloat` = @p1, `MedicalControl` = @p2, `NextCourseStart` = @p3, `UserId` = @p4
WHERE `Id` = @p5;
SELECT ROW_COUNT();

UPDATE `Users` SET `Avatar` = @p6, `Created` = @p7, `Email` = @p8, `Name` = @p9, `NotUsed` = @p10, `Password` = @p11, `Updated` = @p12
WHERE `Id` = @p13;
SELECT ROW_COUNT();
Executed DbCommand (203ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (204ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `n`.`Id`, `n`.`IsEnabled`, `n`.`IsFloat`, `n`.`MedicalControl`, `n`.`NextCourseStart`, `n`.`UserId`
FROM `NotificationSettings` AS `n`
WHERE `n`.`UserId` = @__Id_0
LIMIT 1
Executed DbCommand (199ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (199ms) [Parameters=[@p5='?' (DbType = Int32), @p0='?' (DbType = Boolean), @p1='?' (DbType = Boolean), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?' (DbType = Int32), @p13='?' (DbType = Int32), @p6='?' (Size = 4000), @p7='?' (DbType = DateTime), @p8='?' (Size = 64), @p9='?' (Size = 120), @p10='?' (DbType = Boolean), @p11='?' (Size = 4000), @p12='?' (DbType = DateTime)], CommandType='Text', CommandTimeout='30']
UPDATE `NotificationSettings` SET `IsEnabled` = @p0, `IsFloat` = @p1, `MedicalControl` = @p2, `NextCourseStart` = @p3, `UserId` = @p4
WHERE `Id` = @p5;
SELECT ROW_COUNT();

UPDATE `Users` SET `Avatar` = @p6, `Created` = @p7, `Email` = @p8, `Name` = @p9, `NotUsed` = @p10, `Password` = @p11, `Updated` = @p12
WHERE `Id` = @p13;
SELECT ROW_COUNT();
Executed DbCommand (200ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (199ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `n`.`Id`, `n`.`IsEnabled`, `n`.`IsFloat`, `n`.`MedicalControl`, `n`.`NextCourseStart`, `n`.`UserId`
FROM `NotificationSettings` AS `n`
WHERE `n`.`UserId` = @__Id_0
LIMIT 1
Executed DbCommand (199ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (199ms) [Parameters=[@p5='?' (DbType = Int32), @p0='?' (DbType = Boolean), @p1='?' (DbType = Boolean), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?' (DbType = Int32), @p13='?' (DbType = Int32), @p6='?' (Size = 4000), @p7='?' (DbType = DateTime), @p8='?' (Size = 64), @p9='?' (Size = 120), @p10='?' (DbType = Boolean), @p11='?' (Size = 4000), @p12='?' (DbType = DateTime)], CommandType='Text', CommandTimeout='30']
UPDATE `NotificationSettings` SET `IsEnabled` = @p0, `IsFloat` = @p1, `MedicalControl` = @p2, `NextCourseStart` = @p3, `UserId` = @p4
WHERE `Id` = @p5;
SELECT ROW_COUNT();

UPDATE `Users` SET `Avatar` = @p6, `Created` = @p7, `Email` = @p8, `Name` = @p9, `NotUsed` = @p10, `Password` = @p11, `Updated` = @p12
WHERE `Id` = @p13;
SELECT ROW_COUNT();
Executed DbCommand (199ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (200ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `n`.`Id`, `n`.`IsEnabled`, `n`.`IsFloat`, `n`.`MedicalControl`, `n`.`NextCourseStart`, `n`.`UserId`
FROM `NotificationSettings` AS `n`
WHERE `n`.`UserId` = @__Id_0
LIMIT 1
Executed DbCommand (210ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (209ms) [Parameters=[@p5='?' (DbType = Int32), @p0='?' (DbType = Boolean), @p1='?' (DbType = Boolean), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?' (DbType = Int32), @p13='?' (DbType = Int32), @p6='?' (Size = 4000), @p7='?' (DbType = DateTime), @p8='?' (Size = 64), @p9='?' (Size = 120), @p10='?' (DbType = Boolean), @p11='?' (Size = 4000), @p12='?' (DbType = DateTime)], CommandType='Text', CommandTimeout='30']
UPDATE `NotificationSettings` SET `IsEnabled` = @p0, `IsFloat` = @p1, `MedicalControl` = @p2, `NextCourseStart` = @p3, `UserId` = @p4
WHERE `Id` = @p5;
SELECT ROW_COUNT();

UPDATE `Users` SET `Avatar` = @p6, `Created` = @p7, `Email` = @p8, `Name` = @p9, `NotUsed` = @p10, `Password` = @p11, `Updated` = @p12
WHERE `Id` = @p13;
SELECT ROW_COUNT();
Executed DbCommand (208ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (208ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `n`.`Id`, `n`.`IsEnabled`, `n`.`IsFloat`, `n`.`MedicalControl`, `n`.`NextCourseStart`, `n`.`UserId`
FROM `NotificationSettings` AS `n`
WHERE `n`.`UserId` = @__Id_0
LIMIT 1
Executed DbCommand (209ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Failed executing DbCommand (213ms) [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (DbType = Boolean), @p2='?' (DbType = Int32), @p10='?' (DbType = Int32), @p3='?' (Size = 4000), @p4='?' (DbType = DateTime), @p5='?' (Size = 64), @p6='?' (Size = 120), @p7='?' (DbType = Boolean), @p8='?' (Size = 4000), @p9='?' (DbType = DateTime)], CommandType='Text', CommandTimeout='30']
INSERT INTO `NotificationSettings` (`IsEnabled`, `NextCourseStart`, `UserId`)
VALUES (@p0, @p1, @p2);
SELECT `Id`, `IsFloat`, `MedicalControl`
FROM `NotificationSettings`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();

UPDATE `Users` SET `Avatar` = @p3, `Created` = @p4, `Email` = @p5, `Name` = @p6, `NotUsed` = @p7, `Password` = @p8, `Updated` = @p9
WHERE `Id` = @p10;
SELECT ROW_COUNT();
An exception occurred in the database while saving changes for context type 'MedicineReminderAPI.Models.AppApiContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> MySqlConnector.MySqlException (0x80004005): Duplicate entry '79' for key 'notificationsettings.IX_NotificationSettings_UserId'
   at MySqlConnector.Core.ServerSession.ReceiveReplyAsyncAwaited(ValueTask`1 task) in /_/src/MySqlConnector/Core/ServerSession.cs:line 964
   at MySqlConnector.Core.ResultSet.ReadResultSetHeaderAsync(IOBehavior ioBehavior) in /_/src/MySqlConnector/Core/ResultSet.cs:line 175
   at MySqlConnector.MySqlDataReader.ActivateResultSet(CancellationToken cancellationToken) in /_/src/MySqlConnector/MySqlDataReader.cs:line 133
   at MySqlConnector.MySqlDataReader.CreateAsync(CommandListPosition commandListPosition, ICommandPayloadCreator payloadCreator, IDictionary`2 cachedProcedures, IMySqlCommand command, CommandBehavior behavior, Activity activity, IOBehavior ioBehavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/MySqlDataReader.cs:line 493
   at MySqlConnector.Core.CommandExecutor.ExecuteReaderAsync(IReadOnlyList`1 commands, ICommandPayloadCreator payloadCreator, CommandBehavior behavior, Activity activity, IOBehavior ioBehavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/Core/CommandExecutor.cs:line 77
   at MySqlConnector.MySqlCommand.ExecuteReaderAsync(CommandBehavior behavior, IOBehavior ioBehavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/MySqlCommand.cs:line 345
   at MySqlConnector.MySqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/MySqlCommand.cs:line 337
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Pomelo.EntityFrameworkCore.MySql.Storage.Internal.MySqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
An unhandled exception has occurred while executing the request.
Executed DbCommand (208ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Failed executing DbCommand (210ms) [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (DbType = Boolean), @p2='?' (DbType = Int32), @p10='?' (DbType = Int32), @p3='?' (Size = 4000), @p4='?' (DbType = DateTime), @p5='?' (Size = 64), @p6='?' (Size = 120), @p7='?' (DbType = Boolean), @p8='?' (Size = 4000), @p9='?' (DbType = DateTime)], CommandType='Text', CommandTimeout='30']
INSERT INTO `NotificationSettings` (`IsEnabled`, `NextCourseStart`, `UserId`)
VALUES (@p0, @p1, @p2);
SELECT `Id`, `IsFloat`, `MedicalControl`
FROM `NotificationSettings`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();

UPDATE `Users` SET `Avatar` = @p3, `Created` = @p4, `Email` = @p5, `Name` = @p6, `NotUsed` = @p7, `Password` = @p8, `Updated` = @p9
WHERE `Id` = @p10;
SELECT ROW_COUNT();
An exception occurred in the database while saving changes for context type 'MedicineReminderAPI.Models.AppApiContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> MySqlConnector.MySqlException (0x80004005): Duplicate entry '79' for key 'notificationsettings.IX_NotificationSettings_UserId'
   at MySqlConnector.Core.ServerSession.ReceiveReplyAsyncAwaited(ValueTask`1 task) in /_/src/MySqlConnector/Core/ServerSession.cs:line 964
   at MySqlConnector.Core.ResultSet.ReadResultSetHeaderAsync(IOBehavior ioBehavior) in /_/src/MySqlConnector/Core/ResultSet.cs:line 175
   at MySqlConnector.MySqlDataReader.ActivateResultSet(CancellationToken cancellationToken) in /_/src/MySqlConnector/MySqlDataReader.cs:line 133
   at MySqlConnector.MySqlDataReader.CreateAsync(CommandListPosition commandListPosition, ICommandPayloadCreator payloadCreator, IDictionary`2 cachedProcedures, IMySqlCommand command, CommandBehavior behavior, Activity activity, IOBehavior ioBehavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/MySqlDataReader.cs:line 493
   at MySqlConnector.Core.CommandExecutor.ExecuteReaderAsync(IReadOnlyList`1 commands, ICommandPayloadCreator payloadCreator, CommandBehavior behavior, Activity activity, IOBehavior ioBehavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/Core/CommandExecutor.cs:line 77
   at MySqlConnector.MySqlCommand.ExecuteReaderAsync(CommandBehavior behavior, IOBehavior ioBehavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/MySqlCommand.cs:line 345
   at MySqlConnector.MySqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/MySqlCommand.cs:line 337
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Pomelo.EntityFrameworkCore.MySql.Storage.Internal.MySqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
An unhandled exception has occurred while executing the request.
Time:17.05.2023 14:17:11 Hello APP
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: J:\2BAD\VitatrackerB4\Vitatracker_Backend\MedicineReminderAPI
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (256ms) [Parameters=[@__auth_Email_0='?' (Size = 64)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE `u`.`Email` = @__auth_Email_0
LIMIT 1
Executed DbCommand (199ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (204ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `n`.`Id`, `n`.`IsEnabled`, `n`.`IsFloat`, `n`.`MedicalControl`, `n`.`NextCourseStart`, `n`.`UserId`
FROM `NotificationSettings` AS `n`
WHERE `n`.`UserId` = @__Id_0
LIMIT 1
Executed DbCommand (202ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (204ms) [Parameters=[@p5='?' (DbType = Int32), @p0='?' (DbType = Boolean), @p1='?' (DbType = Boolean), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?' (DbType = Int32), @p13='?' (DbType = Int32), @p6='?' (Size = 4000), @p7='?' (DbType = DateTime), @p8='?' (Size = 64), @p9='?' (Size = 120), @p10='?' (DbType = Boolean), @p11='?' (Size = 4000), @p12='?' (DbType = DateTime)], CommandType='Text', CommandTimeout='30']
UPDATE `NotificationSettings` SET `IsEnabled` = @p0, `IsFloat` = @p1, `MedicalControl` = @p2, `NextCourseStart` = @p3, `UserId` = @p4
WHERE `Id` = @p5;
SELECT ROW_COUNT();

UPDATE `Users` SET `Avatar` = @p6, `Created` = @p7, `Email` = @p8, `Name` = @p9, `NotUsed` = @p10, `Password` = @p11, `Updated` = @p12
WHERE `Id` = @p13;
SELECT ROW_COUNT();
Executed DbCommand (200ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (199ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `n`.`Id`, `n`.`IsEnabled`, `n`.`IsFloat`, `n`.`MedicalControl`, `n`.`NextCourseStart`, `n`.`UserId`
FROM `NotificationSettings` AS `n`
WHERE `n`.`UserId` = @__Id_0
LIMIT 1
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Time:24.05.2023 12:48:54 Hello APP
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: J:\2BAD\VitatrackerB4\Vitatracker_Backend\MedicineReminderAPI
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (238ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
An exception occurred in the database while saving changes for context type 'MedicineReminderAPI.Models.AppApiContext'.
System.InvalidOperationException: A second operation was started on this context instance before a previous operation completed. This is usually caused by different threads concurrently using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.
   at Microsoft.EntityFrameworkCore.Infrastructure.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Pomelo.EntityFrameworkCore.MySql.Storage.Internal.MySqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
An unhandled exception has occurred while executing the request.
Failed executing DbCommand (222ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `n`.`Id`, `n`.`IsEnabled`, `n`.`IsFloat`, `n`.`MedicalControl`, `n`.`NextCourseStart`, `n`.`UserId`
FROM `NotificationSettings` AS `n`
WHERE `n`.`UserId` = @__Id_0
LIMIT 1
An exception occurred while iterating over the results of a query for context type 'MedicineReminderAPI.Models.AppApiContext'.
System.NullReferenceException: Object reference not set to an instance of an object.
   at MySqlConnector.MySqlDataReader.ActivateResultSet(CancellationToken cancellationToken) in /_/src/MySqlConnector/MySqlDataReader.cs:line 111
   at MySqlConnector.MySqlDataReader.CreateAsync(CommandListPosition commandListPosition, ICommandPayloadCreator payloadCreator, IDictionary`2 cachedProcedures, IMySqlCommand command, CommandBehavior behavior, Activity activity, IOBehavior ioBehavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/MySqlDataReader.cs:line 468
   at MySqlConnector.Core.CommandExecutor.ExecuteReaderAsync(IReadOnlyList`1 commands, ICommandPayloadCreator payloadCreator, CommandBehavior behavior, Activity activity, IOBehavior ioBehavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/Core/CommandExecutor.cs:line 56
   at MySqlConnector.MySqlCommand.ExecuteReaderAsync(CommandBehavior behavior, IOBehavior ioBehavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/MySqlCommand.cs:line 344
   at MySqlConnector.MySqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/MySqlCommand.cs:line 337
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Pomelo.EntityFrameworkCore.MySql.Storage.Internal.MySqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
Time:24.05.2023 12:58:17 Hello APP
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: J:\2BAD\VitatrackerB4\Vitatracker_Backend\MedicineReminderAPI
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (243ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (213ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `n`.`Id`, `n`.`IsEnabled`, `n`.`IsFloat`, `n`.`MedicalControl`, `n`.`NextCourseStart`, `n`.`UserId`
FROM `NotificationSettings` AS `n`
WHERE `n`.`UserId` = @__Id_0
LIMIT 1
Executed DbCommand (202ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
An exception occurred in the database while saving changes for context type 'MedicineReminderAPI.Models.AppApiContext'.
System.InvalidOperationException: A second operation was started on this context instance before a previous operation completed. This is usually caused by different threads concurrently using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.
   at Microsoft.EntityFrameworkCore.Infrastructure.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Pomelo.EntityFrameworkCore.MySql.Storage.Internal.MySqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
An unhandled exception has occurred while executing the request.
Failed executing DbCommand (1ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `n`.`Id`, `n`.`IsEnabled`, `n`.`IsFloat`, `n`.`MedicalControl`, `n`.`NextCourseStart`, `n`.`UserId`
FROM `NotificationSettings` AS `n`
WHERE `n`.`UserId` = @__Id_0
LIMIT 1
An exception occurred while iterating over the results of a query for context type 'MedicineReminderAPI.Models.AppApiContext'.
System.ObjectDisposedException: Cannot access a disposed object.
Object name: 'MySqlConnection'.
   at MySqlConnector.MySqlConnection.VerifyNotDisposed() in /_/src/MySqlConnector/MySqlConnection.cs:line 1002
   at MySqlConnector.MySqlConnection.get_Session() in /_/src/MySqlConnector/MySqlConnection.cs:line 745
   at MySqlConnector.Core.ICancellableCommandExtensions.ResetCommandTimeout(ICancellableCommand command) in /_/src/MySqlConnector/Core/ICancellableCommand.cs:line 56
   at MySqlConnector.MySqlCommand.ExecuteReaderAsync(CommandBehavior behavior, IOBehavior ioBehavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/MySqlCommand.cs:line 342
   at MySqlConnector.MySqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/MySqlCommand.cs:line 337
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Pomelo.EntityFrameworkCore.MySql.Storage.Internal.MySqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
Time:24.05.2023 13:08:51 Hello APP
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: J:\2BAD\VitatrackerB4\Vitatracker_Backend\MedicineReminderAPI
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (252ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (213ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `n`.`Id`, `n`.`IsEnabled`, `n`.`IsFloat`, `n`.`MedicalControl`, `n`.`NextCourseStart`, `n`.`UserId`
FROM `NotificationSettings` AS `n`
WHERE `n`.`UserId` = @__Id_0
LIMIT 1
Executed DbCommand (204ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
An exception occurred in the database while saving changes for context type 'MedicineReminderAPI.Models.AppApiContext'.
System.InvalidOperationException: A second operation was started on this context instance before a previous operation completed. This is usually caused by different threads concurrently using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.
   at Microsoft.EntityFrameworkCore.Infrastructure.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Pomelo.EntityFrameworkCore.MySql.Storage.Internal.MySqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
An unhandled exception has occurred while executing the request.
Failed executing DbCommand (1ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `n`.`Id`, `n`.`IsEnabled`, `n`.`IsFloat`, `n`.`MedicalControl`, `n`.`NextCourseStart`, `n`.`UserId`
FROM `NotificationSettings` AS `n`
WHERE `n`.`UserId` = @__Id_0
LIMIT 1
An exception occurred while iterating over the results of a query for context type 'MedicineReminderAPI.Models.AppApiContext'.
System.ObjectDisposedException: Cannot access a disposed object.
Object name: 'MySqlConnection'.
   at MySqlConnector.MySqlConnection.VerifyNotDisposed() in /_/src/MySqlConnector/MySqlConnection.cs:line 1002
   at MySqlConnector.MySqlConnection.get_Session() in /_/src/MySqlConnector/MySqlConnection.cs:line 745
   at MySqlConnector.Core.ICancellableCommandExtensions.ResetCommandTimeout(ICancellableCommand command) in /_/src/MySqlConnector/Core/ICancellableCommand.cs:line 56
   at MySqlConnector.MySqlCommand.ExecuteReaderAsync(CommandBehavior behavior, IOBehavior ioBehavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/MySqlCommand.cs:line 342
   at MySqlConnector.MySqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/MySqlCommand.cs:line 337
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Pomelo.EntityFrameworkCore.MySql.Storage.Internal.MySqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
Time:24.05.2023 13:14:48 Hello APP
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: J:\2BAD\VitatrackerB4\Vitatracker_Backend\MedicineReminderAPI
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (237ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (210ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `n`.`Id`, `n`.`IsEnabled`, `n`.`IsFloat`, `n`.`MedicalControl`, `n`.`NextCourseStart`, `n`.`UserId`
FROM `NotificationSettings` AS `n`
WHERE `n`.`UserId` = @__Id_0
LIMIT 1
Executed DbCommand (204ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (203ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `n`.`Id`, `n`.`IsEnabled`, `n`.`IsFloat`, `n`.`MedicalControl`, `n`.`NextCourseStart`, `n`.`UserId`
FROM `NotificationSettings` AS `n`
WHERE `n`.`UserId` = @__Id_0
LIMIT 1
Executed DbCommand (205ms) [Parameters=[@p5='?' (DbType = Int32), @p0='?' (DbType = Boolean), @p1='?' (DbType = Boolean), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?' (DbType = Int32), @p13='?' (DbType = Int32), @p6='?' (Size = 4000), @p7='?' (DbType = DateTime), @p8='?' (Size = 64), @p9='?' (Size = 120), @p10='?' (DbType = Boolean), @p11='?' (Size = 4000), @p12='?' (DbType = DateTime)], CommandType='Text', CommandTimeout='30']
UPDATE `NotificationSettings` SET `IsEnabled` = @p0, `IsFloat` = @p1, `MedicalControl` = @p2, `NextCourseStart` = @p3, `UserId` = @p4
WHERE `Id` = @p5;
SELECT ROW_COUNT();

UPDATE `Users` SET `Avatar` = @p6, `Created` = @p7, `Email` = @p8, `Name` = @p9, `NotUsed` = @p10, `Password` = @p11, `Updated` = @p12
WHERE `Id` = @p13;
SELECT ROW_COUNT();
Executed DbCommand (204ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (204ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `n`.`Id`, `n`.`IsEnabled`, `n`.`IsFloat`, `n`.`MedicalControl`, `n`.`NextCourseStart`, `n`.`UserId`
FROM `NotificationSettings` AS `n`
WHERE `n`.`UserId` = @__Id_0
LIMIT 1
Executed DbCommand (204ms) [Parameters=[@p5='?' (DbType = Int32), @p0='?' (DbType = Boolean), @p1='?' (DbType = Boolean), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?' (DbType = Int32), @p13='?' (DbType = Int32), @p6='?' (Size = 4000), @p7='?' (DbType = DateTime), @p8='?' (Size = 64), @p9='?' (Size = 120), @p10='?' (DbType = Boolean), @p11='?' (Size = 4000), @p12='?' (DbType = DateTime)], CommandType='Text', CommandTimeout='30']
UPDATE `NotificationSettings` SET `IsEnabled` = @p0, `IsFloat` = @p1, `MedicalControl` = @p2, `NextCourseStart` = @p3, `UserId` = @p4
WHERE `Id` = @p5;
SELECT ROW_COUNT();

UPDATE `Users` SET `Avatar` = @p6, `Created` = @p7, `Email` = @p8, `Name` = @p9, `NotUsed` = @p10, `Password` = @p11, `Updated` = @p12
WHERE `Id` = @p13;
SELECT ROW_COUNT();
Executed DbCommand (204ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (204ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `n`.`Id`, `n`.`IsEnabled`, `n`.`IsFloat`, `n`.`MedicalControl`, `n`.`NextCourseStart`, `n`.`UserId`
FROM `NotificationSettings` AS `n`
WHERE `n`.`UserId` = @__Id_0
LIMIT 1
Executed DbCommand (210ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (209ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `n`.`Id`, `n`.`IsEnabled`, `n`.`IsFloat`, `n`.`MedicalControl`, `n`.`NextCourseStart`, `n`.`UserId`
FROM `NotificationSettings` AS `n`
WHERE `n`.`UserId` = @__Id_0
LIMIT 1
Executed DbCommand (209ms) [Parameters=[@p5='?' (DbType = Int32), @p0='?' (DbType = Boolean), @p1='?' (DbType = Boolean), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?' (DbType = Int32), @p13='?' (DbType = Int32), @p6='?' (Size = 4000), @p7='?' (DbType = DateTime), @p8='?' (Size = 64), @p9='?' (Size = 120), @p10='?' (DbType = Boolean), @p11='?' (Size = 4000), @p12='?' (DbType = DateTime)], CommandType='Text', CommandTimeout='30']
UPDATE `NotificationSettings` SET `IsEnabled` = @p0, `IsFloat` = @p1, `MedicalControl` = @p2, `NextCourseStart` = @p3, `UserId` = @p4
WHERE `Id` = @p5;
SELECT ROW_COUNT();

UPDATE `Users` SET `Avatar` = @p6, `Created` = @p7, `Email` = @p8, `Name` = @p9, `NotUsed` = @p10, `Password` = @p11, `Updated` = @p12
WHERE `Id` = @p13;
SELECT ROW_COUNT();
Executed DbCommand (208ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (208ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `n`.`Id`, `n`.`IsEnabled`, `n`.`IsFloat`, `n`.`MedicalControl`, `n`.`NextCourseStart`, `n`.`UserId`
FROM `NotificationSettings` AS `n`
WHERE `n`.`UserId` = @__Id_0
LIMIT 1
Executed DbCommand (208ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (208ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `n`.`Id`, `n`.`IsEnabled`, `n`.`IsFloat`, `n`.`MedicalControl`, `n`.`NextCourseStart`, `n`.`UserId`
FROM `NotificationSettings` AS `n`
WHERE `n`.`UserId` = @__Id_0
LIMIT 1
Executed DbCommand (209ms) [Parameters=[@p5='?' (DbType = Int32), @p0='?' (DbType = Boolean), @p1='?' (DbType = Boolean), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?' (DbType = Int32), @p13='?' (DbType = Int32), @p6='?' (Size = 4000), @p7='?' (DbType = DateTime), @p8='?' (Size = 64), @p9='?' (Size = 120), @p10='?' (DbType = Boolean), @p11='?' (Size = 4000), @p12='?' (DbType = DateTime)], CommandType='Text', CommandTimeout='30']
UPDATE `NotificationSettings` SET `IsEnabled` = @p0, `IsFloat` = @p1, `MedicalControl` = @p2, `NextCourseStart` = @p3, `UserId` = @p4
WHERE `Id` = @p5;
SELECT ROW_COUNT();

UPDATE `Users` SET `Avatar` = @p6, `Created` = @p7, `Email` = @p8, `Name` = @p9, `NotUsed` = @p10, `Password` = @p11, `Updated` = @p12
WHERE `Id` = @p13;
SELECT ROW_COUNT();
Executed DbCommand (208ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (209ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `n`.`Id`, `n`.`IsEnabled`, `n`.`IsFloat`, `n`.`MedicalControl`, `n`.`NextCourseStart`, `n`.`UserId`
FROM `NotificationSettings` AS `n`
WHERE `n`.`UserId` = @__Id_0
LIMIT 1
Time:24.05.2023 19:58:49 Hello APP
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: G:\2BAD\VitatrackerB4\Vitatracker_Backend\MedicineReminderAPI
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (293ms) [Parameters=[@__auth_Email_0='?' (Size = 64)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE `u`.`Email` = @__auth_Email_0
LIMIT 1
Executed DbCommand (209ms) [Parameters=[@__auth_Email_0='?' (Size = 64)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE `u`.`Email` = @__auth_Email_0
LIMIT 1
Executed DbCommand (209ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (222ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `n`.`Id`, `n`.`IsEnabled`, `n`.`IsFloat`, `n`.`MedicalControl`, `n`.`NextCourseStart`, `n`.`UserId`
FROM `NotificationSettings` AS `n`
WHERE `n`.`UserId` = @__Id_0
LIMIT 1
Executed DbCommand (219ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (220ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `n`.`Id`, `n`.`IsEnabled`, `n`.`IsFloat`, `n`.`MedicalControl`, `n`.`NextCourseStart`, `n`.`UserId`
FROM `NotificationSettings` AS `n`
WHERE `n`.`UserId` = @__Id_0
LIMIT 1
Executed DbCommand (218ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (218ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `n`.`Id`, `n`.`IsEnabled`, `n`.`IsFloat`, `n`.`MedicalControl`, `n`.`NextCourseStart`, `n`.`UserId`
FROM `NotificationSettings` AS `n`
WHERE `n`.`UserId` = @__Id_0
LIMIT 1
Executed DbCommand (224ms) [Parameters=[@p5='?' (DbType = Int32), @p0='?' (DbType = Boolean), @p1='?' (DbType = Boolean), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?' (DbType = Int32), @p13='?' (DbType = Int32), @p6='?' (Size = 4000), @p7='?' (DbType = DateTime), @p8='?' (Size = 64), @p9='?' (Size = 120), @p10='?' (DbType = Boolean), @p11='?' (Size = 4000), @p12='?' (DbType = DateTime)], CommandType='Text', CommandTimeout='30']
UPDATE `NotificationSettings` SET `IsEnabled` = @p0, `IsFloat` = @p1, `MedicalControl` = @p2, `NextCourseStart` = @p3, `UserId` = @p4
WHERE `Id` = @p5;
SELECT ROW_COUNT();

UPDATE `Users` SET `Avatar` = @p6, `Created` = @p7, `Email` = @p8, `Name` = @p9, `NotUsed` = @p10, `Password` = @p11, `Updated` = @p12
WHERE `Id` = @p13;
SELECT ROW_COUNT();
Executed DbCommand (217ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (217ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `n`.`Id`, `n`.`IsEnabled`, `n`.`IsFloat`, `n`.`MedicalControl`, `n`.`NextCourseStart`, `n`.`UserId`
FROM `NotificationSettings` AS `n`
WHERE `n`.`UserId` = @__Id_0
LIMIT 1
