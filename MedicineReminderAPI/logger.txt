
Time:20.04.2023 10:16:14 Hello APP
Now listening on: https://localhost:7102
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: J:\2BAD\VitatrackerB\MedicineReminderAPI
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (242ms) [Parameters=[@__user_Email_0='?' (Size = 64)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE `u`.`Email` = @__user_Email_0
LIMIT 1
Executed DbCommand (196ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 64), @p2='?' (Size = 120), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
INSERT INTO `Users` (`Avatar`, `Email`, `Name`, `Password`)
VALUES (@p0, @p1, @p2, @p3);
SELECT `Id`, `Created`, `NotUsed`, `Updated`
FROM `Users`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();
Executed DbCommand (200ms) [Parameters=[@p4='?' (DbType = Boolean), @p5='?' (DbType = Boolean), @p6='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
INSERT INTO `NotificationSettings` (`IsEnabled`, `NextCourseStart`, `UserId`)
VALUES (@p4, @p5, @p6);
SELECT `Id`, `IsFloat`, `MedicalControl`
FROM `NotificationSettings`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();
Time:20.04.2023 10:19:32 Hello APP
Now listening on: https://localhost:7102
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: J:\2BAD\VitatrackerB\MedicineReminderAPI
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (249ms) [Parameters=[@__user_Email_0='?' (Size = 64)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE `u`.`Email` = @__user_Email_0
LIMIT 1
Executed DbCommand (204ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 64), @p2='?' (Size = 120), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
INSERT INTO `Users` (`Avatar`, `Email`, `Name`, `Password`)
VALUES (@p0, @p1, @p2, @p3);
SELECT `Id`, `Created`, `NotUsed`, `Updated`
FROM `Users`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();
Executed DbCommand (203ms) [Parameters=[@p4='?' (DbType = Boolean), @p5='?' (DbType = Boolean), @p6='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
INSERT INTO `NotificationSettings` (`IsEnabled`, `NextCourseStart`, `UserId`)
VALUES (@p4, @p5, @p6);
SELECT `Id`, `IsFloat`, `MedicalControl`
FROM `NotificationSettings`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();
Executed DbCommand (197ms) [Parameters=[@__user_Email_0='?' (Size = 64)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE `u`.`Email` = @__user_Email_0
LIMIT 1
Executed DbCommand (197ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 64), @p2='?' (Size = 120), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
INSERT INTO `Users` (`Avatar`, `Email`, `Name`, `Password`)
VALUES (@p0, @p1, @p2, @p3);
SELECT `Id`, `Created`, `NotUsed`, `Updated`
FROM `Users`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();
Executed DbCommand (197ms) [Parameters=[@p4='?' (DbType = Boolean), @p5='?' (DbType = Boolean), @p6='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
INSERT INTO `NotificationSettings` (`IsEnabled`, `NextCourseStart`, `UserId`)
VALUES (@p4, @p5, @p6);
SELECT `Id`, `IsFloat`, `MedicalControl`
FROM `NotificationSettings`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();
Time:20.04.2023 10:22:20 Hello APP
Now listening on: https://localhost:7102
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: J:\2BAD\VitatrackerB\MedicineReminderAPI
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (235ms) [Parameters=[@__user_Email_0='?' (Size = 64)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE `u`.`Email` = @__user_Email_0
LIMIT 1
Executed DbCommand (203ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 64), @p2='?' (Size = 120), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
INSERT INTO `Users` (`Avatar`, `Email`, `Name`, `Password`)
VALUES (@p0, @p1, @p2, @p3);
SELECT `Id`, `Created`, `NotUsed`, `Updated`
FROM `Users`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();
Executed DbCommand (203ms) [Parameters=[@p4='?' (DbType = Boolean), @p5='?' (DbType = Boolean), @p6='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
INSERT INTO `NotificationSettings` (`IsEnabled`, `NextCourseStart`, `UserId`)
VALUES (@p4, @p5, @p6);
SELECT `Id`, `IsFloat`, `MedicalControl`
FROM `NotificationSettings`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();


Time:20.04.2023 19:31:37 Hello APP
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: G:\2BAD\VitatrackerB\MedicineReminderAPI
Time:20.04.2023 19:33:47 Hello APP
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: G:\2BAD\VitatrackerB\MedicineReminderAPI


Time:20.04.2023 19:36:35 Hello APP
Now listening on: https://localhost:7102
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: G:\2BAD\VitatrackerB\MedicineReminderAPI

Time:20.04.2023 19:42:07 Hello APP
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: G:\2BAD\VitatrackerB\MedicineReminderAPI

Time:20.04.2023 20:29:15 Hello APP
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: G:\2BAD\VitatrackerB\MedicineReminderAPI

Time:20.04.2023 20:30:35 Hello APP
Now listening on: https://localhost:7102
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: G:\2BAD\VitatrackerB\MedicineReminderAPI
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (1,191ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='db_a97535_irina74' AND TABLE_NAME='__EFMigrationsHistory';
Executed DbCommand (1,059ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='db_a97535_irina74' AND TABLE_NAME='__EFMigrationsHistory';
Executed DbCommand (205ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT `MigrationId`, `ProductVersion`
FROM `__EFMigrationsHistory`
ORDER BY `MigrationId`;
Applying migration '20230424104154_init'.
Executed DbCommand (204ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER DATABASE CHARACTER SET utf8mb4;
Failed executing DbCommand (209ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `Users` (
    `Id` int NOT NULL AUTO_INCREMENT,
    `Name` varchar(120) CHARACTER SET utf8mb4 NOT NULL,
    `Email` varchar(64) CHARACTER SET utf8mb4 NOT NULL,
    `Password` longtext CHARACTER SET utf8mb4 NOT NULL,
    `Avatar` longtext CHARACTER SET utf8mb4 NULL,
    `NotUsed` tinyint(1) NOT NULL DEFAULT FALSE,
    `Created` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    `Updated` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    CONSTRAINT `PK_Users` PRIMARY KEY (`Id`)
) CHARACTER SET=utf8mb4;
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (20ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE DATABASE `api_db`;
Executed DbCommand (66ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `__EFMigrationsHistory` (
    `MigrationId` varchar(150) CHARACTER SET utf8mb4 NOT NULL,
    `ProductVersion` varchar(32) CHARACTER SET utf8mb4 NOT NULL,
    CONSTRAINT `PK___EFMigrationsHistory` PRIMARY KEY (`MigrationId`)
) CHARACTER SET=utf8mb4;
Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='api_db' AND TABLE_NAME='__EFMigrationsHistory';
Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT `MigrationId`, `ProductVersion`
FROM `__EFMigrationsHistory`
ORDER BY `MigrationId`;
Applying migration '20230424104154_init'.
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER DATABASE CHARACTER SET utf8mb4;
Executed DbCommand (28ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `Users` (
    `Id` int NOT NULL AUTO_INCREMENT,
    `Name` varchar(120) CHARACTER SET utf8mb4 NOT NULL,
    `Email` varchar(64) CHARACTER SET utf8mb4 NOT NULL,
    `Password` longtext CHARACTER SET utf8mb4 NOT NULL,
    `Avatar` longtext CHARACTER SET utf8mb4 NULL,
    `NotUsed` tinyint(1) NOT NULL DEFAULT FALSE,
    `Created` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    `Updated` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    CONSTRAINT `PK_Users` PRIMARY KEY (`Id`)
) CHARACTER SET=utf8mb4;
Executed DbCommand (30ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `NotificationSettings` (
    `Id` int NOT NULL AUTO_INCREMENT,
    `UserId` int NOT NULL,
    `IsEnabled` tinyint(1) NOT NULL DEFAULT TRUE,
    `IsFloat` tinyint(1) NOT NULL DEFAULT FALSE,
    `MedicalControl` tinyint(1) NOT NULL DEFAULT FALSE,
    `NextCourseStart` tinyint(1) NOT NULL DEFAULT TRUE,
    CONSTRAINT `PK_NotificationSettings` PRIMARY KEY (`Id`),
    CONSTRAINT `FK_NotificationSettings_Users_UserId` FOREIGN KEY (`UserId`) REFERENCES `Users` (`Id`) ON DELETE CASCADE
) CHARACTER SET=utf8mb4;
Executed DbCommand (15ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `Remedys` (
    `Id` int NOT NULL AUTO_INCREMENT,
    `UserId` int NOT NULL,
    `Name` varchar(128) CHARACTER SET utf8mb4 NOT NULL,
    `Description` longtext CHARACTER SET utf8mb4 NULL,
    `Comment` longtext CHARACTER SET utf8mb4 NULL,
    `Type` int NOT NULL,
    `Icon` int NOT NULL DEFAULT 0,
    `Color` int NOT NULL DEFAULT 0,
    `Dose` int NULL,
    `MeasureUnit` int NULL,
    `BeforeFood` int NULL,
    `Photo` longtext CHARACTER SET utf8mb4 NULL,
    `NotUsed` tinyint(1) NOT NULL DEFAULT FALSE,
    `Created` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    `Updated` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    CONSTRAINT `PK_Remedys` PRIMARY KEY (`Id`),
    CONSTRAINT `FK_Remedys_Users_UserId` FOREIGN KEY (`UserId`) REFERENCES `Users` (`Id`) ON DELETE CASCADE
) CHARACTER SET=utf8mb4;
Executed DbCommand (14ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `Courses` (
    `Id` int NOT NULL AUTO_INCREMENT,
    `RemedyId` int NOT NULL,
    `Comment` longtext CHARACTER SET utf8mb4 NULL,
    `Regime` int NOT NULL,
    `StartDate` bigint NOT NULL,
    `EndDate` bigint NULL,
    `RemindDate` bigint NULL,
    `Interval` bigint NULL,
    `IsFinished` tinyint(1) NOT NULL DEFAULT FALSE,
    `IsInfinite` tinyint(1) NOT NULL DEFAULT FALSE,
    `NotUsed` tinyint(1) NOT NULL DEFAULT FALSE,
    `Created` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    `Updated` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    CONSTRAINT `PK_Courses` PRIMARY KEY (`Id`),
    CONSTRAINT `FK_Courses_Remedys_RemedyId` FOREIGN KEY (`RemedyId`) REFERENCES `Remedys` (`Id`) ON DELETE CASCADE
) CHARACTER SET=utf8mb4;
Executed DbCommand (18ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `HistoryRemedys` (
    `Id` int NOT NULL AUTO_INCREMENT,
    `RemedyId` int NOT NULL,
    `Dose` int NOT NULL,
    `MeasureUnit` int NOT NULL,
    `Created` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    CONSTRAINT `PK_HistoryRemedys` PRIMARY KEY (`Id`),
    CONSTRAINT `FK_HistoryRemedys_Remedys_RemedyId` FOREIGN KEY (`RemedyId`) REFERENCES `Remedys` (`Id`) ON DELETE CASCADE
) CHARACTER SET=utf8mb4;
Executed DbCommand (40ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `Usages` (
    `Id` int NOT NULL AUTO_INCREMENT,
    `CourseId` int NOT NULL,
    `UseTime` bigint NOT NULL,
    `FactUseTime` bigint NULL,
    `Quantity` int NULL,
    `NotUsed` tinyint(1) NOT NULL DEFAULT FALSE,
    `Created` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    `Updated` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    CONSTRAINT `PK_Usages` PRIMARY KEY (`Id`),
    CONSTRAINT `FK_Usages_Courses_CourseId` FOREIGN KEY (`CourseId`) REFERENCES `Courses` (`Id`) ON DELETE CASCADE
) CHARACTER SET=utf8mb4;
Executed DbCommand (13ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX `IX_Courses_RemedyId` ON `Courses` (`RemedyId`);
Executed DbCommand (10ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX `IX_HistoryRemedys_RemedyId` ON `HistoryRemedys` (`RemedyId`);
Executed DbCommand (16ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE UNIQUE INDEX `IX_NotificationSettings_UserId` ON `NotificationSettings` (`UserId`);
Executed DbCommand (10ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX `IX_Remedys_UserId` ON `Remedys` (`UserId`);
Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX `IX_Usages_CourseId` ON `Usages` (`CourseId`);
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO `__EFMigrationsHistory` (`MigrationId`, `ProductVersion`)
VALUES ('20230424104154_init', '7.0.5');
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE DATABASE `api_db`;
Executed DbCommand (21ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `__EFMigrationsHistory` (
    `MigrationId` varchar(150) CHARACTER SET utf8mb4 NOT NULL,
    `ProductVersion` varchar(32) CHARACTER SET utf8mb4 NOT NULL,
    CONSTRAINT `PK___EFMigrationsHistory` PRIMARY KEY (`MigrationId`)
) CHARACTER SET=utf8mb4;
Executed DbCommand (10ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='api_db' AND TABLE_NAME='__EFMigrationsHistory';
Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT `MigrationId`, `ProductVersion`
FROM `__EFMigrationsHistory`
ORDER BY `MigrationId`;
Applying migration '20230424104154_init'.
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER DATABASE CHARACTER SET utf8mb4;
Executed DbCommand (10ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `Users` (
    `Id` int NOT NULL AUTO_INCREMENT,
    `Name` varchar(120) CHARACTER SET utf8mb4 NOT NULL,
    `Email` varchar(64) CHARACTER SET utf8mb4 NOT NULL,
    `Password` longtext CHARACTER SET utf8mb4 NOT NULL,
    `Avatar` longtext CHARACTER SET utf8mb4 NULL,
    `NotUsed` tinyint(1) NOT NULL DEFAULT FALSE,
    `Created` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    `Updated` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    CONSTRAINT `PK_Users` PRIMARY KEY (`Id`)
) CHARACTER SET=utf8mb4;
Executed DbCommand (31ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `NotificationSettings` (
    `Id` int NOT NULL AUTO_INCREMENT,
    `UserId` int NOT NULL,
    `IsEnabled` tinyint(1) NOT NULL DEFAULT TRUE,
    `IsFloat` tinyint(1) NOT NULL DEFAULT FALSE,
    `MedicalControl` tinyint(1) NOT NULL DEFAULT FALSE,
    `NextCourseStart` tinyint(1) NOT NULL DEFAULT TRUE,
    CONSTRAINT `PK_NotificationSettings` PRIMARY KEY (`Id`),
    CONSTRAINT `FK_NotificationSettings_Users_UserId` FOREIGN KEY (`UserId`) REFERENCES `Users` (`Id`) ON DELETE CASCADE
) CHARACTER SET=utf8mb4;
Executed DbCommand (31ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `Remedys` (
    `Id` int NOT NULL AUTO_INCREMENT,
    `UserId` int NOT NULL,
    `Name` varchar(128) CHARACTER SET utf8mb4 NOT NULL,
    `Description` longtext CHARACTER SET utf8mb4 NULL,
    `Comment` longtext CHARACTER SET utf8mb4 NULL,
    `Type` int NOT NULL,
    `Icon` int NOT NULL DEFAULT 0,
    `Color` int NOT NULL DEFAULT 0,
    `Dose` int NULL,
    `MeasureUnit` int NULL,
    `BeforeFood` int NULL,
    `Photo` longtext CHARACTER SET utf8mb4 NULL,
    `NotUsed` tinyint(1) NOT NULL DEFAULT FALSE,
    `Created` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    `Updated` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    CONSTRAINT `PK_Remedys` PRIMARY KEY (`Id`),
    CONSTRAINT `FK_Remedys_Users_UserId` FOREIGN KEY (`UserId`) REFERENCES `Users` (`Id`) ON DELETE CASCADE
) CHARACTER SET=utf8mb4;
Executed DbCommand (32ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `Courses` (
    `Id` int NOT NULL AUTO_INCREMENT,
    `RemedyId` int NOT NULL,
    `Comment` longtext CHARACTER SET utf8mb4 NULL,
    `Regime` int NOT NULL,
    `StartDate` bigint NOT NULL,
    `EndDate` bigint NULL,
    `RemindDate` bigint NULL,
    `Interval` bigint NULL,
    `IsFinished` tinyint(1) NOT NULL DEFAULT FALSE,
    `IsInfinite` tinyint(1) NOT NULL DEFAULT FALSE,
    `NotUsed` tinyint(1) NOT NULL DEFAULT FALSE,
    `Created` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    `Updated` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    CONSTRAINT `PK_Courses` PRIMARY KEY (`Id`),
    CONSTRAINT `FK_Courses_Remedys_RemedyId` FOREIGN KEY (`RemedyId`) REFERENCES `Remedys` (`Id`) ON DELETE CASCADE
) CHARACTER SET=utf8mb4;
Executed DbCommand (31ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `HistoryRemedys` (
    `Id` int NOT NULL AUTO_INCREMENT,
    `RemedyId` int NOT NULL,
    `Dose` int NOT NULL,
    `MeasureUnit` int NOT NULL,
    `Created` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    CONSTRAINT `PK_HistoryRemedys` PRIMARY KEY (`Id`),
    CONSTRAINT `FK_HistoryRemedys_Remedys_RemedyId` FOREIGN KEY (`RemedyId`) REFERENCES `Remedys` (`Id`) ON DELETE CASCADE
) CHARACTER SET=utf8mb4;
Executed DbCommand (30ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `Usages` (
    `Id` int NOT NULL AUTO_INCREMENT,
    `CourseId` int NOT NULL,
    `UseTime` bigint NOT NULL,
    `FactUseTime` bigint NULL,
    `Quantity` int NULL,
    `NotUsed` tinyint(1) NOT NULL DEFAULT FALSE,
    `Created` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    `Updated` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    CONSTRAINT `PK_Usages` PRIMARY KEY (`Id`),
    CONSTRAINT `FK_Usages_Courses_CourseId` FOREIGN KEY (`CourseId`) REFERENCES `Courses` (`Id`) ON DELETE CASCADE
) CHARACTER SET=utf8mb4;
Executed DbCommand (29ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX `IX_Courses_RemedyId` ON `Courses` (`RemedyId`);
Executed DbCommand (30ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX `IX_HistoryRemedys_RemedyId` ON `HistoryRemedys` (`RemedyId`);
Executed DbCommand (34ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE UNIQUE INDEX `IX_NotificationSettings_UserId` ON `NotificationSettings` (`UserId`);
Executed DbCommand (58ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX `IX_Remedys_UserId` ON `Remedys` (`UserId`);
Executed DbCommand (65ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX `IX_Usages_CourseId` ON `Usages` (`CourseId`);
Executed DbCommand (14ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO `__EFMigrationsHistory` (`MigrationId`, `ProductVersion`)
VALUES ('20230424104154_init', '7.0.5');
Applying migration '20230424150304_init_Identity'.
Executed DbCommand (15ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE `NotificationSettings` DROP FOREIGN KEY `FK_NotificationSettings_Users_UserId`;
Executed DbCommand (17ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE `Remedys` DROP FOREIGN KEY `FK_Remedys_Users_UserId`;
Executed DbCommand (20ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE `Users` DROP COLUMN `Created`;
Executed DbCommand (16ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE `Users` DROP COLUMN `NotUsed`;
Executed DbCommand (16ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE `Users` DROP COLUMN `Updated`;
Failed executing DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE `Users` RENAME COLUMN `Avatar` TO `SecurityStamp`;
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (10ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='api_db' AND TABLE_NAME='__EFMigrationsHistory';
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='api_db' AND TABLE_NAME='__EFMigrationsHistory';
Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT `MigrationId`, `ProductVersion`
FROM `__EFMigrationsHistory`
ORDER BY `MigrationId`;
Applying migration '20230424150304_init_Identity'.
Failed executing DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE `NotificationSettings` DROP FOREIGN KEY `FK_NotificationSettings_Users_UserId`;
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (12ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='api_db' AND TABLE_NAME='__EFMigrationsHistory';
Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='api_db' AND TABLE_NAME='__EFMigrationsHistory';
Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT `MigrationId`, `ProductVersion`
FROM `__EFMigrationsHistory`
ORDER BY `MigrationId`;
Applying migration '20230424150304_init_Identity'.
Failed executing DbCommand (11ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE `NotificationSettings` DROP FOREIGN KEY `FK_NotificationSettings_Users_UserId`;
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (16ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='api_db' AND TABLE_NAME='__EFMigrationsHistory';
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='api_db' AND TABLE_NAME='__EFMigrationsHistory';
Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT `MigrationId`, `ProductVersion`
FROM `__EFMigrationsHistory`
ORDER BY `MigrationId`;
Applying migration '20230424150304_init_Identity'.
Failed executing DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE `Users` DROP COLUMN `Created`;
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (15ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='api_db' AND TABLE_NAME='__EFMigrationsHistory';
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='api_db' AND TABLE_NAME='__EFMigrationsHistory';
Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT `MigrationId`, `ProductVersion`
FROM `__EFMigrationsHistory`
ORDER BY `MigrationId`;
Applying migration '20230424150304_init_Identity'.
Executed DbCommand (56ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE `Users` MODIFY COLUMN `Password` varchar(16) CHARACTER SET utf8mb4 NULL;
Executed DbCommand (27ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE `Users` MODIFY COLUMN `Name` varchar(120) CHARACTER SET utf8mb4 NULL;
Executed DbCommand (26ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE `Users` MODIFY COLUMN `Email` varchar(64) CHARACTER SET utf8mb4 NULL;
Executed DbCommand (57ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE `Users` MODIFY COLUMN `Id` varchar(255) CHARACTER SET utf8mb4 NOT NULL;
Executed DbCommand (29ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE `Users` ADD `AccessFailedCount` int NOT NULL DEFAULT 0;
Executed DbCommand (20ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE `Users` ADD `ConcurrencyStamp` longtext CHARACTER SET utf8mb4 NULL;
Executed DbCommand (19ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE `Users` ADD `EmailConfirmed` tinyint(1) NOT NULL DEFAULT FALSE;
Executed DbCommand (15ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE `Users` ADD `LockoutEnabled` tinyint(1) NOT NULL DEFAULT FALSE;
Executed DbCommand (16ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE `Users` ADD `LockoutEnd` datetime(6) NULL;
Executed DbCommand (16ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE `Users` ADD `NormalizedEmail` longtext CHARACTER SET utf8mb4 NULL;
Executed DbCommand (16ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE `Users` ADD `NormalizedUserName` longtext CHARACTER SET utf8mb4 NULL;
Executed DbCommand (24ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE `Users` ADD `PhoneNumber` longtext CHARACTER SET utf8mb4 NULL;
Executed DbCommand (24ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE `Users` ADD `PhoneNumberConfirmed` tinyint(1) NOT NULL DEFAULT FALSE;
Executed DbCommand (15ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE `Users` ADD `TwoFactorEnabled` tinyint(1) NOT NULL DEFAULT FALSE;
Executed DbCommand (25ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `AspNetUsers` (
    `Id` int NOT NULL AUTO_INCREMENT,
    `Name` varchar(120) CHARACTER SET utf8mb4 NOT NULL,
    `Email` varchar(256) CHARACTER SET utf8mb4 NOT NULL,
    `Password` longtext CHARACTER SET utf8mb4 NOT NULL,
    `Avatar` longtext CHARACTER SET utf8mb4 NULL,
    `NotUsed` tinyint(1) NOT NULL DEFAULT FALSE,
    `Created` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    `Updated` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    `UserName` varchar(256) CHARACTER SET utf8mb4 NULL,
    `NormalizedUserName` varchar(256) CHARACTER SET utf8mb4 NULL,
    `NormalizedEmail` varchar(256) CHARACTER SET utf8mb4 NULL,
    `EmailConfirmed` tinyint(1) NOT NULL,
    `PasswordHash` longtext CHARACTER SET utf8mb4 NULL,
    `SecurityStamp` longtext CHARACTER SET utf8mb4 NULL,
    `ConcurrencyStamp` longtext CHARACTER SET utf8mb4 NULL,
    `PhoneNumber` longtext CHARACTER SET utf8mb4 NULL,
    `PhoneNumberConfirmed` tinyint(1) NOT NULL,
    `TwoFactorEnabled` tinyint(1) NOT NULL,
    `LockoutEnd` datetime(6) NULL,
    `LockoutEnabled` tinyint(1) NOT NULL,
    `AccessFailedCount` int NOT NULL,
    CONSTRAINT `PK_AspNetUsers` PRIMARY KEY (`Id`)
) CHARACTER SET=utf8mb4;
Executed DbCommand (34ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `UserClaims` (
    `Id` int NOT NULL AUTO_INCREMENT,
    `UserId` int NOT NULL,
    `ClaimType` longtext CHARACTER SET utf8mb4 NULL,
    `ClaimValue` longtext CHARACTER SET utf8mb4 NULL,
    `Discriminator` longtext CHARACTER SET utf8mb4 NOT NULL,
    CONSTRAINT `PK_UserClaims` PRIMARY KEY (`Id`),
    CONSTRAINT `FK_UserClaims_AspNetUsers_UserId` FOREIGN KEY (`UserId`) REFERENCES `AspNetUsers` (`Id`) ON DELETE CASCADE
) CHARACTER SET=utf8mb4;
Executed DbCommand (28ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `UserLogins` (
    `LoginProvider` varchar(128) CHARACTER SET utf8mb4 NOT NULL,
    `ProviderKey` varchar(128) CHARACTER SET utf8mb4 NOT NULL,
    `ProviderDisplayName` longtext CHARACTER SET utf8mb4 NULL,
    `UserId` int NOT NULL,
    `Discriminator` longtext CHARACTER SET utf8mb4 NOT NULL,
    CONSTRAINT `PK_UserLogins` PRIMARY KEY (`LoginProvider`, `ProviderKey`),
    CONSTRAINT `FK_UserLogins_AspNetUsers_UserId` FOREIGN KEY (`UserId`) REFERENCES `AspNetUsers` (`Id`) ON DELETE CASCADE
) CHARACTER SET=utf8mb4;
Executed DbCommand (15ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `UserTokens` (
    `UserId` int NOT NULL,
    `LoginProvider` varchar(128) CHARACTER SET utf8mb4 NOT NULL,
    `Name` varchar(128) CHARACTER SET utf8mb4 NOT NULL,
    `Value` longtext CHARACTER SET utf8mb4 NULL,
    `Discriminator` longtext CHARACTER SET utf8mb4 NOT NULL,
    CONSTRAINT `PK_UserTokens` PRIMARY KEY (`UserId`, `LoginProvider`, `Name`),
    CONSTRAINT `FK_UserTokens_AspNetUsers_UserId` FOREIGN KEY (`UserId`) REFERENCES `AspNetUsers` (`Id`) ON DELETE CASCADE
) CHARACTER SET=utf8mb4;
Executed DbCommand (20ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX `EmailIndex` ON `AspNetUsers` (`NormalizedEmail`);
Executed DbCommand (12ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE UNIQUE INDEX `UserNameIndex` ON `AspNetUsers` (`NormalizedUserName`);
Executed DbCommand (16ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX `IX_UserClaims_UserId` ON `UserClaims` (`UserId`);
Executed DbCommand (15ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX `IX_UserLogins_UserId` ON `UserLogins` (`UserId`);
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO `__EFMigrationsHistory` (`MigrationId`, `ProductVersion`)
VALUES ('20230424150304_init_Identity', '7.0.5');
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE DATABASE `api_db`;
Executed DbCommand (14ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `__EFMigrationsHistory` (
    `MigrationId` varchar(150) CHARACTER SET utf8mb4 NOT NULL,
    `ProductVersion` varchar(32) CHARACTER SET utf8mb4 NOT NULL,
    CONSTRAINT `PK___EFMigrationsHistory` PRIMARY KEY (`MigrationId`)
) CHARACTER SET=utf8mb4;
Executed DbCommand (15ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='api_db' AND TABLE_NAME='__EFMigrationsHistory';
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT `MigrationId`, `ProductVersion`
FROM `__EFMigrationsHistory`
ORDER BY `MigrationId`;
Applying migration '20230424153928_init_Identity'.
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER DATABASE CHARACTER SET utf8mb4;
Executed DbCommand (13ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `Users` (
    `Id` int NOT NULL AUTO_INCREMENT,
    `Name` varchar(120) CHARACTER SET utf8mb4 NOT NULL,
    `Email` varchar(64) CHARACTER SET utf8mb4 NOT NULL,
    `Password` varchar(16) CHARACTER SET utf8mb4 NOT NULL,
    `Avatar` longtext CHARACTER SET utf8mb4 NULL,
    `NotUsed` tinyint(1) NOT NULL DEFAULT FALSE,
    `Created` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    `Updated` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    `NormalizedUserName` varchar(256) CHARACTER SET utf8mb4 NULL,
    `NormalizedEmail` varchar(256) CHARACTER SET utf8mb4 NULL,
    `EmailConfirmed` tinyint(1) NOT NULL,
    `SecurityStamp` longtext CHARACTER SET utf8mb4 NULL,
    `ConcurrencyStamp` longtext CHARACTER SET utf8mb4 NULL,
    `PhoneNumber` longtext CHARACTER SET utf8mb4 NULL,
    `PhoneNumberConfirmed` tinyint(1) NOT NULL,
    `TwoFactorEnabled` tinyint(1) NOT NULL,
    `LockoutEnd` datetime(6) NULL,
    `LockoutEnabled` tinyint(1) NOT NULL,
    `AccessFailedCount` int NOT NULL,
    CONSTRAINT `PK_Users` PRIMARY KEY (`Id`)
) CHARACTER SET=utf8mb4;
Executed DbCommand (37ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `NotificationSettings` (
    `Id` int NOT NULL AUTO_INCREMENT,
    `UserId` int NOT NULL,
    `IsEnabled` tinyint(1) NOT NULL DEFAULT TRUE,
    `IsFloat` tinyint(1) NOT NULL DEFAULT FALSE,
    `MedicalControl` tinyint(1) NOT NULL DEFAULT FALSE,
    `NextCourseStart` tinyint(1) NOT NULL DEFAULT TRUE,
    CONSTRAINT `PK_NotificationSettings` PRIMARY KEY (`Id`),
    CONSTRAINT `FK_NotificationSettings_Users_UserId` FOREIGN KEY (`UserId`) REFERENCES `Users` (`Id`) ON DELETE CASCADE
) CHARACTER SET=utf8mb4;
Executed DbCommand (36ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `Remedys` (
    `Id` int NOT NULL AUTO_INCREMENT,
    `UserId` int NOT NULL,
    `Name` varchar(128) CHARACTER SET utf8mb4 NOT NULL,
    `Description` longtext CHARACTER SET utf8mb4 NULL,
    `Comment` longtext CHARACTER SET utf8mb4 NULL,
    `Type` int NOT NULL,
    `Icon` int NOT NULL DEFAULT 0,
    `Color` int NOT NULL DEFAULT 0,
    `Dose` int NULL,
    `MeasureUnit` int NULL,
    `BeforeFood` int NULL,
    `Photo` longtext CHARACTER SET utf8mb4 NULL,
    `NotUsed` tinyint(1) NOT NULL DEFAULT FALSE,
    `Created` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    `Updated` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    CONSTRAINT `PK_Remedys` PRIMARY KEY (`Id`),
    CONSTRAINT `FK_Remedys_Users_UserId` FOREIGN KEY (`UserId`) REFERENCES `Users` (`Id`) ON DELETE CASCADE
) CHARACTER SET=utf8mb4;
Executed DbCommand (32ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `UserClaims` (
    `Id` int NOT NULL AUTO_INCREMENT,
    `UserId` int NOT NULL,
    `ClaimType` longtext CHARACTER SET utf8mb4 NULL,
    `ClaimValue` longtext CHARACTER SET utf8mb4 NULL,
    `Discriminator` longtext CHARACTER SET utf8mb4 NOT NULL,
    CONSTRAINT `PK_UserClaims` PRIMARY KEY (`Id`),
    CONSTRAINT `FK_UserClaims_Users_UserId` FOREIGN KEY (`UserId`) REFERENCES `Users` (`Id`) ON DELETE CASCADE
) CHARACTER SET=utf8mb4;
Executed DbCommand (30ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `UserLogins` (
    `LoginProvider` varchar(128) CHARACTER SET utf8mb4 NOT NULL,
    `ProviderKey` varchar(128) CHARACTER SET utf8mb4 NOT NULL,
    `ProviderDisplayName` longtext CHARACTER SET utf8mb4 NULL,
    `UserId` int NOT NULL,
    `Discriminator` longtext CHARACTER SET utf8mb4 NOT NULL,
    CONSTRAINT `PK_UserLogins` PRIMARY KEY (`LoginProvider`, `ProviderKey`),
    CONSTRAINT `FK_UserLogins_Users_UserId` FOREIGN KEY (`UserId`) REFERENCES `Users` (`Id`) ON DELETE CASCADE
) CHARACTER SET=utf8mb4;
Executed DbCommand (14ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `UserTokens` (
    `UserId` int NOT NULL,
    `LoginProvider` varchar(128) CHARACTER SET utf8mb4 NOT NULL,
    `Name` varchar(128) CHARACTER SET utf8mb4 NOT NULL,
    `Value` longtext CHARACTER SET utf8mb4 NULL,
    `Discriminator` longtext CHARACTER SET utf8mb4 NOT NULL,
    CONSTRAINT `PK_UserTokens` PRIMARY KEY (`UserId`, `LoginProvider`, `Name`),
    CONSTRAINT `FK_UserTokens_Users_UserId` FOREIGN KEY (`UserId`) REFERENCES `Users` (`Id`) ON DELETE CASCADE
) CHARACTER SET=utf8mb4;
Executed DbCommand (35ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `Courses` (
    `Id` int NOT NULL AUTO_INCREMENT,
    `RemedyId` int NOT NULL,
    `Comment` longtext CHARACTER SET utf8mb4 NULL,
    `Regime` int NOT NULL,
    `StartDate` bigint NOT NULL,
    `EndDate` bigint NULL,
    `RemindDate` bigint NULL,
    `Interval` bigint NULL,
    `IsFinished` tinyint(1) NOT NULL DEFAULT FALSE,
    `IsInfinite` tinyint(1) NOT NULL DEFAULT FALSE,
    `NotUsed` tinyint(1) NOT NULL DEFAULT FALSE,
    `Created` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    `Updated` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    CONSTRAINT `PK_Courses` PRIMARY KEY (`Id`),
    CONSTRAINT `FK_Courses_Remedys_RemedyId` FOREIGN KEY (`RemedyId`) REFERENCES `Remedys` (`Id`) ON DELETE CASCADE
) CHARACTER SET=utf8mb4;
Executed DbCommand (32ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `HistoryRemedys` (
    `Id` int NOT NULL AUTO_INCREMENT,
    `RemedyId` int NOT NULL,
    `Dose` int NOT NULL,
    `MeasureUnit` int NOT NULL,
    `Created` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    CONSTRAINT `PK_HistoryRemedys` PRIMARY KEY (`Id`),
    CONSTRAINT `FK_HistoryRemedys_Remedys_RemedyId` FOREIGN KEY (`RemedyId`) REFERENCES `Remedys` (`Id`) ON DELETE CASCADE
) CHARACTER SET=utf8mb4;
Executed DbCommand (30ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `Usages` (
    `Id` int NOT NULL AUTO_INCREMENT,
    `CourseId` int NOT NULL,
    `UseTime` bigint NOT NULL,
    `FactUseTime` bigint NULL,
    `Quantity` int NULL,
    `NotUsed` tinyint(1) NOT NULL DEFAULT FALSE,
    `Created` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    `Updated` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    CONSTRAINT `PK_Usages` PRIMARY KEY (`Id`),
    CONSTRAINT `FK_Usages_Courses_CourseId` FOREIGN KEY (`CourseId`) REFERENCES `Courses` (`Id`) ON DELETE CASCADE
) CHARACTER SET=utf8mb4;
Executed DbCommand (15ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX `IX_Courses_RemedyId` ON `Courses` (`RemedyId`);
Executed DbCommand (17ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX `IX_HistoryRemedys_RemedyId` ON `HistoryRemedys` (`RemedyId`);
Executed DbCommand (17ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE UNIQUE INDEX `IX_NotificationSettings_UserId` ON `NotificationSettings` (`UserId`);
Executed DbCommand (20ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX `IX_Remedys_UserId` ON `Remedys` (`UserId`);
Executed DbCommand (18ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX `IX_Usages_CourseId` ON `Usages` (`CourseId`);
Executed DbCommand (19ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX `IX_UserClaims_UserId` ON `UserClaims` (`UserId`);
Executed DbCommand (16ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX `IX_UserLogins_UserId` ON `UserLogins` (`UserId`);
Executed DbCommand (14ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX `EmailIndex` ON `Users` (`NormalizedEmail`);
Executed DbCommand (11ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE UNIQUE INDEX `UserNameIndex` ON `Users` (`NormalizedUserName`);
Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO `__EFMigrationsHistory` (`MigrationId`, `ProductVersion`)
VALUES ('20230424153928_init_Identity', '7.0.5');
Time:24.04.2023 20:42:27 Hello APP
Now listening on: https://localhost:7102
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: G:\2BAD\VitatrackerB2\MedicineReminderAPI
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE DATABASE `api_db`;
Executed DbCommand (13ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `__EFMigrationsHistory` (
    `MigrationId` varchar(150) CHARACTER SET utf8mb4 NOT NULL,
    `ProductVersion` varchar(32) CHARACTER SET utf8mb4 NOT NULL,
    CONSTRAINT `PK___EFMigrationsHistory` PRIMARY KEY (`MigrationId`)
) CHARACTER SET=utf8mb4;
Executed DbCommand (12ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='api_db' AND TABLE_NAME='__EFMigrationsHistory';
Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT `MigrationId`, `ProductVersion`
FROM `__EFMigrationsHistory`
ORDER BY `MigrationId`;
Applying migration '20230424155805_init_Identity'.
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER DATABASE CHARACTER SET utf8mb4;
Executed DbCommand (21ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `Users` (
    `Id` int NOT NULL AUTO_INCREMENT,
    `Name` varchar(120) CHARACTER SET utf8mb4 NOT NULL,
    `Email` varchar(64) CHARACTER SET utf8mb4 NOT NULL,
    `Password` varchar(16) CHARACTER SET utf8mb4 NOT NULL,
    `Avatar` longtext CHARACTER SET utf8mb4 NULL,
    `NotUsed` tinyint(1) NOT NULL DEFAULT FALSE,
    `Created` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    `Updated` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    `NormalizedUserName` varchar(256) CHARACTER SET utf8mb4 NULL,
    `NormalizedEmail` varchar(256) CHARACTER SET utf8mb4 NULL,
    `EmailConfirmed` tinyint(1) NOT NULL DEFAULT FALSE,
    `SecurityStamp` longtext CHARACTER SET utf8mb4 NULL,
    `ConcurrencyStamp` longtext CHARACTER SET utf8mb4 NULL,
    `PhoneNumber` longtext CHARACTER SET utf8mb4 NULL,
    `PhoneNumberConfirmed` tinyint(1) NOT NULL DEFAULT FALSE,
    `TwoFactorEnabled` tinyint(1) NOT NULL DEFAULT FALSE,
    `LockoutEnd` datetime(6) NULL,
    `LockoutEnabled` tinyint(1) NOT NULL DEFAULT FALSE,
    `AccessFailedCount` int NOT NULL DEFAULT 5,
    CONSTRAINT `PK_Users` PRIMARY KEY (`Id`)
) CHARACTER SET=utf8mb4;
Executed DbCommand (42ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `NotificationSettings` (
    `Id` int NOT NULL AUTO_INCREMENT,
    `UserId` int NOT NULL,
    `IsEnabled` tinyint(1) NOT NULL DEFAULT TRUE,
    `IsFloat` tinyint(1) NOT NULL DEFAULT FALSE,
    `MedicalControl` tinyint(1) NOT NULL DEFAULT FALSE,
    `NextCourseStart` tinyint(1) NOT NULL DEFAULT TRUE,
    CONSTRAINT `PK_NotificationSettings` PRIMARY KEY (`Id`),
    CONSTRAINT `FK_NotificationSettings_Users_UserId` FOREIGN KEY (`UserId`) REFERENCES `Users` (`Id`) ON DELETE CASCADE
) CHARACTER SET=utf8mb4;
Executed DbCommand (58ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `Remedys` (
    `Id` int NOT NULL AUTO_INCREMENT,
    `UserId` int NOT NULL,
    `Name` varchar(128) CHARACTER SET utf8mb4 NOT NULL,
    `Description` longtext CHARACTER SET utf8mb4 NULL,
    `Comment` longtext CHARACTER SET utf8mb4 NULL,
    `Type` int NOT NULL,
    `Icon` int NOT NULL DEFAULT 0,
    `Color` int NOT NULL DEFAULT 0,
    `Dose` int NULL,
    `MeasureUnit` int NULL,
    `BeforeFood` int NULL,
    `Photo` longtext CHARACTER SET utf8mb4 NULL,
    `NotUsed` tinyint(1) NOT NULL DEFAULT FALSE,
    `Created` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    `Updated` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    CONSTRAINT `PK_Remedys` PRIMARY KEY (`Id`),
    CONSTRAINT `FK_Remedys_Users_UserId` FOREIGN KEY (`UserId`) REFERENCES `Users` (`Id`) ON DELETE CASCADE
) CHARACTER SET=utf8mb4;
Executed DbCommand (33ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `UserClaims` (
    `Id` int NOT NULL AUTO_INCREMENT,
    `UserId` int NOT NULL,
    `ClaimType` longtext CHARACTER SET utf8mb4 NULL,
    `ClaimValue` longtext CHARACTER SET utf8mb4 NULL,
    `Discriminator` longtext CHARACTER SET utf8mb4 NOT NULL,
    CONSTRAINT `PK_UserClaims` PRIMARY KEY (`Id`),
    CONSTRAINT `FK_UserClaims_Users_UserId` FOREIGN KEY (`UserId`) REFERENCES `Users` (`Id`) ON DELETE CASCADE
) CHARACTER SET=utf8mb4;
Executed DbCommand (30ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `UserLogins` (
    `LoginProvider` varchar(128) CHARACTER SET utf8mb4 NOT NULL,
    `ProviderKey` varchar(128) CHARACTER SET utf8mb4 NOT NULL,
    `ProviderDisplayName` longtext CHARACTER SET utf8mb4 NULL,
    `UserId` int NOT NULL,
    `Discriminator` longtext CHARACTER SET utf8mb4 NOT NULL,
    CONSTRAINT `PK_UserLogins` PRIMARY KEY (`LoginProvider`, `ProviderKey`),
    CONSTRAINT `FK_UserLogins_Users_UserId` FOREIGN KEY (`UserId`) REFERENCES `Users` (`Id`) ON DELETE CASCADE
) CHARACTER SET=utf8mb4;
Executed DbCommand (10ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `UserTokens` (
    `UserId` int NOT NULL,
    `LoginProvider` varchar(128) CHARACTER SET utf8mb4 NOT NULL,
    `Name` varchar(128) CHARACTER SET utf8mb4 NOT NULL,
    `Value` longtext CHARACTER SET utf8mb4 NULL,
    `Discriminator` longtext CHARACTER SET utf8mb4 NOT NULL,
    CONSTRAINT `PK_UserTokens` PRIMARY KEY (`UserId`, `LoginProvider`, `Name`),
    CONSTRAINT `FK_UserTokens_Users_UserId` FOREIGN KEY (`UserId`) REFERENCES `Users` (`Id`) ON DELETE CASCADE
) CHARACTER SET=utf8mb4;
Executed DbCommand (30ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `Courses` (
    `Id` int NOT NULL AUTO_INCREMENT,
    `RemedyId` int NOT NULL,
    `Comment` longtext CHARACTER SET utf8mb4 NULL,
    `Regime` int NOT NULL,
    `StartDate` bigint NOT NULL,
    `EndDate` bigint NULL,
    `RemindDate` bigint NULL,
    `Interval` bigint NULL,
    `IsFinished` tinyint(1) NOT NULL DEFAULT FALSE,
    `IsInfinite` tinyint(1) NOT NULL DEFAULT FALSE,
    `NotUsed` tinyint(1) NOT NULL DEFAULT FALSE,
    `Created` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    `Updated` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    CONSTRAINT `PK_Courses` PRIMARY KEY (`Id`),
    CONSTRAINT `FK_Courses_Remedys_RemedyId` FOREIGN KEY (`RemedyId`) REFERENCES `Remedys` (`Id`) ON DELETE CASCADE
) CHARACTER SET=utf8mb4;
Executed DbCommand (30ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `HistoryRemedys` (
    `Id` int NOT NULL AUTO_INCREMENT,
    `RemedyId` int NOT NULL,
    `Dose` int NOT NULL,
    `MeasureUnit` int NOT NULL,
    `Created` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    CONSTRAINT `PK_HistoryRemedys` PRIMARY KEY (`Id`),
    CONSTRAINT `FK_HistoryRemedys_Remedys_RemedyId` FOREIGN KEY (`RemedyId`) REFERENCES `Remedys` (`Id`) ON DELETE CASCADE
) CHARACTER SET=utf8mb4;
Executed DbCommand (35ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `Usages` (
    `Id` int NOT NULL AUTO_INCREMENT,
    `CourseId` int NOT NULL,
    `UseTime` bigint NOT NULL,
    `FactUseTime` bigint NULL,
    `Quantity` int NULL,
    `NotUsed` tinyint(1) NOT NULL DEFAULT FALSE,
    `Created` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    `Updated` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    CONSTRAINT `PK_Usages` PRIMARY KEY (`Id`),
    CONSTRAINT `FK_Usages_Courses_CourseId` FOREIGN KEY (`CourseId`) REFERENCES `Courses` (`Id`) ON DELETE CASCADE
) CHARACTER SET=utf8mb4;
Executed DbCommand (17ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX `IX_Courses_RemedyId` ON `Courses` (`RemedyId`);
Executed DbCommand (17ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX `IX_HistoryRemedys_RemedyId` ON `HistoryRemedys` (`RemedyId`);
Executed DbCommand (17ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE UNIQUE INDEX `IX_NotificationSettings_UserId` ON `NotificationSettings` (`UserId`);
Executed DbCommand (16ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX `IX_Remedys_UserId` ON `Remedys` (`UserId`);
Executed DbCommand (16ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX `IX_Usages_CourseId` ON `Usages` (`CourseId`);
Executed DbCommand (18ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX `IX_UserClaims_UserId` ON `UserClaims` (`UserId`);
Executed DbCommand (16ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX `IX_UserLogins_UserId` ON `UserLogins` (`UserId`);
Executed DbCommand (15ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX `EmailIndex` ON `Users` (`NormalizedEmail`);
Executed DbCommand (23ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE UNIQUE INDEX `UserNameIndex` ON `Users` (`NormalizedUserName`);
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO `__EFMigrationsHistory` (`MigrationId`, `ProductVersion`)
VALUES ('20230424155805_init_Identity', '7.0.5');
Time:24.04.2023 21:00:09 Hello APP
Now listening on: https://localhost:7102
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: G:\2BAD\VitatrackerB2\MedicineReminderAPI
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (100ms) [Parameters=[@__user_Email_0='?' (Size = 64)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`AccessFailedCount`, `u`.`Avatar`, `u`.`ConcurrencyStamp`, `u`.`Created`, `u`.`Email`, `u`.`EmailConfirmed`, `u`.`LockoutEnabled`, `u`.`LockoutEnd`, `u`.`NormalizedEmail`, `u`.`NormalizedUserName`, `u`.`NotUsed`, `u`.`Password`, `u`.`PhoneNumber`, `u`.`PhoneNumberConfirmed`, `u`.`SecurityStamp`, `u`.`TwoFactorEnabled`, `u`.`Updated`, `u`.`Name`
FROM `Users` AS `u`
WHERE `u`.`Email` = @__user_Email_0
LIMIT 1
Executed DbCommand (14ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 4000), @p2='?' (Size = 64), @p3='?' (DbType = DateTimeOffset), @p4='?' (Size = 256), @p5='?' (Size = 256), @p6='?' (Size = -1), @p7='?' (Size = 4000), @p8='?' (Size = 4000), @p9='?' (Size = 120)], CommandType='Text', CommandTimeout='30']
INSERT INTO `Users` (`Avatar`, `ConcurrencyStamp`, `Email`, `LockoutEnd`, `NormalizedEmail`, `NormalizedUserName`, `Password`, `PhoneNumber`, `SecurityStamp`, `Name`)
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
SELECT `Id`, `AccessFailedCount`, `Created`, `EmailConfirmed`, `LockoutEnabled`, `NotUsed`, `PhoneNumberConfirmed`, `TwoFactorEnabled`, `Updated`
FROM `Users`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();
Executed DbCommand (7ms) [Parameters=[@p10='?' (DbType = Boolean), @p11='?' (DbType = Boolean), @p12='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
INSERT INTO `NotificationSettings` (`IsEnabled`, `NextCourseStart`, `UserId`)
VALUES (@p10, @p11, @p12);
SELECT `Id`, `IsFloat`, `MedicalControl`
FROM `NotificationSettings`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();
Executed DbCommand (2ms) [Parameters=[@__email_0='?' (Size = 64)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`AccessFailedCount`, `u`.`Avatar`, `u`.`ConcurrencyStamp`, `u`.`Created`, `u`.`Email`, `u`.`EmailConfirmed`, `u`.`LockoutEnabled`, `u`.`LockoutEnd`, `u`.`NormalizedEmail`, `u`.`NormalizedUserName`, `u`.`NotUsed`, `u`.`Password`, `u`.`PhoneNumber`, `u`.`PhoneNumberConfirmed`, `u`.`SecurityStamp`, `u`.`TwoFactorEnabled`, `u`.`Updated`, `u`.`Name`
FROM `Users` AS `u`
WHERE `u`.`Email` = @__email_0
LIMIT 1
Time:24.04.2023 21:03:50 Hello APP
Now listening on: https://localhost:7102
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: G:\2BAD\VitatrackerB2\MedicineReminderAPI
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (79ms) [Parameters=[@__email_0='?' (Size = 64)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`AccessFailedCount`, `u`.`Avatar`, `u`.`ConcurrencyStamp`, `u`.`Created`, `u`.`Email`, `u`.`EmailConfirmed`, `u`.`LockoutEnabled`, `u`.`LockoutEnd`, `u`.`NormalizedEmail`, `u`.`NormalizedUserName`, `u`.`NotUsed`, `u`.`Password`, `u`.`PhoneNumber`, `u`.`PhoneNumberConfirmed`, `u`.`SecurityStamp`, `u`.`TwoFactorEnabled`, `u`.`Updated`, `u`.`Name`
FROM `Users` AS `u`
WHERE `u`.`Email` = @__email_0
LIMIT 1
Time:24.04.2023 21:09:19 Hello APP
Now listening on: https://localhost:7102
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: G:\2BAD\VitatrackerB2\MedicineReminderAPI
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (93ms) [Parameters=[@__email_0='?' (Size = 64)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`AccessFailedCount`, `u`.`Avatar`, `u`.`ConcurrencyStamp`, `u`.`Created`, `u`.`Email`, `u`.`EmailConfirmed`, `u`.`LockoutEnabled`, `u`.`LockoutEnd`, `u`.`NormalizedEmail`, `u`.`NormalizedUserName`, `u`.`NotUsed`, `u`.`Password`, `u`.`PhoneNumber`, `u`.`PhoneNumberConfirmed`, `u`.`SecurityStamp`, `u`.`TwoFactorEnabled`, `u`.`Updated`, `u`.`Name`
FROM `Users` AS `u`
WHERE `u`.`Email` = @__email_0
LIMIT 1
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE DATABASE `api_db`;
Executed DbCommand (14ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `__EFMigrationsHistory` (
    `MigrationId` varchar(150) CHARACTER SET utf8mb4 NOT NULL,
    `ProductVersion` varchar(32) CHARACTER SET utf8mb4 NOT NULL,
    CONSTRAINT `PK___EFMigrationsHistory` PRIMARY KEY (`MigrationId`)
) CHARACTER SET=utf8mb4;
Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='api_db' AND TABLE_NAME='__EFMigrationsHistory';
Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT `MigrationId`, `ProductVersion`
FROM `__EFMigrationsHistory`
ORDER BY `MigrationId`;
Applying migration '20230424155805_init_Identity'.
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER DATABASE CHARACTER SET utf8mb4;
Executed DbCommand (13ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `Users` (
    `Id` int NOT NULL AUTO_INCREMENT,
    `Name` varchar(120) CHARACTER SET utf8mb4 NOT NULL,
    `Email` varchar(64) CHARACTER SET utf8mb4 NOT NULL,
    `Password` varchar(16) CHARACTER SET utf8mb4 NOT NULL,
    `Avatar` longtext CHARACTER SET utf8mb4 NULL,
    `NotUsed` tinyint(1) NOT NULL DEFAULT FALSE,
    `Created` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    `Updated` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    `NormalizedUserName` varchar(256) CHARACTER SET utf8mb4 NULL,
    `NormalizedEmail` varchar(256) CHARACTER SET utf8mb4 NULL,
    `EmailConfirmed` tinyint(1) NOT NULL DEFAULT FALSE,
    `SecurityStamp` longtext CHARACTER SET utf8mb4 NULL,
    `ConcurrencyStamp` longtext CHARACTER SET utf8mb4 NULL,
    `PhoneNumber` longtext CHARACTER SET utf8mb4 NULL,
    `PhoneNumberConfirmed` tinyint(1) NOT NULL DEFAULT FALSE,
    `TwoFactorEnabled` tinyint(1) NOT NULL DEFAULT FALSE,
    `LockoutEnd` datetime(6) NULL,
    `LockoutEnabled` tinyint(1) NOT NULL DEFAULT FALSE,
    `AccessFailedCount` int NOT NULL DEFAULT 5,
    CONSTRAINT `PK_Users` PRIMARY KEY (`Id`)
) CHARACTER SET=utf8mb4;
Executed DbCommand (92ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `NotificationSettings` (
    `Id` int NOT NULL AUTO_INCREMENT,
    `UserId` int NOT NULL,
    `IsEnabled` tinyint(1) NOT NULL DEFAULT TRUE,
    `IsFloat` tinyint(1) NOT NULL DEFAULT FALSE,
    `MedicalControl` tinyint(1) NOT NULL DEFAULT FALSE,
    `NextCourseStart` tinyint(1) NOT NULL DEFAULT TRUE,
    CONSTRAINT `PK_NotificationSettings` PRIMARY KEY (`Id`),
    CONSTRAINT `FK_NotificationSettings_Users_UserId` FOREIGN KEY (`UserId`) REFERENCES `Users` (`Id`) ON DELETE CASCADE
) CHARACTER SET=utf8mb4;
Executed DbCommand (72ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `Remedys` (
    `Id` int NOT NULL AUTO_INCREMENT,
    `UserId` int NOT NULL,
    `Name` varchar(128) CHARACTER SET utf8mb4 NOT NULL,
    `Description` longtext CHARACTER SET utf8mb4 NULL,
    `Comment` longtext CHARACTER SET utf8mb4 NULL,
    `Type` int NOT NULL,
    `Icon` int NOT NULL DEFAULT 0,
    `Color` int NOT NULL DEFAULT 0,
    `Dose` int NULL,
    `MeasureUnit` int NULL,
    `BeforeFood` int NULL,
    `Photo` longtext CHARACTER SET utf8mb4 NULL,
    `NotUsed` tinyint(1) NOT NULL DEFAULT FALSE,
    `Created` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    `Updated` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    CONSTRAINT `PK_Remedys` PRIMARY KEY (`Id`),
    CONSTRAINT `FK_Remedys_Users_UserId` FOREIGN KEY (`UserId`) REFERENCES `Users` (`Id`) ON DELETE CASCADE
) CHARACTER SET=utf8mb4;
Executed DbCommand (64ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `UserClaims` (
    `Id` int NOT NULL AUTO_INCREMENT,
    `UserId` int NOT NULL,
    `ClaimType` longtext CHARACTER SET utf8mb4 NULL,
    `ClaimValue` longtext CHARACTER SET utf8mb4 NULL,
    `Discriminator` longtext CHARACTER SET utf8mb4 NOT NULL,
    CONSTRAINT `PK_UserClaims` PRIMARY KEY (`Id`),
    CONSTRAINT `FK_UserClaims_Users_UserId` FOREIGN KEY (`UserId`) REFERENCES `Users` (`Id`) ON DELETE CASCADE
) CHARACTER SET=utf8mb4;
Executed DbCommand (38ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `UserLogins` (
    `LoginProvider` varchar(128) CHARACTER SET utf8mb4 NOT NULL,
    `ProviderKey` varchar(128) CHARACTER SET utf8mb4 NOT NULL,
    `ProviderDisplayName` longtext CHARACTER SET utf8mb4 NULL,
    `UserId` int NOT NULL,
    `Discriminator` longtext CHARACTER SET utf8mb4 NOT NULL,
    CONSTRAINT `PK_UserLogins` PRIMARY KEY (`LoginProvider`, `ProviderKey`),
    CONSTRAINT `FK_UserLogins_Users_UserId` FOREIGN KEY (`UserId`) REFERENCES `Users` (`Id`) ON DELETE CASCADE
) CHARACTER SET=utf8mb4;
Executed DbCommand (13ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `UserTokens` (
    `UserId` int NOT NULL,
    `LoginProvider` varchar(128) CHARACTER SET utf8mb4 NOT NULL,
    `Name` varchar(128) CHARACTER SET utf8mb4 NOT NULL,
    `Value` longtext CHARACTER SET utf8mb4 NULL,
    `Discriminator` longtext CHARACTER SET utf8mb4 NOT NULL,
    CONSTRAINT `PK_UserTokens` PRIMARY KEY (`UserId`, `LoginProvider`, `Name`),
    CONSTRAINT `FK_UserTokens_Users_UserId` FOREIGN KEY (`UserId`) REFERENCES `Users` (`Id`) ON DELETE CASCADE
) CHARACTER SET=utf8mb4;
Executed DbCommand (36ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `Courses` (
    `Id` int NOT NULL AUTO_INCREMENT,
    `RemedyId` int NOT NULL,
    `Comment` longtext CHARACTER SET utf8mb4 NULL,
    `Regime` int NOT NULL,
    `StartDate` bigint NOT NULL,
    `EndDate` bigint NULL,
    `RemindDate` bigint NULL,
    `Interval` bigint NULL,
    `IsFinished` tinyint(1) NOT NULL DEFAULT FALSE,
    `IsInfinite` tinyint(1) NOT NULL DEFAULT FALSE,
    `NotUsed` tinyint(1) NOT NULL DEFAULT FALSE,
    `Created` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    `Updated` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    CONSTRAINT `PK_Courses` PRIMARY KEY (`Id`),
    CONSTRAINT `FK_Courses_Remedys_RemedyId` FOREIGN KEY (`RemedyId`) REFERENCES `Remedys` (`Id`) ON DELETE CASCADE
) CHARACTER SET=utf8mb4;
Executed DbCommand (121ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `HistoryRemedys` (
    `Id` int NOT NULL AUTO_INCREMENT,
    `RemedyId` int NOT NULL,
    `Dose` int NOT NULL,
    `MeasureUnit` int NOT NULL,
    `Created` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    CONSTRAINT `PK_HistoryRemedys` PRIMARY KEY (`Id`),
    CONSTRAINT `FK_HistoryRemedys_Remedys_RemedyId` FOREIGN KEY (`RemedyId`) REFERENCES `Remedys` (`Id`) ON DELETE CASCADE
) CHARACTER SET=utf8mb4;
Executed DbCommand (96ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `Usages` (
    `Id` int NOT NULL AUTO_INCREMENT,
    `CourseId` int NOT NULL,
    `UseTime` bigint NOT NULL,
    `FactUseTime` bigint NULL,
    `Quantity` int NULL,
    `NotUsed` tinyint(1) NOT NULL DEFAULT FALSE,
    `Created` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    `Updated` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    CONSTRAINT `PK_Usages` PRIMARY KEY (`Id`),
    CONSTRAINT `FK_Usages_Courses_CourseId` FOREIGN KEY (`CourseId`) REFERENCES `Courses` (`Id`) ON DELETE CASCADE
) CHARACTER SET=utf8mb4;
Executed DbCommand (24ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX `IX_Courses_RemedyId` ON `Courses` (`RemedyId`);
Executed DbCommand (18ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX `IX_HistoryRemedys_RemedyId` ON `HistoryRemedys` (`RemedyId`);
Executed DbCommand (18ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE UNIQUE INDEX `IX_NotificationSettings_UserId` ON `NotificationSettings` (`UserId`);
Executed DbCommand (16ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX `IX_Remedys_UserId` ON `Remedys` (`UserId`);
Executed DbCommand (16ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX `IX_Usages_CourseId` ON `Usages` (`CourseId`);
Executed DbCommand (18ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX `IX_UserClaims_UserId` ON `UserClaims` (`UserId`);
Executed DbCommand (20ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX `IX_UserLogins_UserId` ON `UserLogins` (`UserId`);
Executed DbCommand (18ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX `EmailIndex` ON `Users` (`NormalizedEmail`);
Executed DbCommand (16ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE UNIQUE INDEX `UserNameIndex` ON `Users` (`NormalizedUserName`);
Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO `__EFMigrationsHistory` (`MigrationId`, `ProductVersion`)
VALUES ('20230424155805_init_Identity', '7.0.5');
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE DATABASE `api_db`;
Executed DbCommand (13ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `__EFMigrationsHistory` (
    `MigrationId` varchar(150) CHARACTER SET utf8mb4 NOT NULL,
    `ProductVersion` varchar(32) CHARACTER SET utf8mb4 NOT NULL,
    CONSTRAINT `PK___EFMigrationsHistory` PRIMARY KEY (`MigrationId`)
) CHARACTER SET=utf8mb4;
Executed DbCommand (13ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='api_db' AND TABLE_NAME='__EFMigrationsHistory';
Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT `MigrationId`, `ProductVersion`
FROM `__EFMigrationsHistory`
ORDER BY `MigrationId`;
Applying migration '20230424155805_init_Identity'.
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER DATABASE CHARACTER SET utf8mb4;
Executed DbCommand (14ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `Users` (
    `Id` int NOT NULL AUTO_INCREMENT,
    `Name` varchar(120) CHARACTER SET utf8mb4 NOT NULL,
    `Email` varchar(64) CHARACTER SET utf8mb4 NOT NULL,
    `Password` varchar(120) CHARACTER SET utf8mb4 NOT NULL,
    `Avatar` longtext CHARACTER SET utf8mb4 NULL,
    `NotUsed` tinyint(1) NOT NULL DEFAULT FALSE,
    `Created` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    `Updated` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    `NormalizedUserName` varchar(256) CHARACTER SET utf8mb4 NULL,
    `NormalizedEmail` varchar(256) CHARACTER SET utf8mb4 NULL,
    `EmailConfirmed` tinyint(1) NOT NULL DEFAULT FALSE,
    `SecurityStamp` longtext CHARACTER SET utf8mb4 NULL,
    `ConcurrencyStamp` longtext CHARACTER SET utf8mb4 NULL,
    `PhoneNumber` longtext CHARACTER SET utf8mb4 NULL,
    `PhoneNumberConfirmed` tinyint(1) NOT NULL DEFAULT FALSE,
    `TwoFactorEnabled` tinyint(1) NOT NULL DEFAULT FALSE,
    `LockoutEnd` datetime(6) NULL,
    `LockoutEnabled` tinyint(1) NOT NULL DEFAULT FALSE,
    `AccessFailedCount` int NOT NULL DEFAULT 5,
    CONSTRAINT `PK_Users` PRIMARY KEY (`Id`)
) CHARACTER SET=utf8mb4;
Executed DbCommand (39ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `NotificationSettings` (
    `Id` int NOT NULL AUTO_INCREMENT,
    `UserId` int NOT NULL,
    `IsEnabled` tinyint(1) NOT NULL DEFAULT TRUE,
    `IsFloat` tinyint(1) NOT NULL DEFAULT FALSE,
    `MedicalControl` tinyint(1) NOT NULL DEFAULT FALSE,
    `NextCourseStart` tinyint(1) NOT NULL DEFAULT TRUE,
    CONSTRAINT `PK_NotificationSettings` PRIMARY KEY (`Id`),
    CONSTRAINT `FK_NotificationSettings_Users_UserId` FOREIGN KEY (`UserId`) REFERENCES `Users` (`Id`) ON DELETE CASCADE
) CHARACTER SET=utf8mb4;
Executed DbCommand (36ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `Remedys` (
    `Id` int NOT NULL AUTO_INCREMENT,
    `UserId` int NOT NULL,
    `Name` varchar(128) CHARACTER SET utf8mb4 NOT NULL,
    `Description` longtext CHARACTER SET utf8mb4 NULL,
    `Comment` longtext CHARACTER SET utf8mb4 NULL,
    `Type` int NOT NULL,
    `Icon` int NOT NULL DEFAULT 0,
    `Color` int NOT NULL DEFAULT 0,
    `Dose` int NULL,
    `MeasureUnit` int NULL,
    `BeforeFood` int NULL,
    `Photo` longtext CHARACTER SET utf8mb4 NULL,
    `NotUsed` tinyint(1) NOT NULL DEFAULT FALSE,
    `Created` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    `Updated` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    CONSTRAINT `PK_Remedys` PRIMARY KEY (`Id`),
    CONSTRAINT `FK_Remedys_Users_UserId` FOREIGN KEY (`UserId`) REFERENCES `Users` (`Id`) ON DELETE CASCADE
) CHARACTER SET=utf8mb4;
Executed DbCommand (33ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `UserClaims` (
    `Id` int NOT NULL AUTO_INCREMENT,
    `UserId` int NOT NULL,
    `ClaimType` longtext CHARACTER SET utf8mb4 NULL,
    `ClaimValue` longtext CHARACTER SET utf8mb4 NULL,
    `Discriminator` longtext CHARACTER SET utf8mb4 NOT NULL,
    CONSTRAINT `PK_UserClaims` PRIMARY KEY (`Id`),
    CONSTRAINT `FK_UserClaims_Users_UserId` FOREIGN KEY (`UserId`) REFERENCES `Users` (`Id`) ON DELETE CASCADE
) CHARACTER SET=utf8mb4;
Executed DbCommand (40ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `UserLogins` (
    `LoginProvider` varchar(128) CHARACTER SET utf8mb4 NOT NULL,
    `ProviderKey` varchar(128) CHARACTER SET utf8mb4 NOT NULL,
    `ProviderDisplayName` longtext CHARACTER SET utf8mb4 NULL,
    `UserId` int NOT NULL,
    `Discriminator` longtext CHARACTER SET utf8mb4 NOT NULL,
    CONSTRAINT `PK_UserLogins` PRIMARY KEY (`LoginProvider`, `ProviderKey`),
    CONSTRAINT `FK_UserLogins_Users_UserId` FOREIGN KEY (`UserId`) REFERENCES `Users` (`Id`) ON DELETE CASCADE
) CHARACTER SET=utf8mb4;
Executed DbCommand (17ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `UserTokens` (
    `UserId` int NOT NULL,
    `LoginProvider` varchar(128) CHARACTER SET utf8mb4 NOT NULL,
    `Name` varchar(128) CHARACTER SET utf8mb4 NOT NULL,
    `Value` longtext CHARACTER SET utf8mb4 NULL,
    `Discriminator` longtext CHARACTER SET utf8mb4 NOT NULL,
    CONSTRAINT `PK_UserTokens` PRIMARY KEY (`UserId`, `LoginProvider`, `Name`),
    CONSTRAINT `FK_UserTokens_Users_UserId` FOREIGN KEY (`UserId`) REFERENCES `Users` (`Id`) ON DELETE CASCADE
) CHARACTER SET=utf8mb4;
Executed DbCommand (42ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `Courses` (
    `Id` int NOT NULL AUTO_INCREMENT,
    `RemedyId` int NOT NULL,
    `Comment` longtext CHARACTER SET utf8mb4 NULL,
    `Regime` int NOT NULL,
    `StartDate` bigint NOT NULL,
    `EndDate` bigint NULL,
    `RemindDate` bigint NULL,
    `Interval` bigint NULL,
    `IsFinished` tinyint(1) NOT NULL DEFAULT FALSE,
    `IsInfinite` tinyint(1) NOT NULL DEFAULT FALSE,
    `NotUsed` tinyint(1) NOT NULL DEFAULT FALSE,
    `Created` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    `Updated` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    CONSTRAINT `PK_Courses` PRIMARY KEY (`Id`),
    CONSTRAINT `FK_Courses_Remedys_RemedyId` FOREIGN KEY (`RemedyId`) REFERENCES `Remedys` (`Id`) ON DELETE CASCADE
) CHARACTER SET=utf8mb4;
Executed DbCommand (35ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `HistoryRemedys` (
    `Id` int NOT NULL AUTO_INCREMENT,
    `RemedyId` int NOT NULL,
    `Dose` int NOT NULL,
    `MeasureUnit` int NOT NULL,
    `Created` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    CONSTRAINT `PK_HistoryRemedys` PRIMARY KEY (`Id`),
    CONSTRAINT `FK_HistoryRemedys_Remedys_RemedyId` FOREIGN KEY (`RemedyId`) REFERENCES `Remedys` (`Id`) ON DELETE CASCADE
) CHARACTER SET=utf8mb4;
Executed DbCommand (32ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `Usages` (
    `Id` int NOT NULL AUTO_INCREMENT,
    `CourseId` int NOT NULL,
    `UseTime` bigint NOT NULL,
    `FactUseTime` bigint NULL,
    `Quantity` int NULL,
    `NotUsed` tinyint(1) NOT NULL DEFAULT FALSE,
    `Created` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    `Updated` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    CONSTRAINT `PK_Usages` PRIMARY KEY (`Id`),
    CONSTRAINT `FK_Usages_Courses_CourseId` FOREIGN KEY (`CourseId`) REFERENCES `Courses` (`Id`) ON DELETE CASCADE
) CHARACTER SET=utf8mb4;
Executed DbCommand (18ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX `IX_Courses_RemedyId` ON `Courses` (`RemedyId`);
Executed DbCommand (22ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX `IX_HistoryRemedys_RemedyId` ON `HistoryRemedys` (`RemedyId`);
Executed DbCommand (23ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE UNIQUE INDEX `IX_NotificationSettings_UserId` ON `NotificationSettings` (`UserId`);
Executed DbCommand (19ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX `IX_Remedys_UserId` ON `Remedys` (`UserId`);
Executed DbCommand (19ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX `IX_Usages_CourseId` ON `Usages` (`CourseId`);
Executed DbCommand (20ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX `IX_UserClaims_UserId` ON `UserClaims` (`UserId`);
Executed DbCommand (18ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX `IX_UserLogins_UserId` ON `UserLogins` (`UserId`);
Executed DbCommand (15ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX `EmailIndex` ON `Users` (`NormalizedEmail`);
Executed DbCommand (16ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE UNIQUE INDEX `UserNameIndex` ON `Users` (`NormalizedUserName`);
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO `__EFMigrationsHistory` (`MigrationId`, `ProductVersion`)
VALUES ('20230424155805_init_Identity', '7.0.5');
Time:24.04.2023 21:17:37 Hello APP
Now listening on: https://localhost:7102
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: G:\2BAD\VitatrackerB2\MedicineReminderAPI
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (63ms) [Parameters=[@__user_Email_0='?' (Size = 64)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`AccessFailedCount`, `u`.`Avatar`, `u`.`ConcurrencyStamp`, `u`.`Created`, `u`.`Email`, `u`.`EmailConfirmed`, `u`.`LockoutEnabled`, `u`.`LockoutEnd`, `u`.`NormalizedEmail`, `u`.`NormalizedUserName`, `u`.`NotUsed`, `u`.`Password`, `u`.`PhoneNumber`, `u`.`PhoneNumberConfirmed`, `u`.`SecurityStamp`, `u`.`TwoFactorEnabled`, `u`.`Updated`, `u`.`Name`
FROM `Users` AS `u`
WHERE `u`.`Email` = @__user_Email_0
LIMIT 1
Executed DbCommand (12ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 4000), @p2='?' (Size = 64), @p3='?' (DbType = DateTimeOffset), @p4='?' (Size = 256), @p5='?' (Size = 256), @p6='?' (Size = 120), @p7='?' (Size = 4000), @p8='?' (Size = 4000), @p9='?' (Size = 120)], CommandType='Text', CommandTimeout='30']
INSERT INTO `Users` (`Avatar`, `ConcurrencyStamp`, `Email`, `LockoutEnd`, `NormalizedEmail`, `NormalizedUserName`, `Password`, `PhoneNumber`, `SecurityStamp`, `Name`)
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
SELECT `Id`, `AccessFailedCount`, `Created`, `EmailConfirmed`, `LockoutEnabled`, `NotUsed`, `PhoneNumberConfirmed`, `TwoFactorEnabled`, `Updated`
FROM `Users`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();
Executed DbCommand (2ms) [Parameters=[@p10='?' (DbType = Boolean), @p11='?' (DbType = Boolean), @p12='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
INSERT INTO `NotificationSettings` (`IsEnabled`, `NextCourseStart`, `UserId`)
VALUES (@p10, @p11, @p12);
SELECT `Id`, `IsFloat`, `MedicalControl`
FROM `NotificationSettings`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();
Executed DbCommand (1ms) [Parameters=[@__email_0='?' (Size = 64)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`AccessFailedCount`, `u`.`Avatar`, `u`.`ConcurrencyStamp`, `u`.`Created`, `u`.`Email`, `u`.`EmailConfirmed`, `u`.`LockoutEnabled`, `u`.`LockoutEnd`, `u`.`NormalizedEmail`, `u`.`NormalizedUserName`, `u`.`NotUsed`, `u`.`Password`, `u`.`PhoneNumber`, `u`.`PhoneNumberConfirmed`, `u`.`SecurityStamp`, `u`.`TwoFactorEnabled`, `u`.`Updated`, `u`.`Name`
FROM `Users` AS `u`
WHERE `u`.`Email` = @__email_0
LIMIT 1
Executed DbCommand (0ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`AccessFailedCount`, `u`.`Avatar`, `u`.`ConcurrencyStamp`, `u`.`Created`, `u`.`Email`, `u`.`EmailConfirmed`, `u`.`LockoutEnabled`, `u`.`LockoutEnd`, `u`.`NormalizedEmail`, `u`.`NormalizedUserName`, `u`.`NotUsed`, `u`.`Password`, `u`.`PhoneNumber`, `u`.`PhoneNumberConfirmed`, `u`.`SecurityStamp`, `u`.`TwoFactorEnabled`, `u`.`Updated`, `u`.`Name`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (2ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedys` AS `r`
WHERE (`r`.`UserId` = @__user_Id_0) AND NOT (`r`.`NotUsed`)
Executed DbCommand (1ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`AccessFailedCount`, `u`.`Avatar`, `u`.`ConcurrencyStamp`, `u`.`Created`, `u`.`Email`, `u`.`EmailConfirmed`, `u`.`LockoutEnabled`, `u`.`LockoutEnd`, `u`.`NormalizedEmail`, `u`.`NormalizedUserName`, `u`.`NotUsed`, `u`.`Password`, `u`.`PhoneNumber`, `u`.`PhoneNumberConfirmed`, `u`.`SecurityStamp`, `u`.`TwoFactorEnabled`, `u`.`Updated`, `u`.`Name`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (2ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedys` AS `r`
WHERE (`r`.`UserId` = @__user_Id_0) AND NOT (`r`.`NotUsed`)
Executed DbCommand (5ms) [Parameters=[@__user_Email_0='?' (Size = 64)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`AccessFailedCount`, `u`.`Avatar`, `u`.`ConcurrencyStamp`, `u`.`Created`, `u`.`Email`, `u`.`EmailConfirmed`, `u`.`LockoutEnabled`, `u`.`LockoutEnd`, `u`.`NormalizedEmail`, `u`.`NormalizedUserName`, `u`.`NotUsed`, `u`.`Password`, `u`.`PhoneNumber`, `u`.`PhoneNumberConfirmed`, `u`.`SecurityStamp`, `u`.`TwoFactorEnabled`, `u`.`Updated`, `u`.`Name`
FROM `Users` AS `u`
WHERE `u`.`Email` = @__user_Email_0
LIMIT 1
Executed DbCommand (4ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 4000), @p2='?' (Size = 64), @p3='?' (DbType = DateTimeOffset), @p4='?' (Size = 256), @p5='?' (Size = 256), @p6='?' (Size = 120), @p7='?' (Size = 4000), @p8='?' (Size = 4000), @p9='?' (Size = 120)], CommandType='Text', CommandTimeout='30']
INSERT INTO `Users` (`Avatar`, `ConcurrencyStamp`, `Email`, `LockoutEnd`, `NormalizedEmail`, `NormalizedUserName`, `Password`, `PhoneNumber`, `SecurityStamp`, `Name`)
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
SELECT `Id`, `AccessFailedCount`, `Created`, `EmailConfirmed`, `LockoutEnabled`, `NotUsed`, `PhoneNumberConfirmed`, `TwoFactorEnabled`, `Updated`
FROM `Users`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();
Executed DbCommand (1ms) [Parameters=[@p10='?' (DbType = Boolean), @p11='?' (DbType = Boolean), @p12='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
INSERT INTO `NotificationSettings` (`IsEnabled`, `NextCourseStart`, `UserId`)
VALUES (@p10, @p11, @p12);
SELECT `Id`, `IsFloat`, `MedicalControl`
FROM `NotificationSettings`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();
Executed DbCommand (1ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`AccessFailedCount`, `u`.`Avatar`, `u`.`ConcurrencyStamp`, `u`.`Created`, `u`.`Email`, `u`.`EmailConfirmed`, `u`.`LockoutEnabled`, `u`.`LockoutEnd`, `u`.`NormalizedEmail`, `u`.`NormalizedUserName`, `u`.`NotUsed`, `u`.`Password`, `u`.`PhoneNumber`, `u`.`PhoneNumberConfirmed`, `u`.`SecurityStamp`, `u`.`TwoFactorEnabled`, `u`.`Updated`, `u`.`Name`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
