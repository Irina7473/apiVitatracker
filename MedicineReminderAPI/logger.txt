
Time:20.04.2023 9:57:50 Hello APP
Now listening on: https://localhost:7102
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: J:\2BAD\VitatrackerB\MedicineReminderAPI
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (277ms) [Parameters=[@__user_Email_0='?' (Size = 64)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE `u`.`Email` = @__user_Email_0
LIMIT 1
Executed DbCommand (204ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 64), @p2='?' (Size = 120), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
INSERT INTO `Users` (`Avatar`, `Email`, `Name`, `Password`)
VALUES (@p0, @p1, @p2, @p3);
SELECT `Id`, `Created`, `NotUsed`, `Updated`
FROM `Users`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();
Executed DbCommand (204ms) [Parameters=[@p4='?' (DbType = Boolean), @p5='?' (DbType = Boolean), @p6='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
INSERT INTO `NotificationSettings` (`IsEnabled`, `NextCourseStart`, `UserId`)
VALUES (@p4, @p5, @p6);
SELECT `Id`, `IsFloat`, `MedicalControl`
FROM `NotificationSettings`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();
Time:20.04.2023 10:07:50 Hello APP
Now listening on: https://localhost:7102
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: J:\2BAD\VitatrackerB\MedicineReminderAPI
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (230ms) [Parameters=[@__user_Email_0='?' (Size = 64)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE `u`.`Email` = @__user_Email_0
LIMIT 1
Executed DbCommand (197ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 64), @p2='?' (Size = 120), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
INSERT INTO `Users` (`Avatar`, `Email`, `Name`, `Password`)
VALUES (@p0, @p1, @p2, @p3);
SELECT `Id`, `Created`, `NotUsed`, `Updated`
FROM `Users`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();
Executed DbCommand (197ms) [Parameters=[@p4='?' (DbType = Boolean), @p5='?' (DbType = Boolean), @p6='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
INSERT INTO `NotificationSettings` (`IsEnabled`, `NextCourseStart`, `UserId`)
VALUES (@p4, @p5, @p6);
SELECT `Id`, `IsFloat`, `MedicalControl`
FROM `NotificationSettings`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();
Executed DbCommand (197ms) [Parameters=[@__user_Email_0='?' (Size = 64)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE `u`.`Email` = @__user_Email_0
LIMIT 1
Executed DbCommand (197ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 64), @p2='?' (Size = 120), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
INSERT INTO `Users` (`Avatar`, `Email`, `Name`, `Password`)
VALUES (@p0, @p1, @p2, @p3);
SELECT `Id`, `Created`, `NotUsed`, `Updated`
FROM `Users`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();
Executed DbCommand (198ms) [Parameters=[@p4='?' (DbType = Boolean), @p5='?' (DbType = Boolean), @p6='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
INSERT INTO `NotificationSettings` (`IsEnabled`, `NextCourseStart`, `UserId`)
VALUES (@p4, @p5, @p6);
SELECT `Id`, `IsFloat`, `MedicalControl`
FROM `NotificationSettings`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();
Time:20.04.2023 10:11:55 Hello APP
Now listening on: https://localhost:7102
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: J:\2BAD\VitatrackerB\MedicineReminderAPI
Time:20.04.2023 10:16:14 Hello APP
Now listening on: https://localhost:7102
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: J:\2BAD\VitatrackerB\MedicineReminderAPI
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (242ms) [Parameters=[@__user_Email_0='?' (Size = 64)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE `u`.`Email` = @__user_Email_0
LIMIT 1
Executed DbCommand (196ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 64), @p2='?' (Size = 120), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
INSERT INTO `Users` (`Avatar`, `Email`, `Name`, `Password`)
VALUES (@p0, @p1, @p2, @p3);
SELECT `Id`, `Created`, `NotUsed`, `Updated`
FROM `Users`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();
Executed DbCommand (200ms) [Parameters=[@p4='?' (DbType = Boolean), @p5='?' (DbType = Boolean), @p6='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
INSERT INTO `NotificationSettings` (`IsEnabled`, `NextCourseStart`, `UserId`)
VALUES (@p4, @p5, @p6);
SELECT `Id`, `IsFloat`, `MedicalControl`
FROM `NotificationSettings`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();
Time:20.04.2023 10:19:32 Hello APP
Now listening on: https://localhost:7102
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: J:\2BAD\VitatrackerB\MedicineReminderAPI
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (249ms) [Parameters=[@__user_Email_0='?' (Size = 64)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE `u`.`Email` = @__user_Email_0
LIMIT 1
Executed DbCommand (204ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 64), @p2='?' (Size = 120), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
INSERT INTO `Users` (`Avatar`, `Email`, `Name`, `Password`)
VALUES (@p0, @p1, @p2, @p3);
SELECT `Id`, `Created`, `NotUsed`, `Updated`
FROM `Users`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();
Executed DbCommand (203ms) [Parameters=[@p4='?' (DbType = Boolean), @p5='?' (DbType = Boolean), @p6='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
INSERT INTO `NotificationSettings` (`IsEnabled`, `NextCourseStart`, `UserId`)
VALUES (@p4, @p5, @p6);
SELECT `Id`, `IsFloat`, `MedicalControl`
FROM `NotificationSettings`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();
Executed DbCommand (197ms) [Parameters=[@__user_Email_0='?' (Size = 64)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE `u`.`Email` = @__user_Email_0
LIMIT 1
Executed DbCommand (197ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 64), @p2='?' (Size = 120), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
INSERT INTO `Users` (`Avatar`, `Email`, `Name`, `Password`)
VALUES (@p0, @p1, @p2, @p3);
SELECT `Id`, `Created`, `NotUsed`, `Updated`
FROM `Users`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();
Executed DbCommand (197ms) [Parameters=[@p4='?' (DbType = Boolean), @p5='?' (DbType = Boolean), @p6='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
INSERT INTO `NotificationSettings` (`IsEnabled`, `NextCourseStart`, `UserId`)
VALUES (@p4, @p5, @p6);
SELECT `Id`, `IsFloat`, `MedicalControl`
FROM `NotificationSettings`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();
Time:20.04.2023 10:22:20 Hello APP
Now listening on: https://localhost:7102
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: J:\2BAD\VitatrackerB\MedicineReminderAPI
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (235ms) [Parameters=[@__user_Email_0='?' (Size = 64)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE `u`.`Email` = @__user_Email_0
LIMIT 1
Executed DbCommand (203ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 64), @p2='?' (Size = 120), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
INSERT INTO `Users` (`Avatar`, `Email`, `Name`, `Password`)
VALUES (@p0, @p1, @p2, @p3);
SELECT `Id`, `Created`, `NotUsed`, `Updated`
FROM `Users`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();
Executed DbCommand (203ms) [Parameters=[@p4='?' (DbType = Boolean), @p5='?' (DbType = Boolean), @p6='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
INSERT INTO `NotificationSettings` (`IsEnabled`, `NextCourseStart`, `UserId`)
VALUES (@p4, @p5, @p6);
SELECT `Id`, `IsFloat`, `MedicalControl`
FROM `NotificationSettings`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Time:25.04.2023 18:36:04 Hello APP
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: G:\2BAD\VitatrackerB2\MedicineReminderAPI
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
An error occurred using the connection to database 'api_db' on server 'localhost'.
An exception occurred while iterating over the results of a query for context type 'MedicineReminderAPI.Models.AppApiContext'.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure()' to the 'UseMySql' call.
 ---> MySqlConnector.MySqlException (0x80004005): Unable to connect to any of the specified MySQL hosts.
   at MySqlConnector.Core.ServerSession.OpenTcpSocketAsync(ConnectionSettings cs, ILoadBalancer loadBalancer, Activity activity, IOBehavior ioBehavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/Core/ServerSession.cs:line 1146
   at MySqlConnector.Core.ServerSession.ConnectAsync(ConnectionSettings cs, MySqlConnection connection, Int32 startTickCount, ILoadBalancer loadBalancer, Activity activity, IOBehavior ioBehavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/Core/ServerSession.cs:line 438
   at MySqlConnector.Core.ConnectionPool.ConnectSessionAsync(MySqlConnection connection, String logMessage, Int32 startTickCount, Activity activity, IOBehavior ioBehavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/Core/ConnectionPool.cs:line 403
   at MySqlConnector.Core.ConnectionPool.ConnectSessionAsync(MySqlConnection connection, String logMessage, Int32 startTickCount, Activity activity, IOBehavior ioBehavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/Core/ConnectionPool.cs:line 408
   at MySqlConnector.Core.ConnectionPool.GetSessionAsync(MySqlConnection connection, Int32 startTickCount, Activity activity, IOBehavior ioBehavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/Core/ConnectionPool.cs:line 98
   at MySqlConnector.Core.ConnectionPool.GetSessionAsync(MySqlConnection connection, Int32 startTickCount, Activity activity, IOBehavior ioBehavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/Core/ConnectionPool.cs:line 128
   at MySqlConnector.MySqlConnection.CreateSessionAsync(ConnectionPool pool, Int32 startTickCount, Activity activity, Nullable`1 ioBehavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/MySqlConnection.cs:line 929
   at MySqlConnector.MySqlConnection.OpenAsync(Nullable`1 ioBehavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/MySqlConnection.cs:line 423
   at MySqlConnector.MySqlConnection.Open() in /_/src/MySqlConnector/MySqlConnection.cs:line 382
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnection(Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternal(Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Open(Boolean errorsExpected)
   at Pomelo.EntityFrameworkCore.MySql.Storage.Internal.MySqlRelationalConnection.Open(Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.InitializeReader(Enumerator enumerator)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.<>c.<MoveNext>b__21_0(DbContext _, Enumerator enumerator)
   at Pomelo.EntityFrameworkCore.MySql.Storage.Internal.MySqlExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   --- End of inner exception stack trace ---
   at Pomelo.EntityFrameworkCore.MySql.Storage.Internal.MySqlExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.MoveNext()
Time:25.04.2023 18:41:13 Hello APP
Now listening on: https://localhost:7102
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: G:\2BAD\VitatrackerB2\MedicineReminderAPI
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (90ms) [Parameters=[@__email_0='?' (Size = 64)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE `u`.`Email` = @__email_0
LIMIT 1
Time:26.04.2023 20:50:01 Hello APP
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: G:\2BAD\VitatrackerB2\MedicineReminderAPI
Time:26.04.2023 20:58:29 Hello APP
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: G:\2BAD\VitatrackerB2\MedicineReminderAPI
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (371ms) [Parameters=[@__auth_Email_0='?' (Size = 64)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE `u`.`Email` = @__auth_Email_0
LIMIT 1
Executed DbCommand (215ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (261ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedys` AS `r`
WHERE (`r`.`UserId` = @__user_Id_0) AND NOT (`r`.`NotUsed`)
Executed DbCommand (268ms) [Parameters=[@__auth_Email_0='?' (Size = 64)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE `u`.`Email` = @__auth_Email_0
LIMIT 1
Time:27.04.2023 18:59:01 Hello APP
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: G:\2BAD\VitatrackerB2\MedicineReminderAPI
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (291ms) [Parameters=[@__auth_Email_0='?' (Size = 64)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE `u`.`Email` = @__auth_Email_0
LIMIT 1
Executed DbCommand (210ms) [Parameters=[@__auth_Email_0='?' (Size = 64)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE `u`.`Email` = @__auth_Email_0
LIMIT 1
Time:28.04.2023 13:39:23 Hello APP
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: J:\2BAD\VitatrackerB2\MedicineReminderAPI
Failed to determine the https port for redirect.
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (250ms) [Parameters=[@__auth_Email_0='?' (Size = 64)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE `u`.`Email` = @__auth_Email_0
LIMIT 1
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE DATABASE `api_db`;
Executed DbCommand (14ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `__EFMigrationsHistory` (
    `MigrationId` varchar(150) CHARACTER SET utf8mb4 NOT NULL,
    `ProductVersion` varchar(32) CHARACTER SET utf8mb4 NOT NULL,
    CONSTRAINT `PK___EFMigrationsHistory` PRIMARY KEY (`MigrationId`)
) CHARACTER SET=utf8mb4;
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='api_db' AND TABLE_NAME='__EFMigrationsHistory';
Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT `MigrationId`, `ProductVersion`
FROM `__EFMigrationsHistory`
ORDER BY `MigrationId`;
Applying migration '20230428093133_init_uniq'.
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER DATABASE CHARACTER SET utf8mb4;
Executed DbCommand (72ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `Users` (
    `Id` int NOT NULL AUTO_INCREMENT,
    `Name` varchar(120) CHARACTER SET utf8mb4 NOT NULL,
    `Email` varchar(64) CHARACTER SET utf8mb4 NOT NULL,
    `Password` longtext CHARACTER SET utf8mb4 NOT NULL,
    `Avatar` longtext CHARACTER SET utf8mb4 NULL,
    `NotUsed` tinyint(1) NOT NULL DEFAULT FALSE,
    `Created` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    `Updated` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    CONSTRAINT `PK_Users` PRIMARY KEY (`Id`)
) CHARACTER SET=utf8mb4;
Executed DbCommand (111ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `NotificationSettings` (
    `Id` int NOT NULL AUTO_INCREMENT,
    `UserId` int NOT NULL,
    `IsEnabled` tinyint(1) NOT NULL DEFAULT TRUE,
    `IsFloat` tinyint(1) NOT NULL DEFAULT FALSE,
    `MedicalControl` tinyint(1) NOT NULL DEFAULT FALSE,
    `NextCourseStart` tinyint(1) NOT NULL DEFAULT TRUE,
    CONSTRAINT `PK_NotificationSettings` PRIMARY KEY (`Id`),
    CONSTRAINT `FK_NotificationSettings_Users_UserId` FOREIGN KEY (`UserId`) REFERENCES `Users` (`Id`) ON DELETE CASCADE
) CHARACTER SET=utf8mb4;
Executed DbCommand (26ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `Remedys` (
    `Id` int NOT NULL AUTO_INCREMENT,
    `UserId` int NOT NULL,
    `Name` varchar(128) CHARACTER SET utf8mb4 NOT NULL,
    `Description` longtext CHARACTER SET utf8mb4 NULL,
    `Comment` longtext CHARACTER SET utf8mb4 NULL,
    `Type` int NOT NULL,
    `Icon` int NOT NULL DEFAULT 0,
    `Color` int NOT NULL DEFAULT 0,
    `Dose` int NULL,
    `MeasureUnit` int NULL,
    `BeforeFood` int NULL,
    `Photo` longtext CHARACTER SET utf8mb4 NULL,
    `NotUsed` tinyint(1) NOT NULL DEFAULT FALSE,
    `Created` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    `Updated` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    CONSTRAINT `PK_Remedys` PRIMARY KEY (`Id`),
    CONSTRAINT `FK_Remedys_Users_UserId` FOREIGN KEY (`UserId`) REFERENCES `Users` (`Id`) ON DELETE CASCADE
) CHARACTER SET=utf8mb4;
Executed DbCommand (33ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `Courses` (
    `Id` int NOT NULL AUTO_INCREMENT,
    `RemedyId` int NOT NULL,
    `Comment` longtext CHARACTER SET utf8mb4 NULL,
    `Regime` int NOT NULL,
    `StartDate` bigint NOT NULL,
    `EndDate` bigint NULL,
    `RemindDate` bigint NULL,
    `Interval` bigint NULL,
    `IsFinished` tinyint(1) NOT NULL DEFAULT FALSE,
    `IsInfinite` tinyint(1) NOT NULL DEFAULT FALSE,
    `NotUsed` tinyint(1) NOT NULL DEFAULT FALSE,
    `Created` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    `Updated` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    CONSTRAINT `PK_Courses` PRIMARY KEY (`Id`),
    CONSTRAINT `FK_Courses_Remedys_RemedyId` FOREIGN KEY (`RemedyId`) REFERENCES `Remedys` (`Id`) ON DELETE CASCADE
) CHARACTER SET=utf8mb4;
Executed DbCommand (16ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `HistoryRemedys` (
    `Id` int NOT NULL AUTO_INCREMENT,
    `RemedyId` int NOT NULL,
    `Dose` int NOT NULL,
    `MeasureUnit` int NOT NULL,
    `Created` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    CONSTRAINT `PK_HistoryRemedys` PRIMARY KEY (`Id`),
    CONSTRAINT `FK_HistoryRemedys_Remedys_RemedyId` FOREIGN KEY (`RemedyId`) REFERENCES `Remedys` (`Id`) ON DELETE CASCADE
) CHARACTER SET=utf8mb4;
Executed DbCommand (17ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `Usages` (
    `Id` int NOT NULL AUTO_INCREMENT,
    `CourseId` int NOT NULL,
    `UseTime` bigint NOT NULL,
    `FactUseTime` bigint NULL,
    `Quantity` int NULL,
    `NotUsed` tinyint(1) NOT NULL DEFAULT FALSE,
    `Created` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    `Updated` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    CONSTRAINT `PK_Usages` PRIMARY KEY (`Id`),
    CONSTRAINT `FK_Usages_Courses_CourseId` FOREIGN KEY (`CourseId`) REFERENCES `Courses` (`Id`) ON DELETE CASCADE
) CHARACTER SET=utf8mb4;
Executed DbCommand (12ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX `IX_Courses_RemedyId` ON `Courses` (`RemedyId`);
Executed DbCommand (10ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX `IX_HistoryRemedys_RemedyId` ON `HistoryRemedys` (`RemedyId`);
Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE UNIQUE INDEX `IX_NotificationSettings_UserId` ON `NotificationSettings` (`UserId`);
Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX `IX_Remedys_UserId` ON `Remedys` (`UserId`);
Executed DbCommand (14ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX `IX_Usages_CourseId` ON `Usages` (`CourseId`);
Executed DbCommand (14ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE UNIQUE INDEX `IX_Users_Email` ON `Users` (`Email`);
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO `__EFMigrationsHistory` (`MigrationId`, `ProductVersion`)
VALUES ('20230428093133_init_uniq', '7.0.5');
Time:28.04.2023 14:34:29 Hello APP
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: J:\2BAD\VitatrackerB2\MedicineReminderAPI
Failed to determine the https port for redirect.
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (31ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 64), @p2='?' (Size = 120), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
INSERT INTO `Users` (`Avatar`, `Email`, `Name`, `Password`)
VALUES (@p0, @p1, @p2, @p3);
SELECT `Id`, `Created`, `NotUsed`, `Updated`
FROM `Users`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();
Executed DbCommand (7ms) [Parameters=[@p4='?' (DbType = Boolean), @p5='?' (DbType = Boolean), @p6='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
INSERT INTO `NotificationSettings` (`IsEnabled`, `NextCourseStart`, `UserId`)
VALUES (@p4, @p5, @p6);
SELECT `Id`, `IsFloat`, `MedicalControl`
FROM `NotificationSettings`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();
Failed executing DbCommand (6ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 64), @p2='?' (Size = 120), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
INSERT INTO `Users` (`Avatar`, `Email`, `Name`, `Password`)
VALUES (@p0, @p1, @p2, @p3);
SELECT `Id`, `Created`, `NotUsed`, `Updated`
FROM `Users`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();
An exception occurred in the database while saving changes for context type 'MedicineReminderAPI.Models.AppApiContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> MySqlConnector.MySqlException (0x80004005): Duplicate entry 'sam@mail.ru' for key 'IX_Users_Email'
   at MySqlConnector.Core.ServerSession.ReceiveReplyAsyncAwaited(ValueTask`1 task) in /_/src/MySqlConnector/Core/ServerSession.cs:line 962
   at MySqlConnector.Core.ResultSet.ReadResultSetHeaderAsync(IOBehavior ioBehavior) in /_/src/MySqlConnector/Core/ResultSet.cs:line 43
   at MySqlConnector.MySqlDataReader.ActivateResultSet(CancellationToken cancellationToken) in /_/src/MySqlConnector/MySqlDataReader.cs:line 130
   at MySqlConnector.MySqlDataReader.CreateAsync(CommandListPosition commandListPosition, ICommandPayloadCreator payloadCreator, IDictionary`2 cachedProcedures, IMySqlCommand command, CommandBehavior behavior, Activity activity, IOBehavior ioBehavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/MySqlDataReader.cs:line 468
   at MySqlConnector.Core.CommandExecutor.ExecuteReaderAsync(IReadOnlyList`1 commands, ICommandPayloadCreator payloadCreator, CommandBehavior behavior, Activity activity, IOBehavior ioBehavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/Core/CommandExecutor.cs:line 56
   at MySqlConnector.MySqlCommand.ExecuteReaderAsync(CommandBehavior behavior, IOBehavior ioBehavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/MySqlCommand.cs:line 344
   at MySqlConnector.MySqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/MySqlCommand.cs:line 337
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Pomelo.EntityFrameworkCore.MySql.Storage.Internal.MySqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
An unhandled exception has occurred while executing the request.
Failed executing DbCommand (1ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 64), @p2='?' (Size = 120), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
INSERT INTO `Users` (`Avatar`, `Email`, `Name`, `Password`)
VALUES (@p0, @p1, @p2, @p3);
SELECT `Id`, `Created`, `NotUsed`, `Updated`
FROM `Users`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();
An exception occurred in the database while saving changes for context type 'MedicineReminderAPI.Models.AppApiContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> MySqlConnector.MySqlException (0x80004005): Duplicate entry 'sam@mail.ru' for key 'IX_Users_Email'
   at MySqlConnector.Core.ServerSession.ReceiveReplyAsyncAwaited(ValueTask`1 task) in /_/src/MySqlConnector/Core/ServerSession.cs:line 962
   at MySqlConnector.Core.ResultSet.ReadResultSetHeaderAsync(IOBehavior ioBehavior) in /_/src/MySqlConnector/Core/ResultSet.cs:line 43
   at MySqlConnector.MySqlDataReader.ActivateResultSet(CancellationToken cancellationToken) in /_/src/MySqlConnector/MySqlDataReader.cs:line 130
   at MySqlConnector.MySqlDataReader.CreateAsync(CommandListPosition commandListPosition, ICommandPayloadCreator payloadCreator, IDictionary`2 cachedProcedures, IMySqlCommand command, CommandBehavior behavior, Activity activity, IOBehavior ioBehavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/MySqlDataReader.cs:line 468
   at MySqlConnector.Core.CommandExecutor.ExecuteReaderAsync(IReadOnlyList`1 commands, ICommandPayloadCreator payloadCreator, CommandBehavior behavior, Activity activity, IOBehavior ioBehavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/Core/CommandExecutor.cs:line 56
   at MySqlConnector.MySqlCommand.ExecuteReaderAsync(CommandBehavior behavior, IOBehavior ioBehavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/MySqlCommand.cs:line 344
   at MySqlConnector.MySqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/MySqlCommand.cs:line 337
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Pomelo.EntityFrameworkCore.MySql.Storage.Internal.MySqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
An unhandled exception has occurred while executing the request.
Failed executing DbCommand (2ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 64), @p2='?' (Size = 120), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
INSERT INTO `Users` (`Avatar`, `Email`, `Name`, `Password`)
VALUES (@p0, @p1, @p2, @p3);
SELECT `Id`, `Created`, `NotUsed`, `Updated`
FROM `Users`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();
An exception occurred in the database while saving changes for context type 'MedicineReminderAPI.Models.AppApiContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> MySqlConnector.MySqlException (0x80004005): Duplicate entry 'sam@mail.ru' for key 'IX_Users_Email'
   at MySqlConnector.Core.ServerSession.ReceiveReplyAsyncAwaited(ValueTask`1 task) in /_/src/MySqlConnector/Core/ServerSession.cs:line 962
   at MySqlConnector.Core.ResultSet.ReadResultSetHeaderAsync(IOBehavior ioBehavior) in /_/src/MySqlConnector/Core/ResultSet.cs:line 43
   at MySqlConnector.MySqlDataReader.ActivateResultSet(CancellationToken cancellationToken) in /_/src/MySqlConnector/MySqlDataReader.cs:line 130
   at MySqlConnector.MySqlDataReader.CreateAsync(CommandListPosition commandListPosition, ICommandPayloadCreator payloadCreator, IDictionary`2 cachedProcedures, IMySqlCommand command, CommandBehavior behavior, Activity activity, IOBehavior ioBehavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/MySqlDataReader.cs:line 468
   at MySqlConnector.Core.CommandExecutor.ExecuteReaderAsync(IReadOnlyList`1 commands, ICommandPayloadCreator payloadCreator, CommandBehavior behavior, Activity activity, IOBehavior ioBehavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/Core/CommandExecutor.cs:line 56
   at MySqlConnector.MySqlCommand.ExecuteReaderAsync(CommandBehavior behavior, IOBehavior ioBehavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/MySqlCommand.cs:line 344
   at MySqlConnector.MySqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/MySqlCommand.cs:line 337
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Pomelo.EntityFrameworkCore.MySql.Storage.Internal.MySqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
An unhandled exception has occurred while executing the request.
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE DATABASE `api_db`;
Executed DbCommand (11ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `__EFMigrationsHistory` (
    `MigrationId` varchar(150) CHARACTER SET utf8mb4 NOT NULL,
    `ProductVersion` varchar(32) CHARACTER SET utf8mb4 NOT NULL,
    CONSTRAINT `PK___EFMigrationsHistory` PRIMARY KEY (`MigrationId`)
) CHARACTER SET=utf8mb4;
Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='api_db' AND TABLE_NAME='__EFMigrationsHistory';
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT `MigrationId`, `ProductVersion`
FROM `__EFMigrationsHistory`
ORDER BY `MigrationId`;
Applying migration '20230428094502_init'.
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER DATABASE CHARACTER SET utf8mb4;
Executed DbCommand (120ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `Users` (
    `Id` int NOT NULL AUTO_INCREMENT,
    `Name` varchar(120) CHARACTER SET utf8mb4 NOT NULL,
    `Email` varchar(64) CHARACTER SET utf8mb4 NOT NULL,
    `Password` longtext CHARACTER SET utf8mb4 NOT NULL,
    `Avatar` longtext CHARACTER SET utf8mb4 NULL,
    `NotUsed` tinyint(1) NOT NULL DEFAULT FALSE,
    `Created` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    `Updated` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    CONSTRAINT `PK_Users` PRIMARY KEY (`Id`)
) CHARACTER SET=utf8mb4;
Executed DbCommand (127ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `NotificationSettings` (
    `Id` int NOT NULL AUTO_INCREMENT,
    `UserId` int NOT NULL,
    `IsEnabled` tinyint(1) NOT NULL DEFAULT TRUE,
    `IsFloat` tinyint(1) NOT NULL DEFAULT FALSE,
    `MedicalControl` tinyint(1) NOT NULL DEFAULT FALSE,
    `NextCourseStart` tinyint(1) NOT NULL DEFAULT TRUE,
    CONSTRAINT `PK_NotificationSettings` PRIMARY KEY (`Id`),
    CONSTRAINT `FK_NotificationSettings_Users_UserId` FOREIGN KEY (`UserId`) REFERENCES `Users` (`Id`) ON DELETE CASCADE
) CHARACTER SET=utf8mb4;
Executed DbCommand (18ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `Remedys` (
    `Id` int NOT NULL AUTO_INCREMENT,
    `UserId` int NOT NULL,
    `Name` varchar(128) CHARACTER SET utf8mb4 NOT NULL,
    `Description` longtext CHARACTER SET utf8mb4 NULL,
    `Comment` longtext CHARACTER SET utf8mb4 NULL,
    `Type` int NOT NULL,
    `Icon` int NOT NULL DEFAULT 0,
    `Color` int NOT NULL DEFAULT 0,
    `Dose` int NULL,
    `MeasureUnit` int NULL,
    `BeforeFood` int NULL,
    `Photo` longtext CHARACTER SET utf8mb4 NULL,
    `NotUsed` tinyint(1) NOT NULL DEFAULT FALSE,
    `Created` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    `Updated` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    CONSTRAINT `PK_Remedys` PRIMARY KEY (`Id`),
    CONSTRAINT `FK_Remedys_Users_UserId` FOREIGN KEY (`UserId`) REFERENCES `Users` (`Id`) ON DELETE CASCADE
) CHARACTER SET=utf8mb4;
Executed DbCommand (16ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `Courses` (
    `Id` int NOT NULL AUTO_INCREMENT,
    `RemedyId` int NOT NULL,
    `Comment` longtext CHARACTER SET utf8mb4 NULL,
    `Regime` int NOT NULL,
    `StartDate` bigint NOT NULL,
    `EndDate` bigint NULL,
    `RemindDate` bigint NULL,
    `Interval` bigint NULL,
    `IsFinished` tinyint(1) NOT NULL DEFAULT FALSE,
    `IsInfinite` tinyint(1) NOT NULL DEFAULT FALSE,
    `NotUsed` tinyint(1) NOT NULL DEFAULT FALSE,
    `Created` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    `Updated` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    CONSTRAINT `PK_Courses` PRIMARY KEY (`Id`),
    CONSTRAINT `FK_Courses_Remedys_RemedyId` FOREIGN KEY (`RemedyId`) REFERENCES `Remedys` (`Id`) ON DELETE CASCADE
) CHARACTER SET=utf8mb4;
Executed DbCommand (16ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `HistoryRemedys` (
    `Id` int NOT NULL AUTO_INCREMENT,
    `RemedyId` int NOT NULL,
    `Dose` int NOT NULL,
    `MeasureUnit` int NOT NULL,
    `Created` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    CONSTRAINT `PK_HistoryRemedys` PRIMARY KEY (`Id`),
    CONSTRAINT `FK_HistoryRemedys_Remedys_RemedyId` FOREIGN KEY (`RemedyId`) REFERENCES `Remedys` (`Id`) ON DELETE CASCADE
) CHARACTER SET=utf8mb4;
Executed DbCommand (15ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `Usages` (
    `Id` int NOT NULL AUTO_INCREMENT,
    `CourseId` int NOT NULL,
    `UseTime` bigint NOT NULL,
    `FactUseTime` bigint NULL,
    `Quantity` int NULL,
    `NotUsed` tinyint(1) NOT NULL DEFAULT FALSE,
    `Created` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    `Updated` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    CONSTRAINT `PK_Usages` PRIMARY KEY (`Id`),
    CONSTRAINT `FK_Usages_Courses_CourseId` FOREIGN KEY (`CourseId`) REFERENCES `Courses` (`Id`) ON DELETE CASCADE
) CHARACTER SET=utf8mb4;
Executed DbCommand (12ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX `IX_Courses_RemedyId` ON `Courses` (`RemedyId`);
Executed DbCommand (16ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX `IX_HistoryRemedys_RemedyId` ON `HistoryRemedys` (`RemedyId`);
Executed DbCommand (18ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE UNIQUE INDEX `IX_NotificationSettings_UserId` ON `NotificationSettings` (`UserId`);
Executed DbCommand (24ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX `IX_Remedys_UserId` ON `Remedys` (`UserId`);
Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX `IX_Usages_CourseId` ON `Usages` (`CourseId`);
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO `__EFMigrationsHistory` (`MigrationId`, `ProductVersion`)
VALUES ('20230428094502_init', '7.0.5');
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='api_db' AND TABLE_NAME='__EFMigrationsHistory';
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='api_db' AND TABLE_NAME='__EFMigrationsHistory';
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT `MigrationId`, `ProductVersion`
FROM `__EFMigrationsHistory`
ORDER BY `MigrationId`;
Applying migration '20230428094620_init_uniq'.
Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE UNIQUE INDEX `IX_Users_Email` ON `Users` (`Email`);
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO `__EFMigrationsHistory` (`MigrationId`, `ProductVersion`)
VALUES ('20230428094620_init_uniq', '7.0.5');
Time:28.04.2023 14:46:56 Hello APP
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: J:\2BAD\VitatrackerB2\MedicineReminderAPI
Failed to determine the https port for redirect.
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (27ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 64), @p2='?' (Size = 120), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
INSERT INTO `Users` (`Avatar`, `Email`, `Name`, `Password`)
VALUES (@p0, @p1, @p2, @p3);
SELECT `Id`, `Created`, `NotUsed`, `Updated`
FROM `Users`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();
Executed DbCommand (7ms) [Parameters=[@p4='?' (DbType = Boolean), @p5='?' (DbType = Boolean), @p6='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
INSERT INTO `NotificationSettings` (`IsEnabled`, `NextCourseStart`, `UserId`)
VALUES (@p4, @p5, @p6);
SELECT `Id`, `IsFloat`, `MedicalControl`
FROM `NotificationSettings`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();
Failed executing DbCommand (5ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 64), @p2='?' (Size = 120), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
INSERT INTO `Users` (`Avatar`, `Email`, `Name`, `Password`)
VALUES (@p0, @p1, @p2, @p3);
SELECT `Id`, `Created`, `NotUsed`, `Updated`
FROM `Users`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();
An exception occurred in the database while saving changes for context type 'MedicineReminderAPI.Models.AppApiContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> MySqlConnector.MySqlException (0x80004005): Duplicate entry 'sam@mail.ru' for key 'IX_Users_Email'
   at MySqlConnector.Core.ServerSession.ReceiveReplyAsyncAwaited(ValueTask`1 task) in /_/src/MySqlConnector/Core/ServerSession.cs:line 962
   at MySqlConnector.Core.ResultSet.ReadResultSetHeaderAsync(IOBehavior ioBehavior) in /_/src/MySqlConnector/Core/ResultSet.cs:line 43
   at MySqlConnector.MySqlDataReader.ActivateResultSet(CancellationToken cancellationToken) in /_/src/MySqlConnector/MySqlDataReader.cs:line 130
   at MySqlConnector.MySqlDataReader.CreateAsync(CommandListPosition commandListPosition, ICommandPayloadCreator payloadCreator, IDictionary`2 cachedProcedures, IMySqlCommand command, CommandBehavior behavior, Activity activity, IOBehavior ioBehavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/MySqlDataReader.cs:line 468
   at MySqlConnector.Core.CommandExecutor.ExecuteReaderAsync(IReadOnlyList`1 commands, ICommandPayloadCreator payloadCreator, CommandBehavior behavior, Activity activity, IOBehavior ioBehavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/Core/CommandExecutor.cs:line 56
   at MySqlConnector.MySqlCommand.ExecuteReaderAsync(CommandBehavior behavior, IOBehavior ioBehavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/MySqlCommand.cs:line 344
   at MySqlConnector.MySqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/MySqlCommand.cs:line 337
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Pomelo.EntityFrameworkCore.MySql.Storage.Internal.MySqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
An unhandled exception has occurred while executing the request.
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='api_db' AND TABLE_NAME='__EFMigrationsHistory';
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='api_db' AND TABLE_NAME='__EFMigrationsHistory';
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT `MigrationId`, `ProductVersion`
FROM `__EFMigrationsHistory`
ORDER BY `MigrationId`;
Applying migration '20230428095106_name'.
Executed DbCommand (83ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE `Users` MODIFY COLUMN `Name` varchar(120) CHARACTER SET utf8mb4 NULL;
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO `__EFMigrationsHistory` (`MigrationId`, `ProductVersion`)
VALUES ('20230428095106_name', '7.0.5');
Time:28.04.2023 14:51:56 Hello APP
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: J:\2BAD\VitatrackerB2\MedicineReminderAPI
Failed to determine the https port for redirect.
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Failed executing DbCommand (26ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 64), @p2='?' (Size = 120), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
INSERT INTO `Users` (`Avatar`, `Email`, `Name`, `Password`)
VALUES (@p0, @p1, @p2, @p3);
SELECT `Id`, `Created`, `NotUsed`, `Updated`
FROM `Users`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();
An exception occurred in the database while saving changes for context type 'MedicineReminderAPI.Models.AppApiContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> MySqlConnector.MySqlException (0x80004005): Duplicate entry 'sam@mail.ru' for key 'IX_Users_Email'
   at MySqlConnector.Core.ServerSession.ReceiveReplyAsyncAwaited(ValueTask`1 task) in /_/src/MySqlConnector/Core/ServerSession.cs:line 962
   at MySqlConnector.Core.ResultSet.ReadResultSetHeaderAsync(IOBehavior ioBehavior) in /_/src/MySqlConnector/Core/ResultSet.cs:line 43
   at MySqlConnector.MySqlDataReader.ActivateResultSet(CancellationToken cancellationToken) in /_/src/MySqlConnector/MySqlDataReader.cs:line 130
   at MySqlConnector.MySqlDataReader.CreateAsync(CommandListPosition commandListPosition, ICommandPayloadCreator payloadCreator, IDictionary`2 cachedProcedures, IMySqlCommand command, CommandBehavior behavior, Activity activity, IOBehavior ioBehavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/MySqlDataReader.cs:line 468
   at MySqlConnector.Core.CommandExecutor.ExecuteReaderAsync(IReadOnlyList`1 commands, ICommandPayloadCreator payloadCreator, CommandBehavior behavior, Activity activity, IOBehavior ioBehavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/Core/CommandExecutor.cs:line 56
   at MySqlConnector.MySqlCommand.ExecuteReaderAsync(CommandBehavior behavior, IOBehavior ioBehavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/MySqlCommand.cs:line 344
   at MySqlConnector.MySqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/MySqlCommand.cs:line 337
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Pomelo.EntityFrameworkCore.MySql.Storage.Internal.MySqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
An unhandled exception has occurred while executing the request.
Executed DbCommand (6ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 64), @p2='?' (Size = 120), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
INSERT INTO `Users` (`Avatar`, `Email`, `Name`, `Password`)
VALUES (@p0, @p1, @p2, @p3);
SELECT `Id`, `Created`, `NotUsed`, `Updated`
FROM `Users`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();
Executed DbCommand (4ms) [Parameters=[@p4='?' (DbType = Boolean), @p5='?' (DbType = Boolean), @p6='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
INSERT INTO `NotificationSettings` (`IsEnabled`, `NextCourseStart`, `UserId`)
VALUES (@p4, @p5, @p6);
SELECT `Id`, `IsFloat`, `MedicalControl`
FROM `NotificationSettings`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();
Time:28.04.2023 15:00:52 Hello APP
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: J:\2BAD\VitatrackerB2\MedicineReminderAPI
Failed to determine the https port for redirect.
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (37ms) [Parameters=[@__auth_Email_0='?' (Size = 64)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE `u`.`Email` = @__auth_Email_0
LIMIT 1
Executed DbCommand (1ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (0ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (1ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedys` AS `r`
WHERE (`r`.`UserId` = @__Id_0) AND NOT (`r`.`NotUsed`)
Executed DbCommand (0ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (17ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (Size = 128), @p6='?' (Size = 4000), @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
INSERT INTO `Remedys` (`BeforeFood`, `Comment`, `Description`, `Dose`, `MeasureUnit`, `Name`, `Photo`, `Type`, `UserId`)
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
SELECT `Id`, `Color`, `Created`, `Icon`, `NotUsed`, `Updated`
FROM `Remedys`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();
Executed DbCommand (0ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (0ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedys` AS `r`
WHERE (`r`.`UserId` = @__Id_0) AND NOT (`r`.`NotUsed`)
Time:28.04.2023 15:24:50 Hello APP
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: J:\2BAD\VitatrackerB2\MedicineReminderAPI
Failed to determine the https port for redirect.
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (58ms) [Parameters=[@__auth_Email_0='?' (Size = 64)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE `u`.`Email` = @__auth_Email_0
LIMIT 1
Executed DbCommand (1ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (26ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedys` AS `r`
WHERE (`r`.`UserId` = @__Id_0) AND NOT (`r`.`NotUsed`)
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (833ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='db_a97535_irina74' AND TABLE_NAME='__EFMigrationsHistory';
Executed DbCommand (236ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `__EFMigrationsHistory` (
    `MigrationId` varchar(150) CHARACTER SET utf8mb4 NOT NULL,
    `ProductVersion` varchar(32) CHARACTER SET utf8mb4 NOT NULL,
    CONSTRAINT `PK___EFMigrationsHistory` PRIMARY KEY (`MigrationId`)
) CHARACTER SET=utf8mb4;
Executed DbCommand (790ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='db_a97535_irina74' AND TABLE_NAME='__EFMigrationsHistory';
Executed DbCommand (214ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT `MigrationId`, `ProductVersion`
FROM `__EFMigrationsHistory`
ORDER BY `MigrationId`;
Applying migration '20230428094502_init'.
Executed DbCommand (213ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER DATABASE CHARACTER SET utf8mb4;
Executed DbCommand (258ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `Users` (
    `Id` int NOT NULL AUTO_INCREMENT,
    `Name` varchar(120) CHARACTER SET utf8mb4 NOT NULL,
    `Email` varchar(64) CHARACTER SET utf8mb4 NOT NULL,
    `Password` longtext CHARACTER SET utf8mb4 NOT NULL,
    `Avatar` longtext CHARACTER SET utf8mb4 NULL,
    `NotUsed` tinyint(1) NOT NULL DEFAULT FALSE,
    `Created` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    `Updated` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    CONSTRAINT `PK_Users` PRIMARY KEY (`Id`)
) CHARACTER SET=utf8mb4;
Executed DbCommand (300ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `NotificationSettings` (
    `Id` int NOT NULL AUTO_INCREMENT,
    `UserId` int NOT NULL,
    `IsEnabled` tinyint(1) NOT NULL DEFAULT TRUE,
    `IsFloat` tinyint(1) NOT NULL DEFAULT FALSE,
    `MedicalControl` tinyint(1) NOT NULL DEFAULT FALSE,
    `NextCourseStart` tinyint(1) NOT NULL DEFAULT TRUE,
    CONSTRAINT `PK_NotificationSettings` PRIMARY KEY (`Id`),
    CONSTRAINT `FK_NotificationSettings_Users_UserId` FOREIGN KEY (`UserId`) REFERENCES `Users` (`Id`) ON DELETE CASCADE
) CHARACTER SET=utf8mb4;
Executed DbCommand (278ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `Remedys` (
    `Id` int NOT NULL AUTO_INCREMENT,
    `UserId` int NOT NULL,
    `Name` varchar(128) CHARACTER SET utf8mb4 NOT NULL,
    `Description` longtext CHARACTER SET utf8mb4 NULL,
    `Comment` longtext CHARACTER SET utf8mb4 NULL,
    `Type` int NOT NULL,
    `Icon` int NOT NULL DEFAULT 0,
    `Color` int NOT NULL DEFAULT 0,
    `Dose` int NULL,
    `MeasureUnit` int NULL,
    `BeforeFood` int NULL,
    `Photo` longtext CHARACTER SET utf8mb4 NULL,
    `NotUsed` tinyint(1) NOT NULL DEFAULT FALSE,
    `Created` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    `Updated` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    CONSTRAINT `PK_Remedys` PRIMARY KEY (`Id`),
    CONSTRAINT `FK_Remedys_Users_UserId` FOREIGN KEY (`UserId`) REFERENCES `Users` (`Id`) ON DELETE CASCADE
) CHARACTER SET=utf8mb4;
Executed DbCommand (274ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `Courses` (
    `Id` int NOT NULL AUTO_INCREMENT,
    `RemedyId` int NOT NULL,
    `Comment` longtext CHARACTER SET utf8mb4 NULL,
    `Regime` int NOT NULL,
    `StartDate` bigint NOT NULL,
    `EndDate` bigint NULL,
    `RemindDate` bigint NULL,
    `Interval` bigint NULL,
    `IsFinished` tinyint(1) NOT NULL DEFAULT FALSE,
    `IsInfinite` tinyint(1) NOT NULL DEFAULT FALSE,
    `NotUsed` tinyint(1) NOT NULL DEFAULT FALSE,
    `Created` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    `Updated` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    CONSTRAINT `PK_Courses` PRIMARY KEY (`Id`),
    CONSTRAINT `FK_Courses_Remedys_RemedyId` FOREIGN KEY (`RemedyId`) REFERENCES `Remedys` (`Id`) ON DELETE CASCADE
) CHARACTER SET=utf8mb4;
Executed DbCommand (265ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `HistoryRemedys` (
    `Id` int NOT NULL AUTO_INCREMENT,
    `RemedyId` int NOT NULL,
    `Dose` int NOT NULL,
    `MeasureUnit` int NOT NULL,
    `Created` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    CONSTRAINT `PK_HistoryRemedys` PRIMARY KEY (`Id`),
    CONSTRAINT `FK_HistoryRemedys_Remedys_RemedyId` FOREIGN KEY (`RemedyId`) REFERENCES `Remedys` (`Id`) ON DELETE CASCADE
) CHARACTER SET=utf8mb4;
Executed DbCommand (269ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `Usages` (
    `Id` int NOT NULL AUTO_INCREMENT,
    `CourseId` int NOT NULL,
    `UseTime` bigint NOT NULL,
    `FactUseTime` bigint NULL,
    `Quantity` int NULL,
    `NotUsed` tinyint(1) NOT NULL DEFAULT FALSE,
    `Created` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    `Updated` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    CONSTRAINT `PK_Usages` PRIMARY KEY (`Id`),
    CONSTRAINT `FK_Usages_Courses_CourseId` FOREIGN KEY (`CourseId`) REFERENCES `Courses` (`Id`) ON DELETE CASCADE
) CHARACTER SET=utf8mb4;
Executed DbCommand (278ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX `IX_Courses_RemedyId` ON `Courses` (`RemedyId`);
Executed DbCommand (229ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX `IX_HistoryRemedys_RemedyId` ON `HistoryRemedys` (`RemedyId`);
Executed DbCommand (234ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE UNIQUE INDEX `IX_NotificationSettings_UserId` ON `NotificationSettings` (`UserId`);
Executed DbCommand (245ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX `IX_Remedys_UserId` ON `Remedys` (`UserId`);
Executed DbCommand (232ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX `IX_Usages_CourseId` ON `Usages` (`CourseId`);
Executed DbCommand (215ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO `__EFMigrationsHistory` (`MigrationId`, `ProductVersion`)
VALUES ('20230428094502_init', '7.0.5');
Applying migration '20230428094620_init_uniq'.
Executed DbCommand (239ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE UNIQUE INDEX `IX_Users_Email` ON `Users` (`Email`);
Executed DbCommand (231ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO `__EFMigrationsHistory` (`MigrationId`, `ProductVersion`)
VALUES ('20230428094620_init_uniq', '7.0.5');
Applying migration '20230428095106_name'.
Executed DbCommand (357ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE `Users` MODIFY COLUMN `Name` varchar(120) CHARACTER SET utf8mb4 NULL;
Executed DbCommand (209ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO `__EFMigrationsHistory` (`MigrationId`, `ProductVersion`)
VALUES ('20230428095106_name', '7.0.5');
Time:02.05.2023 9:40:29 Hello APP
Now listening on: https://localhost:7102
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: J:\2BAD\VitatrackerB2\MedicineReminderAPI
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (269ms) [Parameters=[@__auth_Email_0='?' (Size = 64)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE `u`.`Email` = @__auth_Email_0
LIMIT 1
Executed DbCommand (198ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (211ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedys` AS `r`
WHERE (`r`.`UserId` = @__Id_0) AND NOT (`r`.`NotUsed`)
Executed DbCommand (197ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (204ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (Size = 128), @p6='?' (Size = 4000), @p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
INSERT INTO `Remedys` (`BeforeFood`, `Comment`, `Description`, `Dose`, `MeasureUnit`, `Name`, `Photo`, `Type`, `UserId`)
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
SELECT `Id`, `Color`, `Created`, `Icon`, `NotUsed`, `Updated`
FROM `Remedys`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();
Executed DbCommand (197ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (198ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedys` AS `r`
WHERE (`r`.`UserId` = @__user_Id_0) AND NOT (`r`.`NotUsed`)
Executed DbCommand (199ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedys` AS `r`
WHERE `r`.`Id` = @__p_0
LIMIT 1
Executed DbCommand (199ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (200ms) [Parameters=[@p14='?' (DbType = Int32), @p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (Size = 4000), @p3='?' (DbType = DateTime), @p4='?' (Size = 4000), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32), @p7='?' (DbType = Int32), @p8='?' (Size = 128), @p9='?' (DbType = Boolean), @p10='?' (Size = 4000), @p11='?' (DbType = Int32), @p12='?' (DbType = DateTime), @p13='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET AUTOCOMMIT = 1;
UPDATE `Remedys` SET `BeforeFood` = @p0, `Color` = @p1, `Comment` = @p2, `Created` = @p3, `Description` = @p4, `Dose` = @p5, `Icon` = @p6, `MeasureUnit` = @p7, `Name` = @p8, `NotUsed` = @p9, `Photo` = @p10, `Type` = @p11, `Updated` = @p12, `UserId` = @p13
WHERE `Id` = @p14;
SELECT ROW_COUNT();
Time:05.05.2023 9:02:12 Hello APP
Now listening on: https://localhost:7102
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: J:\2BAD\VitatrackerB2\MedicineReminderAPI
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (274ms) [Parameters=[@__auth_Email_0='?' (Size = 64)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE `u`.`Email` = @__auth_Email_0
LIMIT 1
Executed DbCommand (206ms) [Parameters=[@__auth_Email_0='?' (Size = 64)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE `u`.`Email` = @__auth_Email_0
LIMIT 1
Executed DbCommand (206ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (227ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedys` AS `r`
WHERE (`r`.`UserId` = @__user_Id_0) AND NOT (`r`.`NotUsed`)
Executed DbCommand (207ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedys` AS `r`
WHERE `r`.`Id` = @__p_0
LIMIT 1
Executed DbCommand (206ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (316ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (306ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Time:05.05.2023 11:30:29 Hello APP
Now listening on: https://localhost:7102
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: J:\2BAD\VitatrackerB2\MedicineReminderAPI
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (235ms) [Parameters=[@__auth_Email_0='?' (Size = 64)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE `u`.`Email` = @__auth_Email_0
LIMIT 1
Executed DbCommand (199ms) [Parameters=[@__auth_Email_0='?' (Size = 64)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE `u`.`Email` = @__auth_Email_0
LIMIT 1
Executed DbCommand (198ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (207ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedys` AS `r`
WHERE (`r`.`UserId` = @__Id_0) AND NOT (`r`.`NotUsed`)
Executed DbCommand (201ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (201ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (199ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (199ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (199ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (215ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedys` AS `r`
WHERE `r`.`Id` = @__p_0
LIMIT 1
Executed DbCommand (207ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (206ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedys` AS `r`
WHERE `r`.`Id` = @__p_0
LIMIT 1
Executed DbCommand (206ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (206ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (206ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (207ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedys` AS `r`
WHERE `r`.`Id` = @__p_0
LIMIT 1
Executed DbCommand (206ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (206ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (206ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (206ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedys` AS `r`
WHERE `r`.`Id` = @__p_0
LIMIT 1
Executed DbCommand (207ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (206ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (206ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedys` AS `r`
WHERE `r`.`Id` = @__p_0
LIMIT 1
Executed DbCommand (206ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (206ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (206ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (516ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedys` AS `r`
WHERE `r`.`Id` = @__p_0
LIMIT 1
Executed DbCommand (199ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (202ms) [Parameters=[@p14='?' (DbType = Int32), @p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (Size = 4000), @p3='?' (DbType = DateTime), @p4='?' (Size = 4000), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32), @p7='?' (DbType = Int32), @p8='?' (Size = 128), @p9='?' (DbType = Boolean), @p10='?' (Size = 4000), @p11='?' (DbType = Int32), @p12='?' (DbType = DateTime), @p13='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET AUTOCOMMIT = 1;
UPDATE `Remedys` SET `BeforeFood` = @p0, `Color` = @p1, `Comment` = @p2, `Created` = @p3, `Description` = @p4, `Dose` = @p5, `Icon` = @p6, `MeasureUnit` = @p7, `Name` = @p8, `NotUsed` = @p9, `Photo` = @p10, `Type` = @p11, `Updated` = @p12, `UserId` = @p13
WHERE `Id` = @p14;
SELECT ROW_COUNT();
Executed DbCommand (202ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedys` AS `r`
WHERE `r`.`Id` = @__p_0
LIMIT 1
Executed DbCommand (202ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (202ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedys` AS `r`
WHERE `r`.`Id` = @__p_0
LIMIT 1
Executed DbCommand (201ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (203ms) [Parameters=[@p14='?' (DbType = Int32), @p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (Size = 4000), @p3='?' (DbType = DateTime), @p4='?' (Size = 4000), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32), @p7='?' (DbType = Int32), @p8='?' (Size = 128), @p9='?' (DbType = Boolean), @p10='?' (Size = 4000), @p11='?' (DbType = Int32), @p12='?' (DbType = DateTime), @p13='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET AUTOCOMMIT = 1;
UPDATE `Remedys` SET `BeforeFood` = @p0, `Color` = @p1, `Comment` = @p2, `Created` = @p3, `Description` = @p4, `Dose` = @p5, `Icon` = @p6, `MeasureUnit` = @p7, `Name` = @p8, `NotUsed` = @p9, `Photo` = @p10, `Type` = @p11, `Updated` = @p12, `UserId` = @p13
WHERE `Id` = @p14;
SELECT ROW_COUNT();
Time:05.05.2023 11:40:57 Hello APP
Now listening on: https://localhost:7102
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: J:\2BAD\VitatrackerB2\MedicineReminderAPI
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (243ms) [Parameters=[@__auth_Email_0='?' (Size = 64)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE `u`.`Email` = @__auth_Email_0
LIMIT 1
Executed DbCommand (205ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (222ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedys` AS `r`
WHERE (`r`.`UserId` = @__user_Id_0) AND NOT (`r`.`NotUsed`)
Executed DbCommand (205ms) [Parameters=[@__r_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__r_Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (203ms) [Parameters=[@__r_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__r_Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (202ms) [Parameters=[@__r_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__r_Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (203ms) [Parameters=[@__c_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__c_Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (202ms) [Parameters=[@__c_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__c_Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (203ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE `u`.`Id` = @__p_0
LIMIT 1
Executed DbCommand (202ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (204ms) [Parameters=[@__usage_CourseId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE `c`.`Id` = @__usage_CourseId_0
LIMIT 1
Executed DbCommand (203ms) [Parameters=[@__course_RemedyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedys` AS `r`
WHERE `r`.`Id` = @__course_RemedyId_0
LIMIT 1
Executed DbCommand (208ms) [Parameters=[@p7='?' (DbType = Int32), @p0='?' (DbType = Int32), @p1='?' (DbType = DateTime), @p2='?' (DbType = Int64), @p3='?' (DbType = Boolean), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime), @p6='?' (DbType = Int64)], CommandType='Text', CommandTimeout='30']
SET AUTOCOMMIT = 1;
UPDATE `Usages` SET `CourseId` = @p0, `Created` = @p1, `FactUseTime` = @p2, `NotUsed` = @p3, `Quantity` = @p4, `Updated` = @p5, `UseTime` = @p6
WHERE `Id` = @p7;
SELECT ROW_COUNT();
Time:05.05.2023 11:51:34 Hello APP
Now listening on: https://localhost:7102
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: J:\2BAD\VitatrackerB2\MedicineReminderAPI
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (239ms) [Parameters=[@__auth_Email_0='?' (Size = 64)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE `u`.`Email` = @__auth_Email_0
LIMIT 1
Executed DbCommand (203ms) [Parameters=[@__usage_CourseId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE `c`.`Id` = @__usage_CourseId_0
LIMIT 1
Executed DbCommand (200ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (201ms) [Parameters=[@__course_RemedyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedys` AS `r`
WHERE `r`.`Id` = @__course_RemedyId_0
LIMIT 1
Executed DbCommand (207ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int64), @p2='?' (DbType = Int32), @p3='?' (DbType = Int64)], CommandType='Text', CommandTimeout='30']
INSERT INTO `Usages` (`CourseId`, `FactUseTime`, `Quantity`, `UseTime`)
VALUES (@p0, @p1, @p2, @p3);
SELECT `Id`, `Created`, `NotUsed`, `Updated`
FROM `Usages`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();
Time:05.05.2023 11:54:49 Hello APP
Now listening on: https://localhost:7102
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: J:\2BAD\VitatrackerB2\MedicineReminderAPI
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (231ms) [Parameters=[@__auth_Email_0='?' (Size = 64)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE `u`.`Email` = @__auth_Email_0
LIMIT 1
Executed DbCommand (208ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (218ms) [Parameters=[@p7='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (DbType = DateTime), @p2='?' (Size = 64), @p3='?' (Size = 120), @p4='?' (DbType = Boolean), @p5='?' (Size = 4000), @p6='?' (DbType = DateTime)], CommandType='Text', CommandTimeout='30']
SET AUTOCOMMIT = 1;
UPDATE `Users` SET `Avatar` = @p0, `Created` = @p1, `Email` = @p2, `Name` = @p3, `NotUsed` = @p4, `Password` = @p5, `Updated` = @p6
WHERE `Id` = @p7;
SELECT ROW_COUNT();
Time:05.05.2023 12:00:40 Hello APP
Now listening on: https://localhost:7102
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: J:\2BAD\VitatrackerB2\MedicineReminderAPI
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (258ms) [Parameters=[@__auth_Email_0='?' (Size = 64)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE `u`.`Email` = @__auth_Email_0
LIMIT 1
Executed DbCommand (211ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE `u`.`Id` = @__p_0
LIMIT 1
Executed DbCommand (199ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (200ms) [Parameters=[@__usage_CourseId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE `c`.`Id` = @__usage_CourseId_0
LIMIT 1
Executed DbCommand (201ms) [Parameters=[@__course_RemedyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedys` AS `r`
WHERE `r`.`Id` = @__course_RemedyId_0
LIMIT 1
Executed DbCommand (200ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE `u`.`Id` = @__p_0
LIMIT 1
Executed DbCommand (201ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (200ms) [Parameters=[@__usage_CourseId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE `c`.`Id` = @__usage_CourseId_0
LIMIT 1
Executed DbCommand (200ms) [Parameters=[@__course_RemedyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedys` AS `r`
WHERE `r`.`Id` = @__course_RemedyId_0
LIMIT 1
Executed DbCommand (202ms) [Parameters=[@p7='?' (DbType = Int32), @p0='?' (DbType = Int32), @p1='?' (DbType = DateTime), @p2='?' (DbType = Int64), @p3='?' (DbType = Boolean), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime), @p6='?' (DbType = Int64)], CommandType='Text', CommandTimeout='30']
SET AUTOCOMMIT = 1;
UPDATE `Usages` SET `CourseId` = @p0, `Created` = @p1, `FactUseTime` = @p2, `NotUsed` = @p3, `Quantity` = @p4, `Updated` = @p5, `UseTime` = @p6
WHERE `Id` = @p7;
SELECT ROW_COUNT();
Time:05.05.2023 12:54:25 Hello APP
Now listening on: https://localhost:7102
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: J:\2BAD\VitatrackerB2\MedicineReminderAPI
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (237ms) [Parameters=[@__auth_Email_0='?' (Size = 64)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE `u`.`Email` = @__auth_Email_0
LIMIT 1
Executed DbCommand (204ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (203ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (212ms) [Parameters=[@p7='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (DbType = DateTime), @p2='?' (Size = 64), @p3='?' (Size = 120), @p4='?' (DbType = Boolean), @p5='?' (Size = 4000), @p6='?' (DbType = DateTime)], CommandType='Text', CommandTimeout='30']
SET AUTOCOMMIT = 1;
UPDATE `Users` SET `Avatar` = @p0, `Created` = @p1, `Email` = @p2, `Name` = @p3, `NotUsed` = @p4, `Password` = @p5, `Updated` = @p6
WHERE `Id` = @p7;
SELECT ROW_COUNT();
Executed DbCommand (202ms) [Parameters=[@__usage_CourseId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE `c`.`Id` = @__usage_CourseId_0
LIMIT 1
Executed DbCommand (199ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (202ms) [Parameters=[@__course_RemedyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedys` AS `r`
WHERE `r`.`Id` = @__course_RemedyId_0
LIMIT 1
Executed DbCommand (202ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int64), @p2='?' (DbType = Int32), @p3='?' (DbType = Int64)], CommandType='Text', CommandTimeout='30']
INSERT INTO `Usages` (`CourseId`, `FactUseTime`, `Quantity`, `UseTime`)
VALUES (@p0, @p1, @p2, @p3);
SELECT `Id`, `Created`, `NotUsed`, `Updated`
FROM `Usages`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();
Executed DbCommand (200ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE `u`.`Id` = @__p_0
LIMIT 1
Executed DbCommand (200ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (200ms) [Parameters=[@__usage_CourseId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE `c`.`Id` = @__usage_CourseId_0
LIMIT 1
Executed DbCommand (200ms) [Parameters=[@__course_RemedyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedys` AS `r`
WHERE `r`.`Id` = @__course_RemedyId_0
LIMIT 1
Executed DbCommand (200ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE `u`.`Id` = @__p_0
LIMIT 1
Executed DbCommand (200ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (200ms) [Parameters=[@__usage_CourseId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE `c`.`Id` = @__usage_CourseId_0
LIMIT 1
Executed DbCommand (200ms) [Parameters=[@__course_RemedyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedys` AS `r`
WHERE `r`.`Id` = @__course_RemedyId_0
LIMIT 1
Executed DbCommand (199ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE `u`.`Id` = @__p_0
LIMIT 1
Executed DbCommand (199ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (200ms) [Parameters=[@__usage_CourseId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE `c`.`Id` = @__usage_CourseId_0
LIMIT 1
Executed DbCommand (200ms) [Parameters=[@__course_RemedyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedys` AS `r`
WHERE `r`.`Id` = @__course_RemedyId_0
LIMIT 1
Executed DbCommand (200ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE `u`.`Id` = @__p_0
LIMIT 1
Executed DbCommand (199ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (200ms) [Parameters=[@__usage_CourseId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE `c`.`Id` = @__usage_CourseId_0
LIMIT 1
Executed DbCommand (199ms) [Parameters=[@__course_RemedyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedys` AS `r`
WHERE `r`.`Id` = @__course_RemedyId_0
LIMIT 1
Failed executing DbCommand (204ms) [Parameters=[@p7='?' (DbType = Int32), @p0='?' (DbType = Int32), @p1='?' (DbType = DateTime), @p2='?' (DbType = Int64), @p3='?' (DbType = Boolean), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime), @p6='?' (DbType = Int64)], CommandType='Text', CommandTimeout='30']
SET AUTOCOMMIT = 1;
UPDATE `Usages` SET `CourseId` = @p0, `Created` = @p1, `FactUseTime` = @p2, `NotUsed` = @p3, `Quantity` = @p4, `Updated` = @p5, `UseTime` = @p6
WHERE `Id` = @p7;
SELECT ROW_COUNT();
An exception occurred in the database while saving changes for context type 'MedicineReminderAPI.Models.AppApiContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> MySqlConnector.MySqlException (0x80004005): Cannot add or update a child row: a foreign key constraint fails
   at MySqlConnector.Core.ServerSession.ReceiveReplyAsyncAwaited(ValueTask`1 task) in /_/src/MySqlConnector/Core/ServerSession.cs:line 964
   at MySqlConnector.Core.ResultSet.ReadResultSetHeaderAsync(IOBehavior ioBehavior) in /_/src/MySqlConnector/Core/ResultSet.cs:line 175
   at MySqlConnector.MySqlDataReader.ActivateResultSet(CancellationToken cancellationToken) in /_/src/MySqlConnector/MySqlDataReader.cs:line 130
   at MySqlConnector.MySqlDataReader.CreateAsync(CommandListPosition commandListPosition, ICommandPayloadCreator payloadCreator, IDictionary`2 cachedProcedures, IMySqlCommand command, CommandBehavior behavior, Activity activity, IOBehavior ioBehavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/MySqlDataReader.cs:line 493
   at MySqlConnector.Core.CommandExecutor.ExecuteReaderAsync(IReadOnlyList`1 commands, ICommandPayloadCreator payloadCreator, CommandBehavior behavior, Activity activity, IOBehavior ioBehavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/Core/CommandExecutor.cs:line 77
   at MySqlConnector.MySqlCommand.ExecuteReaderAsync(CommandBehavior behavior, IOBehavior ioBehavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/MySqlCommand.cs:line 345
   at MySqlConnector.MySqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/MySqlCommand.cs:line 337
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Pomelo.EntityFrameworkCore.MySql.Storage.Internal.MySqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
An unhandled exception has occurred while executing the request.
Executed DbCommand (199ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE `u`.`Id` = @__p_0
LIMIT 1
Executed DbCommand (199ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (199ms) [Parameters=[@__usage_CourseId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE `c`.`Id` = @__usage_CourseId_0
LIMIT 1
Executed DbCommand (200ms) [Parameters=[@__course_RemedyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedys` AS `r`
WHERE `r`.`Id` = @__course_RemedyId_0
LIMIT 1
Executed DbCommand (200ms) [Parameters=[@p7='?' (DbType = Int32), @p0='?' (DbType = Int32), @p1='?' (DbType = DateTime), @p2='?' (DbType = Int64), @p3='?' (DbType = Boolean), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime), @p6='?' (DbType = Int64)], CommandType='Text', CommandTimeout='30']
SET AUTOCOMMIT = 1;
UPDATE `Usages` SET `CourseId` = @p0, `Created` = @p1, `FactUseTime` = @p2, `NotUsed` = @p3, `Quantity` = @p4, `Updated` = @p5, `UseTime` = @p6
WHERE `Id` = @p7;
SELECT ROW_COUNT();
Time:05.05.2023 13:03:14 Hello APP
Now listening on: https://localhost:7102
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: J:\2BAD\VitatrackerB2\MedicineReminderAPI
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (237ms) [Parameters=[@__auth_Email_0='?' (Size = 64)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE `u`.`Email` = @__auth_Email_0
LIMIT 1
Executed DbCommand (208ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE `u`.`Id` = @__p_0
LIMIT 1
Executed DbCommand (200ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (200ms) [Parameters=[@__usage_CourseId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE `c`.`Id` = @__usage_CourseId_0
LIMIT 1
Executed DbCommand (201ms) [Parameters=[@__course_RemedyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedys` AS `r`
WHERE `r`.`Id` = @__course_RemedyId_0
LIMIT 1
Executed DbCommand (205ms) [Parameters=[@p7='?' (DbType = Int32), @p0='?' (DbType = Int32), @p1='?' (DbType = DateTime), @p2='?' (DbType = Int64), @p3='?' (DbType = Boolean), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime), @p6='?' (DbType = Int64)], CommandType='Text', CommandTimeout='30']
SET AUTOCOMMIT = 1;
UPDATE `Usages` SET `CourseId` = @p0, `Created` = @p1, `FactUseTime` = @p2, `NotUsed` = @p3, `Quantity` = @p4, `Updated` = @p5, `UseTime` = @p6
WHERE `Id` = @p7;
SELECT ROW_COUNT();
Executed DbCommand (200ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE `u`.`Id` = @__p_0
LIMIT 1
Executed DbCommand (199ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (200ms) [Parameters=[@__usage_CourseId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE `c`.`Id` = @__usage_CourseId_0
LIMIT 1
Executed DbCommand (199ms) [Parameters=[@__course_RemedyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedys` AS `r`
WHERE `r`.`Id` = @__course_RemedyId_0
LIMIT 1
Executed DbCommand (201ms) [Parameters=[@p7='?' (DbType = Int32), @p0='?' (DbType = Int32), @p1='?' (DbType = DateTime), @p2='?' (DbType = Int64), @p3='?' (DbType = Boolean), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime), @p6='?' (DbType = Int64)], CommandType='Text', CommandTimeout='30']
SET AUTOCOMMIT = 1;
UPDATE `Usages` SET `CourseId` = @p0, `Created` = @p1, `FactUseTime` = @p2, `NotUsed` = @p3, `Quantity` = @p4, `Updated` = @p5, `UseTime` = @p6
WHERE `Id` = @p7;
SELECT ROW_COUNT();
Executed DbCommand (200ms) [Parameters=[@__usage_CourseId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE `c`.`Id` = @__usage_CourseId_0
LIMIT 1
Executed DbCommand (199ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (200ms) [Parameters=[@__course_RemedyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedys` AS `r`
WHERE `r`.`Id` = @__course_RemedyId_0
LIMIT 1
Executed DbCommand (201ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int64), @p2='?' (DbType = Int32), @p3='?' (DbType = Int64)], CommandType='Text', CommandTimeout='30']
INSERT INTO `Usages` (`CourseId`, `FactUseTime`, `Quantity`, `UseTime`)
VALUES (@p0, @p1, @p2, @p3);
SELECT `Id`, `Created`, `NotUsed`, `Updated`
FROM `Usages`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();
Executed DbCommand (206ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE `u`.`Id` = @__p_0
LIMIT 1
Executed DbCommand (206ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (206ms) [Parameters=[@__usage_CourseId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE `c`.`Id` = @__usage_CourseId_0
LIMIT 1
Executed DbCommand (206ms) [Parameters=[@__course_RemedyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedys` AS `r`
WHERE `r`.`Id` = @__course_RemedyId_0
LIMIT 1
Executed DbCommand (208ms) [Parameters=[@p7='?' (DbType = Int32), @p0='?' (DbType = Int32), @p1='?' (DbType = DateTime), @p2='?' (DbType = Int64), @p3='?' (DbType = Boolean), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime), @p6='?' (DbType = Int64)], CommandType='Text', CommandTimeout='30']
SET AUTOCOMMIT = 1;
UPDATE `Usages` SET `CourseId` = @p0, `Created` = @p1, `FactUseTime` = @p2, `NotUsed` = @p3, `Quantity` = @p4, `Updated` = @p5, `UseTime` = @p6
WHERE `Id` = @p7;
SELECT ROW_COUNT();
Executed DbCommand (204ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE `u`.`Id` = @__p_0
LIMIT 1
Executed DbCommand (202ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (201ms) [Parameters=[@__usage_CourseId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE `c`.`Id` = @__usage_CourseId_0
LIMIT 1
Executed DbCommand (202ms) [Parameters=[@__course_RemedyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedys` AS `r`
WHERE `r`.`Id` = @__course_RemedyId_0
LIMIT 1
Executed DbCommand (201ms) [Parameters=[@p7='?' (DbType = Int32), @p0='?' (DbType = Int32), @p1='?' (DbType = DateTime), @p2='?' (DbType = Int64), @p3='?' (DbType = Boolean), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime), @p6='?' (DbType = Int64)], CommandType='Text', CommandTimeout='30']
SET AUTOCOMMIT = 1;
UPDATE `Usages` SET `CourseId` = @p0, `Created` = @p1, `FactUseTime` = @p2, `NotUsed` = @p3, `Quantity` = @p4, `Updated` = @p5, `UseTime` = @p6
WHERE `Id` = @p7;
SELECT ROW_COUNT();
Time:05.05.2023 13:16:47 Hello APP
Now listening on: https://localhost:7102
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: J:\2BAD\VitatrackerB2\MedicineReminderAPI
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (238ms) [Parameters=[@__auth_Email_0='?' (Size = 64)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE `u`.`Email` = @__auth_Email_0
LIMIT 1
Executed DbCommand (213ms) [Parameters=[@__usage_CourseId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE `c`.`Id` = @__usage_CourseId_0
LIMIT 1
Executed DbCommand (209ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (216ms) [Parameters=[@__course_RemedyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedys` AS `r`
WHERE `r`.`Id` = @__course_RemedyId_0
LIMIT 1
Executed DbCommand (213ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int64), @p2='?' (DbType = Int32), @p3='?' (DbType = Int64)], CommandType='Text', CommandTimeout='30']
INSERT INTO `Usages` (`CourseId`, `FactUseTime`, `Quantity`, `UseTime`)
VALUES (@p0, @p1, @p2, @p3);
SELECT `Id`, `Created`, `NotUsed`, `Updated`
FROM `Usages`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();
Executed DbCommand (200ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE `u`.`Id` = @__p_0
LIMIT 1
Executed DbCommand (200ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (200ms) [Parameters=[@__usage_CourseId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE `c`.`Id` = @__usage_CourseId_0
LIMIT 1
Executed DbCommand (200ms) [Parameters=[@__course_RemedyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedys` AS `r`
WHERE `r`.`Id` = @__course_RemedyId_0
LIMIT 1
Executed DbCommand (201ms) [Parameters=[@p7='?' (DbType = Int32), @p0='?' (DbType = Int32), @p1='?' (DbType = DateTime), @p2='?' (DbType = Int64), @p3='?' (DbType = Boolean), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime), @p6='?' (DbType = Int64)], CommandType='Text', CommandTimeout='30']
SET AUTOCOMMIT = 1;
UPDATE `Usages` SET `CourseId` = @p0, `Created` = @p1, `FactUseTime` = @p2, `NotUsed` = @p3, `Quantity` = @p4, `Updated` = @p5, `UseTime` = @p6
WHERE `Id` = @p7;
SELECT ROW_COUNT();
Time:05.05.2023 13:34:35 Hello APP
Now listening on: https://localhost:7102
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: J:\2BAD\VitatrackerB2\MedicineReminderAPI
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (254ms) [Parameters=[@__auth_Email_0='?' (Size = 64)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE `u`.`Email` = @__auth_Email_0
LIMIT 1
Executed DbCommand (203ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (219ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedys` AS `r`
WHERE (`r`.`UserId` = @__user_Id_0) AND NOT (`r`.`NotUsed`)
Executed DbCommand (204ms) [Parameters=[@__r_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__r_Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (202ms) [Parameters=[@__r_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__r_Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (202ms) [Parameters=[@__r_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__r_Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (204ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (202ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (202ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE `c`.`Id` = @__p_0
LIMIT 1
Executed DbCommand (202ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (202ms) [Parameters=[@__course_RemedyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedys` AS `r`
WHERE `r`.`Id` = @__course_RemedyId_0
LIMIT 1
Executed DbCommand (202ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (202ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (203ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedys` AS `r`
WHERE (`r`.`UserId` = @__user_Id_0) AND NOT (`r`.`NotUsed`)
Executed DbCommand (202ms) [Parameters=[@__r_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__r_Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (202ms) [Parameters=[@__r_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__r_Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (202ms) [Parameters=[@__r_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__r_Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (202ms) [Parameters=[@__c_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__c_Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (202ms) [Parameters=[@__c_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__c_Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (201ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (201ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedys` AS `r`
WHERE (`r`.`UserId` = @__Id_0) AND NOT (`r`.`NotUsed`)
Executed DbCommand (201ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (201ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (200ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (200ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (200ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__Id_0) AND NOT (`c`.`NotUsed`)
Time:05.05.2023 14:51:41 Hello APP
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: J:\2BAD\VitatrackerB2\MedicineReminderAPI
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (239ms) [Parameters=[@__auth_Email_0='?' (Size = 64)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE `u`.`Email` = @__auth_Email_0
LIMIT 1
Executed DbCommand (202ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (206ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedys` AS `r`
WHERE (`r`.`UserId` = @__Id_0) AND NOT (`r`.`NotUsed`)
Executed DbCommand (208ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (204ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (202ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (202ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (202ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__Id_0) AND NOT (`c`.`NotUsed`)
Time:09.05.2023 16:51:26 Hello APP
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: G:\2BAD\VitatrackerB2\MedicineReminderAPI
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (343ms) [Parameters=[@__auth_Email_0='?' (Size = 64)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE `u`.`Email` = @__auth_Email_0
LIMIT 1
Executed DbCommand (279ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Failed executing DbCommand (229ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedies` AS `r`
WHERE (`r`.`UserId` = @__Id_0) AND NOT (`r`.`NotUsed`)
An exception occurred while iterating over the results of a query for context type 'MedicineReminderAPI.Models.AppApiContext'.
MySqlConnector.MySqlException (0x80004005): Table 'db_a97535_irina74.remedies' doesn't exist
   at MySqlConnector.Core.ResultSet.ReadResultSetHeaderAsync(IOBehavior ioBehavior) in /_/src/MySqlConnector/Core/ResultSet.cs:line 43
   at MySqlConnector.MySqlDataReader.ActivateResultSet(CancellationToken cancellationToken) in /_/src/MySqlConnector/MySqlDataReader.cs:line 130
   at MySqlConnector.MySqlDataReader.CreateAsync(CommandListPosition commandListPosition, ICommandPayloadCreator payloadCreator, IDictionary`2 cachedProcedures, IMySqlCommand command, CommandBehavior behavior, Activity activity, IOBehavior ioBehavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/MySqlDataReader.cs:line 468
   at MySqlConnector.Core.CommandExecutor.ExecuteReaderAsync(IReadOnlyList`1 commands, ICommandPayloadCreator payloadCreator, CommandBehavior behavior, Activity activity, IOBehavior ioBehavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/Core/CommandExecutor.cs:line 56
   at MySqlConnector.MySqlCommand.ExecuteReaderAsync(CommandBehavior behavior, IOBehavior ioBehavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/MySqlCommand.cs:line 344
   at MySqlConnector.MySqlCommand.ExecuteDbDataReader(CommandBehavior behavior) in /_/src/MySqlConnector/MySqlCommand.cs:line 278
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.InitializeReader(Enumerator enumerator)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.<>c.<MoveNext>b__21_0(DbContext _, Enumerator enumerator)
   at Pomelo.EntityFrameworkCore.MySql.Storage.Internal.MySqlExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.MoveNext()
An unhandled exception has occurred while executing the request.
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (943ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='db_a97535_irina74' AND TABLE_NAME='__EFMigrationsHistory';
Executed DbCommand (269ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT `MigrationId`, `ProductVersion`
FROM `__EFMigrationsHistory`
ORDER BY `MigrationId`;
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (884ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='db_a97535_irina74' AND TABLE_NAME='__EFMigrationsHistory';
Executed DbCommand (215ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT `MigrationId`, `ProductVersion`
FROM `__EFMigrationsHistory`
ORDER BY `MigrationId`;
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (1,558ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='db_a97535_irina74' AND TABLE_NAME='__EFMigrationsHistory';
Executed DbCommand (230ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT `MigrationId`, `ProductVersion`
FROM `__EFMigrationsHistory`
ORDER BY `MigrationId`;
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (1,459ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='db_a97535_irina74' AND TABLE_NAME='__EFMigrationsHistory';
Executed DbCommand (211ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT `MigrationId`, `ProductVersion`
FROM `__EFMigrationsHistory`
ORDER BY `MigrationId`;
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (873ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='db_a97535_irina74' AND TABLE_NAME='__EFMigrationsHistory';
Executed DbCommand (215ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT `MigrationId`, `ProductVersion`
FROM `__EFMigrationsHistory`
ORDER BY `MigrationId`;
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (903ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='db_a97535_irina74' AND TABLE_NAME='__EFMigrationsHistory';
Executed DbCommand (880ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='db_a97535_irina74' AND TABLE_NAME='__EFMigrationsHistory';
Executed DbCommand (230ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT `MigrationId`, `ProductVersion`
FROM `__EFMigrationsHistory`
ORDER BY `MigrationId`;
Applying migration '20230509120736_remedies'.
Executed DbCommand (226ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
DROP PROCEDURE IF EXISTS `POMELO_BEFORE_DROP_PRIMARY_KEY`;
CREATE PROCEDURE `POMELO_BEFORE_DROP_PRIMARY_KEY`(IN `SCHEMA_NAME_ARGUMENT` VARCHAR(255), IN `TABLE_NAME_ARGUMENT` VARCHAR(255))
BEGIN
	DECLARE HAS_AUTO_INCREMENT_ID TINYINT(1);
	DECLARE PRIMARY_KEY_COLUMN_NAME VARCHAR(255);
	DECLARE PRIMARY_KEY_TYPE VARCHAR(255);
	DECLARE SQL_EXP VARCHAR(1000);
	SELECT COUNT(*)
		INTO HAS_AUTO_INCREMENT_ID
		FROM `information_schema`.`COLUMNS`
		WHERE `TABLE_SCHEMA` = (SELECT IFNULL(SCHEMA_NAME_ARGUMENT, SCHEMA()))
			AND `TABLE_NAME` = TABLE_NAME_ARGUMENT
			AND `Extra` = 'auto_increment'
			AND `COLUMN_KEY` = 'PRI'
			LIMIT 1;
	IF HAS_AUTO_INCREMENT_ID THEN
		SELECT `COLUMN_TYPE`
			INTO PRIMARY_KEY_TYPE
			FROM `information_schema`.`COLUMNS`
			WHERE `TABLE_SCHEMA` = (SELECT IFNULL(SCHEMA_NAME_ARGUMENT, SCHEMA()))
				AND `TABLE_NAME` = TABLE_NAME_ARGUMENT
				AND `COLUMN_KEY` = 'PRI'
			LIMIT 1;
		SELECT `COLUMN_NAME`
			INTO PRIMARY_KEY_COLUMN_NAME
			FROM `information_schema`.`COLUMNS`
			WHERE `TABLE_SCHEMA` = (SELECT IFNULL(SCHEMA_NAME_ARGUMENT, SCHEMA()))
				AND `TABLE_NAME` = TABLE_NAME_ARGUMENT
				AND `COLUMN_KEY` = 'PRI'
			LIMIT 1;
		SET SQL_EXP = CONCAT('ALTER TABLE `', (SELECT IFNULL(SCHEMA_NAME_ARGUMENT, SCHEMA())), '`.`', TABLE_NAME_ARGUMENT, '` MODIFY COLUMN `', PRIMARY_KEY_COLUMN_NAME, '` ', PRIMARY_KEY_TYPE, ' NOT NULL;');
		SET @SQL_EXP = SQL_EXP;
		PREPARE SQL_EXP_EXECUTE FROM @SQL_EXP;
		EXECUTE SQL_EXP_EXECUTE;
		DEALLOCATE PREPARE SQL_EXP_EXECUTE;
	END IF;
END;
Executed DbCommand (227ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
DROP PROCEDURE IF EXISTS `POMELO_AFTER_ADD_PRIMARY_KEY`;
CREATE PROCEDURE `POMELO_AFTER_ADD_PRIMARY_KEY`(IN `SCHEMA_NAME_ARGUMENT` VARCHAR(255), IN `TABLE_NAME_ARGUMENT` VARCHAR(255), IN `COLUMN_NAME_ARGUMENT` VARCHAR(255))
BEGIN
	DECLARE HAS_AUTO_INCREMENT_ID INT(11);
	DECLARE PRIMARY_KEY_COLUMN_NAME VARCHAR(255);
	DECLARE PRIMARY_KEY_TYPE VARCHAR(255);
	DECLARE SQL_EXP VARCHAR(1000);
	SELECT COUNT(*)
		INTO HAS_AUTO_INCREMENT_ID
		FROM `information_schema`.`COLUMNS`
		WHERE `TABLE_SCHEMA` = (SELECT IFNULL(SCHEMA_NAME_ARGUMENT, SCHEMA()))
			AND `TABLE_NAME` = TABLE_NAME_ARGUMENT
			AND `COLUMN_NAME` = COLUMN_NAME_ARGUMENT
			AND `COLUMN_TYPE` LIKE '%int%'
			AND `COLUMN_KEY` = 'PRI';
	IF HAS_AUTO_INCREMENT_ID THEN
		SELECT `COLUMN_TYPE`
			INTO PRIMARY_KEY_TYPE
			FROM `information_schema`.`COLUMNS`
			WHERE `TABLE_SCHEMA` = (SELECT IFNULL(SCHEMA_NAME_ARGUMENT, SCHEMA()))
				AND `TABLE_NAME` = TABLE_NAME_ARGUMENT
				AND `COLUMN_NAME` = COLUMN_NAME_ARGUMENT
				AND `COLUMN_TYPE` LIKE '%int%'
				AND `COLUMN_KEY` = 'PRI';
		SELECT `COLUMN_NAME`
			INTO PRIMARY_KEY_COLUMN_NAME
			FROM `information_schema`.`COLUMNS`
			WHERE `TABLE_SCHEMA` = (SELECT IFNULL(SCHEMA_NAME_ARGUMENT, SCHEMA()))
				AND `TABLE_NAME` = TABLE_NAME_ARGUMENT
				AND `COLUMN_NAME` = COLUMN_NAME_ARGUMENT
				AND `COLUMN_TYPE` LIKE '%int%'
				AND `COLUMN_KEY` = 'PRI';
		SET SQL_EXP = CONCAT('ALTER TABLE `', (SELECT IFNULL(SCHEMA_NAME_ARGUMENT, SCHEMA())), '`.`', TABLE_NAME_ARGUMENT, '` MODIFY COLUMN `', PRIMARY_KEY_COLUMN_NAME, '` ', PRIMARY_KEY_TYPE, ' NOT NULL AUTO_INCREMENT;');
		SET @SQL_EXP = SQL_EXP;
		PREPARE SQL_EXP_EXECUTE FROM @SQL_EXP;
		EXECUTE SQL_EXP_EXECUTE;
		DEALLOCATE PREPARE SQL_EXP_EXECUTE;
	END IF;
END;
Executed DbCommand (327ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE `Courses` DROP FOREIGN KEY `FK_Courses_Remedys_RemedyId`;
Executed DbCommand (339ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE `HistoryRemedys` DROP FOREIGN KEY `FK_HistoryRemedys_Remedys_RemedyId`;
Executed DbCommand (265ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE `Remedys` DROP FOREIGN KEY `FK_Remedys_Users_UserId`;
Executed DbCommand (22,299ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CALL POMELO_BEFORE_DROP_PRIMARY_KEY(NULL, 'Remedys');
ALTER TABLE `Remedys` DROP PRIMARY KEY;
Executed DbCommand (23,833ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CALL POMELO_BEFORE_DROP_PRIMARY_KEY(NULL, 'HistoryRemedys');
ALTER TABLE `HistoryRemedys` DROP PRIMARY KEY;
Executed DbCommand (241ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE `Remedys` RENAME `Remedies`;
Executed DbCommand (234ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE `HistoryRemedys` RENAME `HistoryRemedies`;
Executed DbCommand (235ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE `Remedies` RENAME INDEX `IX_Remedys_UserId` TO `IX_Remedies_UserId`;
Executed DbCommand (230ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE `HistoryRemedies` RENAME INDEX `IX_HistoryRemedys_RemedyId` TO `IX_HistoryRemedies_RemedyId`;
Executed DbCommand (21,048ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE `Remedies` ADD CONSTRAINT `PK_Remedies` PRIMARY KEY (`Id`);
CALL POMELO_AFTER_ADD_PRIMARY_KEY(NULL, 'Remedies', 'Id');
Executed DbCommand (20,933ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE `HistoryRemedies` ADD CONSTRAINT `PK_HistoryRemedies` PRIMARY KEY (`Id`);
CALL POMELO_AFTER_ADD_PRIMARY_KEY(NULL, 'HistoryRemedies', 'Id');
Executed DbCommand (309ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE `Courses` ADD CONSTRAINT `FK_Courses_Remedies_RemedyId` FOREIGN KEY (`RemedyId`) REFERENCES `Remedies` (`Id`) ON DELETE CASCADE;
Executed DbCommand (283ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE `HistoryRemedies` ADD CONSTRAINT `FK_HistoryRemedies_Remedies_RemedyId` FOREIGN KEY (`RemedyId`) REFERENCES `Remedies` (`Id`) ON DELETE CASCADE;
Executed DbCommand (305ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE `Remedies` ADD CONSTRAINT `FK_Remedies_Users_UserId` FOREIGN KEY (`UserId`) REFERENCES `Users` (`Id`) ON DELETE CASCADE;
Executed DbCommand (220ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO `__EFMigrationsHistory` (`MigrationId`, `ProductVersion`)
VALUES ('20230509120736_remedies', '7.0.5');
Executed DbCommand (231ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
DROP PROCEDURE `POMELO_BEFORE_DROP_PRIMARY_KEY`;
Executed DbCommand (229ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
DROP PROCEDURE `POMELO_AFTER_ADD_PRIMARY_KEY`;
Time:09.05.2023 17:14:04 Hello APP
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: G:\2BAD\VitatrackerB2\MedicineReminderAPI
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (271ms) [Parameters=[@__auth_Email_0='?' (Size = 64)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE `u`.`Email` = @__auth_Email_0
LIMIT 1
Executed DbCommand (216ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (224ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedies` AS `r`
WHERE (`r`.`UserId` = @__Id_0) AND NOT (`r`.`NotUsed`)
Executed DbCommand (214ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (231ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (213ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (212ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (214ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (225ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedies` AS `r`
WHERE `r`.`Id` = @__p_0
LIMIT 1
Executed DbCommand (212ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (212ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (211ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Time:09.05.2023 17:20:57 Hello APP
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: G:\2BAD\VitatrackerB2\MedicineReminderAPI
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Failed executing DbCommand (288ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 64), @p2='?' (Size = 120), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
INSERT INTO `Users` (`Avatar`, `Email`, `Name`, `Password`)
VALUES (@p0, @p1, @p2, @p3);
SELECT `Id`, `Created`, `NotUsed`, `Updated`
FROM `Users`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();
An exception occurred in the database while saving changes for context type 'MedicineReminderAPI.Models.AppApiContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> MySqlConnector.MySqlException (0x80004005): Duplicate entry 'eva@mail.ru' for key 'users.IX_Users_Email'
   at MySqlConnector.Core.ServerSession.ReceiveReplyAsyncAwaited(ValueTask`1 task) in /_/src/MySqlConnector/Core/ServerSession.cs:line 962
   at MySqlConnector.Core.ResultSet.ReadResultSetHeaderAsync(IOBehavior ioBehavior) in /_/src/MySqlConnector/Core/ResultSet.cs:line 43
   at MySqlConnector.MySqlDataReader.ActivateResultSet(CancellationToken cancellationToken) in /_/src/MySqlConnector/MySqlDataReader.cs:line 130
   at MySqlConnector.MySqlDataReader.CreateAsync(CommandListPosition commandListPosition, ICommandPayloadCreator payloadCreator, IDictionary`2 cachedProcedures, IMySqlCommand command, CommandBehavior behavior, Activity activity, IOBehavior ioBehavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/MySqlDataReader.cs:line 468
   at MySqlConnector.Core.CommandExecutor.ExecuteReaderAsync(IReadOnlyList`1 commands, ICommandPayloadCreator payloadCreator, CommandBehavior behavior, Activity activity, IOBehavior ioBehavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/Core/CommandExecutor.cs:line 56
   at MySqlConnector.MySqlCommand.ExecuteReaderAsync(CommandBehavior behavior, IOBehavior ioBehavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/MySqlCommand.cs:line 344
   at MySqlConnector.MySqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/MySqlCommand.cs:line 337
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Pomelo.EntityFrameworkCore.MySql.Storage.Internal.MySqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
An unhandled exception has occurred while executing the request.
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (934ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='db_a97919_vitatra' AND TABLE_NAME='__EFMigrationsHistory';
Executed DbCommand (866ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='db_a97919_vitatra' AND TABLE_NAME='__EFMigrationsHistory';
Executed DbCommand (210ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT `MigrationId`, `ProductVersion`
FROM `__EFMigrationsHistory`
ORDER BY `MigrationId`;
Applying migration '20230428094502_init'.
Executed DbCommand (207ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER DATABASE CHARACTER SET utf8mb4;
Failed executing DbCommand (213ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE `Users` (
    `Id` int NOT NULL AUTO_INCREMENT,
    `Name` varchar(120) CHARACTER SET utf8mb4 NOT NULL,
    `Email` varchar(64) CHARACTER SET utf8mb4 NOT NULL,
    `Password` longtext CHARACTER SET utf8mb4 NOT NULL,
    `Avatar` longtext CHARACTER SET utf8mb4 NULL,
    `NotUsed` tinyint(1) NOT NULL DEFAULT FALSE,
    `Created` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    `Updated` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    CONSTRAINT `PK_Users` PRIMARY KEY (`Id`)
) CHARACTER SET=utf8mb4;
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (1,272ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='db_a97919_vitatra' AND TABLE_NAME='__EFMigrationsHistory';
Executed DbCommand (214ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT `MigrationId`, `ProductVersion`
FROM `__EFMigrationsHistory`
ORDER BY `MigrationId`;
Time:09.05.2023 17:59:56 Hello APP
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: G:\2BAD\VitatrackerB2\MedicineReminderAPI
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (385ms) [Parameters=[@__auth_Email_0='?' (Size = 64)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE `u`.`Email` = @__auth_Email_0
LIMIT 1
Executed DbCommand (291ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (300ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedies` AS `r`
WHERE (`r`.`UserId` = @__Id_0) AND NOT (`r`.`NotUsed`)
Executed DbCommand (300ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (305ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (316ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (227ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (246ms) [Parameters=[@p7='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (DbType = DateTime), @p2='?' (Size = 64), @p3='?' (Size = 120), @p4='?' (DbType = Boolean), @p5='?' (Size = 4000), @p6='?' (DbType = DateTime)], CommandType='Text', CommandTimeout='30']
SET AUTOCOMMIT = 1;
UPDATE `Users` SET `Avatar` = @p0, `Created` = @p1, `Email` = @p2, `Name` = @p3, `NotUsed` = @p4, `Password` = @p5, `Updated` = @p6
WHERE `Id` = @p7;
SELECT ROW_COUNT();
Failed executing DbCommand (250ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 64), @p2='?' (Size = 120), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
INSERT INTO `Users` (`Avatar`, `Email`, `Name`, `Password`)
VALUES (@p0, @p1, @p2, @p3);
SELECT `Id`, `Created`, `NotUsed`, `Updated`
FROM `Users`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();
An exception occurred in the database while saving changes for context type 'MedicineReminderAPI.Models.AppApiContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> MySqlConnector.MySqlException (0x80004005): Duplicate entry 'eva@mail.ru' for key 'users.IX_Users_Email'
   at MySqlConnector.Core.ServerSession.ReceiveReplyAsyncAwaited(ValueTask`1 task) in /_/src/MySqlConnector/Core/ServerSession.cs:line 962
   at MySqlConnector.Core.ResultSet.ReadResultSetHeaderAsync(IOBehavior ioBehavior) in /_/src/MySqlConnector/Core/ResultSet.cs:line 43
   at MySqlConnector.MySqlDataReader.ActivateResultSet(CancellationToken cancellationToken) in /_/src/MySqlConnector/MySqlDataReader.cs:line 130
   at MySqlConnector.MySqlDataReader.CreateAsync(CommandListPosition commandListPosition, ICommandPayloadCreator payloadCreator, IDictionary`2 cachedProcedures, IMySqlCommand command, CommandBehavior behavior, Activity activity, IOBehavior ioBehavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/MySqlDataReader.cs:line 468
   at MySqlConnector.Core.CommandExecutor.ExecuteReaderAsync(IReadOnlyList`1 commands, ICommandPayloadCreator payloadCreator, CommandBehavior behavior, Activity activity, IOBehavior ioBehavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/Core/CommandExecutor.cs:line 56
   at MySqlConnector.MySqlCommand.ExecuteReaderAsync(CommandBehavior behavior, IOBehavior ioBehavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/MySqlCommand.cs:line 344
   at MySqlConnector.MySqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/MySqlCommand.cs:line 337
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Pomelo.EntityFrameworkCore.MySql.Storage.Internal.MySqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
An unhandled exception has occurred while executing the request.
Time:12.05.2023 11:25:28 Hello APP
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: J:\2BAD\VitatrackerB2\MedicineReminderAPI
An unhandled exception has occurred while executing the request.
Time:12.05.2023 11:27:16 Hello APP
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: J:\2BAD\VitatrackerB2\MedicineReminderAPI
An unhandled exception has occurred while executing the request.
Time:12.05.2023 11:29:37 Hello APP
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: J:\2BAD\VitatrackerB2\MedicineReminderAPI
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (246ms) [Parameters=[@__auth_Email_0='?' (Size = 64)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE `u`.`Email` = @__auth_Email_0
LIMIT 1
Executed DbCommand (200ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (202ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedies` AS `r`
WHERE (`r`.`UserId` = @__Id_0) AND NOT (`r`.`NotUsed`)
Executed DbCommand (205ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (204ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (199ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Time:12.05.2023 11:38:38 Hello APP
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: J:\2BAD\VitatrackerB2\MedicineReminderAPI
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (250ms) [Parameters=[@__auth_Email_0='?' (Size = 64)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE `u`.`Email` = @__auth_Email_0
LIMIT 1
Executed DbCommand (203ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (209ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedies` AS `r`
WHERE (`r`.`UserId` = @__Id_0) AND NOT (`r`.`NotUsed`)
Executed DbCommand (209ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (207ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (203ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (206ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedies` AS `r`
WHERE `r`.`Id` = @__p_0
LIMIT 1
Executed DbCommand (202ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (205ms) [Parameters=[@p14='?' (DbType = Int32), @p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (Size = 4000), @p3='?' (DbType = DateTime), @p4='?' (Size = 4000), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32), @p7='?' (DbType = Int32), @p8='?' (Size = 128), @p9='?' (DbType = Boolean), @p10='?' (Size = 4000), @p11='?' (DbType = Int32), @p12='?' (DbType = DateTime), @p13='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET AUTOCOMMIT = 1;
UPDATE `Remedies` SET `BeforeFood` = @p0, `Color` = @p1, `Comment` = @p2, `Created` = @p3, `Description` = @p4, `Dose` = @p5, `Icon` = @p6, `MeasureUnit` = @p7, `Name` = @p8, `NotUsed` = @p9, `Photo` = @p10, `Type` = @p11, `Updated` = @p12, `UserId` = @p13
WHERE `Id` = @p14;
SELECT ROW_COUNT();
Executed DbCommand (201ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedies` AS `r`
WHERE `r`.`Id` = @__p_0
LIMIT 1
Executed DbCommand (200ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (204ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (203ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (201ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Time:12.05.2023 12:01:40 Hello APP
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: J:\2BAD\VitatrackerB2\MedicineReminderAPI
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (241ms) [Parameters=[@__auth_Email_0='?' (Size = 64)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE `u`.`Email` = @__auth_Email_0
LIMIT 1
Executed DbCommand (203ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (213ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (Size = 4000), @p3='?' (Size = 4000), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32), @p7='?' (Size = 128), @p8='?' (Size = 4000), @p9='?' (DbType = Int32), @p10='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
INSERT INTO `Remedies` (`BeforeFood`, `Color`, `Comment`, `Description`, `Dose`, `Icon`, `MeasureUnit`, `Name`, `Photo`, `Type`, `UserId`)
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10);
SELECT `Id`, `Created`, `NotUsed`, `Updated`
FROM `Remedies`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();
Executed DbCommand (206ms) [Parameters=[@p11='?' (Size = 4000), @p12='?' (DbType = Int64), @p13='?' (DbType = Int64), @p14='?' (DbType = Boolean), @p15='?' (DbType = Boolean), @p16='?' (DbType = Int32), @p17='?' (DbType = Int32), @p18='?' (DbType = Int64), @p19='?' (DbType = Int64)], CommandType='Text', CommandTimeout='30']
INSERT INTO `Courses` (`Comment`, `EndDate`, `Interval`, `IsFinished`, `IsInfinite`, `Regime`, `RemedyId`, `RemindDate`, `StartDate`)
VALUES (@p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19);
SELECT `Id`, `Created`, `NotUsed`, `Updated`
FROM `Courses`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();
Executed DbCommand (205ms) [Parameters=[@p20='?' (DbType = Int32), @p21='?' (DbType = Int64), @p22='?' (DbType = Int32), @p23='?' (DbType = Int64)], CommandType='Text', CommandTimeout='30']
INSERT INTO `Usages` (`CourseId`, `FactUseTime`, `Quantity`, `UseTime`)
VALUES (@p20, @p21, @p22, @p23);
SELECT `Id`, `Created`, `NotUsed`, `Updated`
FROM `Usages`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();
Executed DbCommand (202ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (206ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (Size = 4000), @p3='?' (Size = 4000), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32), @p7='?' (Size = 128), @p8='?' (Size = 4000), @p9='?' (DbType = Int32), @p10='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
INSERT INTO `Remedies` (`BeforeFood`, `Color`, `Comment`, `Description`, `Dose`, `Icon`, `MeasureUnit`, `Name`, `Photo`, `Type`, `UserId`)
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10);
SELECT `Id`, `Created`, `NotUsed`, `Updated`
FROM `Remedies`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();
Executed DbCommand (203ms) [Parameters=[@p11='?' (Size = 4000), @p12='?' (DbType = Int64), @p13='?' (DbType = Int64), @p14='?' (DbType = Boolean), @p15='?' (DbType = Boolean), @p16='?' (DbType = Int32), @p17='?' (DbType = Int32), @p18='?' (DbType = Int64), @p19='?' (DbType = Int64), @p20='?' (Size = 4000), @p21='?' (DbType = Int64), @p22='?' (DbType = Int64), @p23='?' (DbType = Boolean), @p24='?' (DbType = Boolean), @p25='?' (DbType = Int32), @p26='?' (DbType = Int32), @p27='?' (DbType = Int64), @p28='?' (DbType = Int64)], CommandType='Text', CommandTimeout='30']
INSERT INTO `Courses` (`Comment`, `EndDate`, `Interval`, `IsFinished`, `IsInfinite`, `Regime`, `RemedyId`, `RemindDate`, `StartDate`)
VALUES (@p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19);
SELECT `Id`, `Created`, `NotUsed`, `Updated`
FROM `Courses`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();

INSERT INTO `Courses` (`Comment`, `EndDate`, `Interval`, `IsFinished`, `IsInfinite`, `Regime`, `RemedyId`, `RemindDate`, `StartDate`)
VALUES (@p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28);
SELECT `Id`, `Created`, `NotUsed`, `Updated`
FROM `Courses`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();
Executed DbCommand (202ms) [Parameters=[@p29='?' (DbType = Int32), @p30='?' (DbType = Int64), @p31='?' (DbType = Int32), @p32='?' (DbType = Int64), @p33='?' (DbType = Int32), @p34='?' (DbType = Int64), @p35='?' (DbType = Int32), @p36='?' (DbType = Int64), @p37='?' (DbType = Int32), @p38='?' (DbType = Int64), @p39='?' (DbType = Int32), @p40='?' (DbType = Int64)], CommandType='Text', CommandTimeout='30']
INSERT INTO `Usages` (`CourseId`, `FactUseTime`, `Quantity`, `UseTime`)
VALUES (@p29, @p30, @p31, @p32);
SELECT `Id`, `Created`, `NotUsed`, `Updated`
FROM `Usages`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();

INSERT INTO `Usages` (`CourseId`, `FactUseTime`, `Quantity`, `UseTime`)
VALUES (@p33, @p34, @p35, @p36);
SELECT `Id`, `Created`, `NotUsed`, `Updated`
FROM `Usages`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();

INSERT INTO `Usages` (`CourseId`, `FactUseTime`, `Quantity`, `UseTime`)
VALUES (@p37, @p38, @p39, @p40);
SELECT `Id`, `Created`, `NotUsed`, `Updated`
FROM `Usages`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();
Executed DbCommand (205ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (205ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (Size = 4000), @p3='?' (Size = 4000), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32), @p7='?' (Size = 128), @p8='?' (Size = 4000), @p9='?' (DbType = Int32), @p10='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
INSERT INTO `Remedies` (`BeforeFood`, `Color`, `Comment`, `Description`, `Dose`, `Icon`, `MeasureUnit`, `Name`, `Photo`, `Type`, `UserId`)
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10);
SELECT `Id`, `Created`, `NotUsed`, `Updated`
FROM `Remedies`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();
Executed DbCommand (206ms) [Parameters=[@p11='?' (Size = 4000), @p12='?' (DbType = Int64), @p13='?' (DbType = Int64), @p14='?' (DbType = Boolean), @p15='?' (DbType = Boolean), @p16='?' (DbType = Int32), @p17='?' (DbType = Int32), @p18='?' (DbType = Int64), @p19='?' (DbType = Int64), @p20='?' (Size = 4000), @p21='?' (DbType = Int64), @p22='?' (DbType = Int64), @p23='?' (DbType = Boolean), @p24='?' (DbType = Boolean), @p25='?' (DbType = Int32), @p26='?' (DbType = Int32), @p27='?' (DbType = Int64), @p28='?' (DbType = Int64)], CommandType='Text', CommandTimeout='30']
INSERT INTO `Courses` (`Comment`, `EndDate`, `Interval`, `IsFinished`, `IsInfinite`, `Regime`, `RemedyId`, `RemindDate`, `StartDate`)
VALUES (@p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19);
SELECT `Id`, `Created`, `NotUsed`, `Updated`
FROM `Courses`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();

INSERT INTO `Courses` (`Comment`, `EndDate`, `Interval`, `IsFinished`, `IsInfinite`, `Regime`, `RemedyId`, `RemindDate`, `StartDate`)
VALUES (@p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28);
SELECT `Id`, `Created`, `NotUsed`, `Updated`
FROM `Courses`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();
Executed DbCommand (205ms) [Parameters=[@p29='?' (DbType = Int32), @p30='?' (DbType = Int64), @p31='?' (DbType = Int32), @p32='?' (DbType = Int64), @p33='?' (DbType = Int32), @p34='?' (DbType = Int64), @p35='?' (DbType = Int32), @p36='?' (DbType = Int64), @p37='?' (DbType = Int32), @p38='?' (DbType = Int64), @p39='?' (DbType = Int32), @p40='?' (DbType = Int64)], CommandType='Text', CommandTimeout='30']
INSERT INTO `Usages` (`CourseId`, `FactUseTime`, `Quantity`, `UseTime`)
VALUES (@p29, @p30, @p31, @p32);
SELECT `Id`, `Created`, `NotUsed`, `Updated`
FROM `Usages`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();

INSERT INTO `Usages` (`CourseId`, `FactUseTime`, `Quantity`, `UseTime`)
VALUES (@p33, @p34, @p35, @p36);
SELECT `Id`, `Created`, `NotUsed`, `Updated`
FROM `Usages`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();

INSERT INTO `Usages` (`CourseId`, `FactUseTime`, `Quantity`, `UseTime`)
VALUES (@p37, @p38, @p39, @p40);
SELECT `Id`, `Created`, `NotUsed`, `Updated`
FROM `Usages`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();
Executed DbCommand (207ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (208ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedies` AS `r`
WHERE (`r`.`UserId` = @__Id_0) AND NOT (`r`.`NotUsed`)
Executed DbCommand (207ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (207ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (208ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (207ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (207ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (207ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (207ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (207ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (207ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (207ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (207ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (208ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedies` AS `r`
WHERE `r`.`Id` = @__p_0
LIMIT 1
Executed DbCommand (205ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (204ms) [Parameters=[@p14='?' (DbType = Int32), @p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (Size = 4000), @p3='?' (DbType = DateTime), @p4='?' (Size = 4000), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32), @p7='?' (DbType = Int32), @p8='?' (Size = 128), @p9='?' (DbType = Boolean), @p10='?' (Size = 4000), @p11='?' (DbType = Int32), @p12='?' (DbType = DateTime), @p13='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET AUTOCOMMIT = 1;
UPDATE `Remedies` SET `BeforeFood` = @p0, `Color` = @p1, `Comment` = @p2, `Created` = @p3, `Description` = @p4, `Dose` = @p5, `Icon` = @p6, `MeasureUnit` = @p7, `Name` = @p8, `NotUsed` = @p9, `Photo` = @p10, `Type` = @p11, `Updated` = @p12, `UserId` = @p13
WHERE `Id` = @p14;
SELECT ROW_COUNT();
Executed DbCommand (201ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedies` AS `r`
WHERE `r`.`Id` = @__p_0
LIMIT 1
Executed DbCommand (200ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (203ms) [Parameters=[@p14='?' (DbType = Int32), @p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (Size = 4000), @p3='?' (DbType = DateTime), @p4='?' (Size = 4000), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32), @p7='?' (DbType = Int32), @p8='?' (Size = 128), @p9='?' (DbType = Boolean), @p10='?' (Size = 4000), @p11='?' (DbType = Int32), @p12='?' (DbType = DateTime), @p13='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET AUTOCOMMIT = 1;
UPDATE `Remedies` SET `BeforeFood` = @p0, `Color` = @p1, `Comment` = @p2, `Created` = @p3, `Description` = @p4, `Dose` = @p5, `Icon` = @p6, `MeasureUnit` = @p7, `Name` = @p8, `NotUsed` = @p9, `Photo` = @p10, `Type` = @p11, `Updated` = @p12, `UserId` = @p13
WHERE `Id` = @p14;
SELECT ROW_COUNT();
Time:12.05.2023 15:30:00 Hello APP
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: J:\2BAD\VitatrackerB2\MedicineReminderAPI
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (239ms) [Parameters=[@__user_Email_0='?' (Size = 64)], CommandType='Text', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM `Users` AS `u`
    WHERE `u`.`Email` = @__user_Email_0)
Time:12.05.2023 19:36:13 Hello APP
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: G:\2BAD\VitatrackerB2\MedicineReminderAPI
An unhandled exception has occurred while executing the request.
Time:12.05.2023 19:44:39 Hello APP
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: G:\2BAD\VitatrackerB2\MedicineReminderAPI
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (369ms) [Parameters=[@__auth_Email_0='?' (Size = 64)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE `u`.`Email` = @__auth_Email_0
LIMIT 1
Executed DbCommand (218ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (228ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedies` AS `r`
WHERE (`r`.`UserId` = @__Id_0) AND NOT (`r`.`NotUsed`)
Executed DbCommand (223ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (222ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (214ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (217ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (216ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (215ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (216ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (215ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (222ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (215ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (214ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (216ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (219ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedies` AS `r`
WHERE (`r`.`UserId` = @__Id_0) AND NOT (`r`.`NotUsed`)
Time:12.05.2023 19:50:29 Hello APP
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: G:\2BAD\VitatrackerB2\MedicineReminderAPI
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (295ms) [Parameters=[@__auth_Email_0='?' (Size = 64)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE `u`.`Email` = @__auth_Email_0
LIMIT 1
Executed DbCommand (214ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (223ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedies` AS `r`
WHERE (`r`.`UserId` = @__Id_0) AND NOT (`r`.`NotUsed`)
Executed DbCommand (212ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (219ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedies` AS `r`
WHERE (`r`.`UserId` = @__Id_0) AND NOT (`r`.`NotUsed`)
Executed DbCommand (225ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (220ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (212ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (213ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (213ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (213ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (212ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (213ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (213ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (268ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (214ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (223ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (219ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedies` AS `r`
WHERE (`r`.`UserId` = @__Id_0) AND NOT (`r`.`NotUsed`)
Time:12.05.2023 20:00:42 Hello APP
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: G:\2BAD\VitatrackerB2\MedicineReminderAPI
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (306ms) [Parameters=[@__auth_Email_0='?' (Size = 64)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE `u`.`Email` = @__auth_Email_0
LIMIT 1
Executed DbCommand (218ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (221ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedies` AS `r`
WHERE (`r`.`UserId` = @__Id_0) AND NOT (`r`.`NotUsed`)
Executed DbCommand (214ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (236ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedies` AS `r`
WHERE (`r`.`UserId` = @__Id_0) AND NOT (`r`.`NotUsed`)
Executed DbCommand (225ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (221ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (215ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (214ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (213ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (214ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (220ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (213ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (215ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (215ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (221ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Time:12.05.2023 20:34:55 Hello APP
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: G:\2BAD\VitatrackerB2\MedicineReminderAPI
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (305ms) [Parameters=[@__auth_Email_0='?' (Size = 64)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE `u`.`Email` = @__auth_Email_0
LIMIT 1
Executed DbCommand (207ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (224ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedies` AS `r`
WHERE (`r`.`UserId` = @__Id_0) AND NOT (`r`.`NotUsed`)
Executed DbCommand (234ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (384ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedies` AS `r`
WHERE (`r`.`UserId` = @__Id_0) AND NOT (`r`.`NotUsed`)
Executed DbCommand (234ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (240ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (209ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (218ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (259ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (216ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (213ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (226ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (224ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (235ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (218ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (241ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedies` AS `r`
WHERE `r`.`Id` = @__p_0
LIMIT 1
Executed DbCommand (227ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (209ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedies` AS `r`
WHERE `r`.`Id` = @__p_0
LIMIT 1
Executed DbCommand (208ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (210ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (216ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (302ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Time:12.05.2023 21:38:15 Hello APP
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: G:\2BAD\VitatrackerB2\MedicineReminderAPI
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (290ms) [Parameters=[@__auth_Email_0='?' (Size = 64)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE `u`.`Email` = @__auth_Email_0
LIMIT 1
Executed DbCommand (218ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (218ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedies` AS `r`
WHERE (`r`.`UserId` = @__Id_0) AND NOT (`r`.`NotUsed`)
Executed DbCommand (221ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (215ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedies` AS `r`
WHERE (`r`.`UserId` = @__Id_0) AND NOT (`r`.`NotUsed`)
Executed DbCommand (223ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (229ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (214ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (216ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (215ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (216ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (215ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (216ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (217ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (214ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (216ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (232ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedies` AS `r`
WHERE `r`.`Id` = @__p_0
LIMIT 1
Executed DbCommand (215ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (216ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (215ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (214ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (215ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedies` AS `r`
WHERE `r`.`Id` = @__p_0
LIMIT 1
Executed DbCommand (215ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (222ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (215ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedies` AS `r`
WHERE (`r`.`UserId` = @__user_Id_0) AND NOT (`r`.`NotUsed`)
Executed DbCommand (222ms) [Parameters=[@__r_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__r_Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (215ms) [Parameters=[@__r_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__r_Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (224ms) [Parameters=[@__r_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__r_Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (239ms) [Parameters=[@__r_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__r_Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (216ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (226ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedies` AS `r`
WHERE (`r`.`UserId` = @__user_Id_0) AND NOT (`r`.`NotUsed`)
Executed DbCommand (236ms) [Parameters=[@__r_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__r_Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (260ms) [Parameters=[@__r_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__r_Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (323ms) [Parameters=[@__r_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__r_Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (230ms) [Parameters=[@__r_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__r_Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (230ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (236ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (216ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (215ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (222ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (231ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (216ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (227ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedies` AS `r`
WHERE `r`.`Id` = @__p_0
LIMIT 1
Executed DbCommand (227ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (229ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (225ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (224ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (224ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE `c`.`Id` = @__p_0
LIMIT 1
Executed DbCommand (224ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (225ms) [Parameters=[@__course_RemedyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedies` AS `r`
WHERE `r`.`Id` = @__course_RemedyId_0
LIMIT 1
Executed DbCommand (227ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (230ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE `c`.`Id` = @__p_0
LIMIT 1
Executed DbCommand (224ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (224ms) [Parameters=[@__course_RemedyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedies` AS `r`
WHERE `r`.`Id` = @__course_RemedyId_0
LIMIT 1
Executed DbCommand (223ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE `c`.`Id` = @__p_0
LIMIT 1
Executed DbCommand (225ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (229ms) [Parameters=[@__course_RemedyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedies` AS `r`
WHERE `r`.`Id` = @__course_RemedyId_0
LIMIT 1
Executed DbCommand (224ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (226ms) [Parameters=[@p12='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (DbType = DateTime), @p2='?' (DbType = Int64), @p3='?' (DbType = Int64), @p4='?' (DbType = Boolean), @p5='?' (DbType = Boolean), @p6='?' (DbType = Boolean), @p7='?' (DbType = Int32), @p8='?' (DbType = Int32), @p9='?' (DbType = Int64), @p10='?' (DbType = Int64), @p11='?' (DbType = DateTime), @p14='?' (DbType = Int32), @p13='?' (DbType = Boolean)], CommandType='Text', CommandTimeout='30']
UPDATE `Courses` SET `Comment` = @p0, `Created` = @p1, `EndDate` = @p2, `Interval` = @p3, `IsFinished` = @p4, `IsInfinite` = @p5, `NotUsed` = @p6, `Regime` = @p7, `RemedyId` = @p8, `RemindDate` = @p9, `StartDate` = @p10, `Updated` = @p11
WHERE `Id` = @p12;
SELECT ROW_COUNT();

UPDATE `Usages` SET `NotUsed` = @p13
WHERE `Id` = @p14;
SELECT ROW_COUNT();
Executed DbCommand (217ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (217ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedies` AS `r`
WHERE (`r`.`UserId` = @__user_Id_0) AND NOT (`r`.`NotUsed`)
Executed DbCommand (216ms) [Parameters=[@__r_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__r_Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (217ms) [Parameters=[@__r_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__r_Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (217ms) [Parameters=[@__r_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__r_Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (216ms) [Parameters=[@__r_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__r_Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (216ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (222ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (217ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (216ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (215ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (215ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (215ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (220ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedies` AS `r`
WHERE (`r`.`UserId` = @__user_Id_0) AND NOT (`r`.`NotUsed`)
Executed DbCommand (216ms) [Parameters=[@__r_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__r_Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (216ms) [Parameters=[@__r_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__r_Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (216ms) [Parameters=[@__r_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__r_Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (221ms) [Parameters=[@__r_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__r_Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (215ms) [Parameters=[@__c_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__c_Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (216ms) [Parameters=[@__c_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__c_Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (215ms) [Parameters=[@__c_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__c_Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (215ms) [Parameters=[@__c_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__c_Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (218ms) [Parameters=[@__c_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__c_Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (215ms) [Parameters=[@__c_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__c_Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (206ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedies` AS `r`
WHERE `r`.`Id` = @__p_0
LIMIT 1
Executed DbCommand (208ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (209ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (206ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (212ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedies` AS `r`
WHERE `r`.`Id` = @__p_0
LIMIT 1
Executed DbCommand (209ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (210ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (211ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (212ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean), @p16='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (Size = 4000), @p5='?' (DbType = DateTime), @p6='?' (Size = 4000), @p7='?' (DbType = Int32), @p8='?' (DbType = Int32), @p9='?' (DbType = Int32), @p10='?' (Size = 128), @p11='?' (DbType = Boolean), @p12='?' (Size = 4000), @p13='?' (DbType = Int32), @p14='?' (DbType = DateTime), @p15='?' (DbType = Int32), @p18='?' (DbType = Int32), @p17='?' (DbType = Boolean), @p20='?' (DbType = Int32), @p19='?' (DbType = Boolean), @p22='?' (DbType = Int32), @p21='?' (DbType = Boolean)], CommandType='Text', CommandTimeout='30']
UPDATE `Courses` SET `NotUsed` = @p0
WHERE `Id` = @p1;
SELECT ROW_COUNT();

UPDATE `Remedies` SET `BeforeFood` = @p2, `Color` = @p3, `Comment` = @p4, `Created` = @p5, `Description` = @p6, `Dose` = @p7, `Icon` = @p8, `MeasureUnit` = @p9, `Name` = @p10, `NotUsed` = @p11, `Photo` = @p12, `Type` = @p13, `Updated` = @p14, `UserId` = @p15
WHERE `Id` = @p16;
SELECT ROW_COUNT();

UPDATE `Usages` SET `NotUsed` = @p17
WHERE `Id` = @p18;
SELECT ROW_COUNT();

UPDATE `Usages` SET `NotUsed` = @p19
WHERE `Id` = @p20;
SELECT ROW_COUNT();

UPDATE `Usages` SET `NotUsed` = @p21
WHERE `Id` = @p22;
SELECT ROW_COUNT();
Executed DbCommand (217ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedies` AS `r`
WHERE `r`.`Id` = @__p_0
LIMIT 1
Executed DbCommand (218ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (216ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (217ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedies` AS `r`
WHERE (`r`.`UserId` = @__Id_0) AND NOT (`r`.`NotUsed`)
Executed DbCommand (220ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (217ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (216ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (216ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (216ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (217ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (216ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (218ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (216ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (218ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedies` AS `r`
WHERE (`r`.`UserId` = @__user_Id_0) AND NOT (`r`.`NotUsed`)
Executed DbCommand (217ms) [Parameters=[@__r_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__r_Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (218ms) [Parameters=[@__r_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__r_Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (221ms) [Parameters=[@__r_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__r_Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (216ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (217ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (217ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (218ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (217ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (234ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE `c`.`Id` = @__p_0
LIMIT 1
Executed DbCommand (252ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (251ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (225ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedies` AS `r`
WHERE (`r`.`UserId` = @__user_Id_0) AND NOT (`r`.`NotUsed`)
Executed DbCommand (232ms) [Parameters=[@__r_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__r_Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (232ms) [Parameters=[@__r_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__r_Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (227ms) [Parameters=[@__r_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Comment`, `c`.`Created`, `c`.`EndDate`, `c`.`Interval`, `c`.`IsFinished`, `c`.`IsInfinite`, `c`.`NotUsed`, `c`.`Regime`, `c`.`RemedyId`, `c`.`RemindDate`, `c`.`StartDate`, `c`.`Updated`
FROM `Courses` AS `c`
WHERE (`c`.`RemedyId` = @__r_Id_0) AND NOT (`c`.`NotUsed`)
Executed DbCommand (223ms) [Parameters=[@__c_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__c_Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (265ms) [Parameters=[@__c_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__c_Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (297ms) [Parameters=[@__c_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__c_Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (322ms) [Parameters=[@__c_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__c_Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (246ms) [Parameters=[@__c_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`CourseId`, `u`.`Created`, `u`.`FactUseTime`, `u`.`NotUsed`, `u`.`Quantity`, `u`.`Updated`, `u`.`UseTime`
FROM `Usages` AS `u`
WHERE (`u`.`CourseId` = @__c_Id_0) AND NOT (`u`.`NotUsed`)
Executed DbCommand (217ms) [Parameters=[@__user_Email_0='?' (Size = 64)], CommandType='Text', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM `Users` AS `u`
    WHERE `u`.`Email` = @__user_Email_0)
Time:12.05.2023 22:03:07 Hello APP
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: G:\2BAD\VitatrackerB2\MedicineReminderAPI
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (286ms) [Parameters=[@__auth_Email_0='?' (Size = 64)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE `u`.`Email` = @__auth_Email_0
LIMIT 1
Executed DbCommand (215ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Time:12.05.2023 22:23:54 Hello APP
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: G:\2BAD\VitatrackerB2\MedicineReminderAPI
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (285ms) [Parameters=[@__auth_Email_0='?' (Size = 64)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE `u`.`Email` = @__auth_Email_0
LIMIT 1
Executed DbCommand (224ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (233ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `n`.`Id`, `n`.`IsEnabled`, `n`.`IsFloat`, `n`.`MedicalControl`, `n`.`NextCourseStart`, `n`.`UserId`
FROM `NotificationSettings` AS `n`
WHERE `n`.`Id` = @__user_Id_0
LIMIT 1
Time:12.05.2023 23:31:14 Hello APP
Now listening on: http://localhost:5292
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: G:\2BAD\VitatrackerB2\MedicineReminderAPI
The 'bool' property 'IsEnabled' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
The 'bool' property 'NextCourseStart' on entity type 'NotificationSetting' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead, so that the default will only be used for inserts when the property value is 'null'.
Executed DbCommand (282ms) [Parameters=[@__auth_Email_0='?' (Size = 64)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE `u`.`Email` = @__auth_Email_0
LIMIT 1
Executed DbCommand (216ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (219ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT `r`.`Id`, `r`.`BeforeFood`, `r`.`Color`, `r`.`Comment`, `r`.`Created`, `r`.`Description`, `r`.`Dose`, `r`.`Icon`, `r`.`MeasureUnit`, `r`.`Name`, `r`.`NotUsed`, `r`.`Photo`, `r`.`Type`, `r`.`Updated`, `r`.`UserId`
FROM `Remedies` AS `r`
WHERE (`r`.`UserId` = @__Id_0) AND NOT (`r`.`NotUsed`)
Executed DbCommand (218ms) [Parameters=[@__claim_Value_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT `u`.`Id`, `u`.`Avatar`, `u`.`Created`, `u`.`Email`, `u`.`Name`, `u`.`NotUsed`, `u`.`Password`, `u`.`Updated`
FROM `Users` AS `u`
WHERE CAST(`u`.`Id` AS char) = @__claim_Value_0
LIMIT 1
Executed DbCommand (220ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (Size = 4000), @p3='?' (Size = 4000), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32), @p7='?' (Size = 128), @p8='?' (Size = 4000), @p9='?' (DbType = Int32), @p10='?' (DbType = Int32), @p11='?' (DbType = Int32), @p12='?' (DbType = Int32), @p13='?' (Size = 4000), @p14='?' (Size = 4000), @p15='?' (DbType = Int32), @p16='?' (DbType = Int32), @p17='?' (DbType = Int32), @p18='?' (Size = 128), @p19='?' (Size = 4000), @p20='?' (DbType = Int32), @p21='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
INSERT INTO `Remedies` (`BeforeFood`, `Color`, `Comment`, `Description`, `Dose`, `Icon`, `MeasureUnit`, `Name`, `Photo`, `Type`, `UserId`)
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10);
SELECT `Id`, `Created`, `NotUsed`, `Updated`
FROM `Remedies`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();

INSERT INTO `Remedies` (`BeforeFood`, `Color`, `Comment`, `Description`, `Dose`, `Icon`, `MeasureUnit`, `Name`, `Photo`, `Type`, `UserId`)
VALUES (@p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21);
SELECT `Id`, `Created`, `NotUsed`, `Updated`
FROM `Remedies`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();
Executed DbCommand (214ms) [Parameters=[@p22='?' (Size = 4000), @p23='?' (DbType = Int64), @p24='?' (DbType = Int64), @p25='?' (DbType = Int32), @p26='?' (DbType = Int32), @p27='?' (DbType = Int64), @p28='?' (DbType = Int64), @p29='?' (Size = 4000), @p30='?' (DbType = Int64), @p31='?' (DbType = Int64), @p32='?' (DbType = Int32), @p33='?' (DbType = Int32), @p34='?' (DbType = Int64), @p35='?' (DbType = Int64)], CommandType='Text', CommandTimeout='30']
INSERT INTO `Courses` (`Comment`, `EndDate`, `Interval`, `Regime`, `RemedyId`, `RemindDate`, `StartDate`)
VALUES (@p22, @p23, @p24, @p25, @p26, @p27, @p28);
SELECT `Id`, `Created`, `IsFinished`, `IsInfinite`, `NotUsed`, `Updated`
FROM `Courses`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();

INSERT INTO `Courses` (`Comment`, `EndDate`, `Interval`, `Regime`, `RemedyId`, `RemindDate`, `StartDate`)
VALUES (@p29, @p30, @p31, @p32, @p33, @p34, @p35);
SELECT `Id`, `Created`, `IsFinished`, `IsInfinite`, `NotUsed`, `Updated`
FROM `Courses`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();
Executed DbCommand (210ms) [Parameters=[@p36='?' (DbType = Int32), @p37='?' (DbType = Int64), @p38='?' (DbType = Int32), @p39='?' (DbType = Int64), @p40='?' (DbType = Int32), @p41='?' (DbType = Int64), @p42='?' (DbType = Int32), @p43='?' (DbType = Int64), @p44='?' (DbType = Int32), @p45='?' (DbType = Int64), @p46='?' (DbType = Int32), @p47='?' (DbType = Int64), @p48='?' (DbType = Int32), @p49='?' (DbType = Int64), @p50='?' (DbType = Int32), @p51='?' (DbType = Int64)], CommandType='Text', CommandTimeout='30']
INSERT INTO `Usages` (`CourseId`, `FactUseTime`, `Quantity`, `UseTime`)
VALUES (@p36, @p37, @p38, @p39);
SELECT `Id`, `Created`, `NotUsed`, `Updated`
FROM `Usages`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();

INSERT INTO `Usages` (`CourseId`, `FactUseTime`, `Quantity`, `UseTime`)
VALUES (@p40, @p41, @p42, @p43);
SELECT `Id`, `Created`, `NotUsed`, `Updated`
FROM `Usages`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();

INSERT INTO `Usages` (`CourseId`, `FactUseTime`, `Quantity`, `UseTime`)
VALUES (@p44, @p45, @p46, @p47);
SELECT `Id`, `Created`, `NotUsed`, `Updated`
FROM `Usages`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();

INSERT INTO `Usages` (`CourseId`, `FactUseTime`, `Quantity`, `UseTime`)
VALUES (@p48, @p49, @p50, @p51);
SELECT `Id`, `Created`, `NotUsed`, `Updated`
FROM `Usages`
WHERE ROW_COUNT() = 1 AND `Id` = LAST_INSERT_ID();
